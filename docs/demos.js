// Generated by Haxe 3.4.0
(function ($global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var DateTools = function() { };
DateTools.__name__ = ["DateTools"];
DateTools.getMonthDays = function(d) {
	var month = d.getMonth();
	var year = d.getFullYear();
	if(month != 1) {
		return DateTools.DAYS_OF_MONTH[month];
	}
	var isB = year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
	if(isB) {
		return 29;
	} else {
		return 28;
	}
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			var tmp = this.r;
			var tmp1 = len < 0 ? s : HxOverrides.substr(s,0,pos + len);
			this.r.m = tmp.exec(tmp1);
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var Shape1DIterator = function(line) {
	this.line = line;
	this.i = 0;
};
Shape1DIterator.__name__ = ["Shape1DIterator"];
Shape1DIterator.prototype = {
	line: null
	,i: null
	,hasNext: function() {
		return this.i < 2;
	}
	,next: function() {
		var p;
		var _g = this.i;
		if(_g == 0) {
			p = this.line.a;
		} else {
			p = this.line.b;
		}
		this.i++;
		return p;
	}
	,__class__: Shape1DIterator
};
var Shape1D = function(a,b) {
	this.a = a;
	this.b = b;
};
Shape1D.__name__ = ["Shape1D"];
Shape1D.prototype = {
	a: null
	,b: null
	,points: function() {
		return new Shape1DIterator(this);
	}
	,__class__: Shape1D
};
var Simplex = function() {
	this.points = [];
};
Simplex.__name__ = ["Simplex"];
Simplex.prototype = {
	points: null
	,centre: function() {
		return (this.points[0] + this.points[1]) / 2.0;
	}
	,coversOrigin: function() {
		var _g = this.points.length;
		switch(_g) {
		case 1:
			return false;
		case 2:
			if(!(this.points[0] <= 0 && this.points[1] >= 0)) {
				if(this.points[0] >= 0) {
					return this.points[1] <= 0;
				} else {
					return false;
				}
			} else {
				return true;
			}
			break;
		default:
			return false;
		}
	}
	,__class__: Simplex
};
var GJK1D = function(canvas,name) {
	this.canvas = canvas;
	canvas.display(name);
};
GJK1D.__name__ = ["GJK1D"];
GJK1D.prototype = {
	canvas: null
	,map: function(x) {
		return (x + 20) / 40 * this.canvas.width;
	}
	,drawDot: function(x,y,colour) {
		if(colour == null) {
			colour = thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.black);
		}
		this.canvas.dot((x + 20) / 40 * this.canvas.width,y,4.0,colour);
	}
	,drawShape1D: function(line,y,colour) {
		if(colour == null) {
			colour = thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.black);
		}
		this.drawDot(line.a,y,colour);
		this.canvas.line((line.a + 20) / 40 * this.canvas.width,y,(line.b + 20) / 40 * this.canvas.width,y,2.0,colour);
		this.drawDot(line.b,y,colour);
	}
	,drawText: function(text,x,y,color) {
		var _gthis = this;
		this.canvas.context(function(ctx,w,h) {
			if(color != null) {
				ctx.fillStyle = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(color);
			}
			ctx.fillText(text,(x + 20) / 40 * _gthis.canvas.width,y + 4);
		});
	}
	,pause: function(t) {
		var trigger = new tink_core_FutureTrigger();
		haxe_Timer.delay(function() {
			trigger.trigger(t);
		},t * 1000.0 | 0);
		return trigger;
	}
	,minkowskiDifference: function(lineA,lineB) {
		var points = [lineA.a - lineB.a,lineA.a - lineB.b,lineA.b - lineB.a,lineA.b - lineB.b];
		var result = new Shape1D(Infinity,-Infinity);
		var _g = 0;
		while(_g < points.length) {
			var point = points[_g];
			++_g;
			if(point < result.a) {
				result.a = point;
			}
			if(point > result.b) {
				result.b = point;
			}
		}
		return result;
	}
	,support: function(a,b,dir) {
		var furthestInDir = function(line,dir1) {
			var furthest = -Infinity;
			var furthestPoint1D = 0;
			var point = line.points();
			while(point.hasNext()) {
				var point1 = point.next();
				var test = point1 * dir1;
				if(test > furthest) {
					furthest = test;
					furthestPoint1D = point1;
				}
			}
			return furthestPoint1D;
		};
		var pa = furthestInDir(a,dir);
		var pb = furthestInDir(b,-dir);
		var pc = pa - pb;
		return pc;
	}
	,demo: function(intersect) {
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.async(function(__return) {
			try {
				var __doCount = 0;
				var __t0_break = function() {
				};
				var __t0_continue = null;
				__t0_continue = function() {
					var __do = function() {
						__doCount += 1;
						if(__doCount - 1 == 0) {
							while(true) {
								_gthis.canvas.clear().dotGrid(10,10,0.5,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.lightgrey)).lineVertical(_gthis.canvas.width / 2 + 0.5,1.0,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.black)).context((function() {
									return function(ctx,w,h) {
										ctx.font = "16px monospace";
									};
								})());
								var y = [10];
								var lineA = [new Shape1D(-6,intersect ? -2 : 2)];
								var lineB = [new Shape1D(intersect ? 1 : -2,5)];
								_gthis.pause(1.0).handle((function(lineB1,lineA1,y1) {
									return function(__t1) {
										try {
											var __t1_result;
											var _g = tink_await_OutcomeTools.getOutcome(null,__t1);
											switch(_g[1]) {
											case 0:
												var v = _g[2];
												__t1_result = v;
												break;
											case 1:
												var e = _g[2];
												__return(tink_core_Outcome.Failure(e));
												return;
											}
											_gthis.drawShape1D(lineA1[0],y1[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.red));
											_gthis.drawText("line 1",lineA1[0].b + 1,y1[0]);
											y1[0] += 20;
											_gthis.pause(1.0).handle((function(lineB2,lineA2,y2) {
												return function(__t2) {
													try {
														var __t2_result;
														var _g1 = tink_await_OutcomeTools.getOutcome(null,__t2);
														switch(_g1[1]) {
														case 0:
															var v1 = _g1[2];
															__t2_result = v1;
															break;
														case 1:
															var e1 = _g1[2];
															__return(tink_core_Outcome.Failure(e1));
															return;
														}
														_gthis.drawShape1D(lineB2[0],y2[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.orange));
														_gthis.drawText("line 2",lineB2[0].b + 1,y2[0]);
														y2[0] += 20;
														_gthis.pause(1.0).handle((function(lineB3,lineA3,y3) {
															return function(__t3) {
																try {
																	var __t3_result;
																	var _g2 = tink_await_OutcomeTools.getOutcome(null,__t3);
																	switch(_g2[1]) {
																	case 0:
																		var v2 = _g2[2];
																		__t3_result = v2;
																		break;
																	case 1:
																		var e2 = _g2[2];
																		__return(tink_core_Outcome.Failure(e2));
																		return;
																	}
																	var m = _gthis.minkowskiDifference(lineA3[0],lineB3[0]);
																	_gthis.drawShape1D(m,y3[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.blue));
																	_gthis.drawText("minkowski difference",m.b + 1,y3[0]);
																	y3[0] += 20;
																	_gthis.pause(3.0).handle((function(lineB4,lineA4,y4) {
																		return function(__t4) {
																			try {
																				var __t4_result;
																				var _g3 = tink_await_OutcomeTools.getOutcome(null,__t4);
																				switch(_g3[1]) {
																				case 0:
																					var v3 = _g3[2];
																					__t4_result = v3;
																					break;
																				case 1:
																					var e3 = _g3[2];
																					__return(tink_core_Outcome.Failure(e3));
																					return;
																				}
																				_gthis.drawText("supports:",-20,y4[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.green));
																				y4[0] += 20;
																				var supports = [];
																				var __do1 = _gthis.support(lineA4[0],lineB4[0],1);
																				supports.push(__do1);
																				var __do2 = _gthis.support(lineA4[0],lineB4[0],-1);
																				supports.push(__do2);
																				var sName = "a";
																				var __iterator = $iterator(supports)();
																				var __doCount1 = 0;
																				var __t5_break = (function(y5) {
																					return function() {
																						y5[0] += 20;
																						_gthis.pause(1.0).handle((function(y6) {
																							return function(__t6) {
																								try {
																									var __t6_result;
																									var _g4 = tink_await_OutcomeTools.getOutcome(null,__t6);
																									switch(_g4[1]) {
																									case 0:
																										var v4 = _g4[2];
																										__t6_result = v4;
																										break;
																									case 1:
																										var e4 = _g4[2];
																										__return(tink_core_Outcome.Failure(e4));
																										return;
																									}
																									var simplex = new Simplex();
																									simplex.points = supports;
																									if(simplex.coversOrigin()) {
																										_gthis.drawText("simplex covers origin",-20,y6[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.black));
																										y6[0] += 20;
																										_gthis.drawText(" -> intersection detected!",-20,y6[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.green));
																									} else {
																										_gthis.drawText("simplex doesn't cover origin",-20,y6[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.black));
																										y6[0] += 20;
																										_gthis.drawText(" -> no intersection!",-20,y6[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.green));
																									}
																									_gthis.pause(5.0).handle((function() {
																										return function(__t7) {
																											try {
																												var __t7_result;
																												var _g5 = tink_await_OutcomeTools.getOutcome(null,__t7);
																												switch(_g5[1]) {
																												case 0:
																													var v5 = _g5[2];
																													__t7_result = v5;
																													break;
																												case 1:
																													var e5 = _g5[2];
																													__return(tink_core_Outcome.Failure(e5));
																													return;
																												}
																												__t0_continue();
																											} catch( e6 ) {
																												haxe_CallStack.lastException = e6;
																												if (e6 instanceof js__$Boot_HaxeError) e6 = e6.val;
																												__return(tink_core_Outcome.Failure(e6));
																											}
																										};
																									})());
																								} catch( e7 ) {
																									haxe_CallStack.lastException = e7;
																									if (e7 instanceof js__$Boot_HaxeError) e7 = e7.val;
																									__return(tink_core_Outcome.Failure(e7));
																								}
																							};
																						})(y5));
																					};
																				})(y4);
																				var __t5_continue = null;
																				__t5_continue = (function(y7) {
																					return function() {
																						var __do3 = (function(y8) {
																							return function() {
																								__doCount1 += 1;
																								if(__doCount1 - 1 == 0) {
																									while(true) {
																										var point = __iterator.next();
																										_gthis.drawDot(point,y8[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.green));
																										_gthis.drawText(sName,point + 1,y8[0]);
																										sName = String.fromCharCode(HxOverrides.cca(sName,0) + 1);
																										_gthis.pause(1.0).handle((function() {
																											return function(__t8) {
																												try {
																													var __t8_result;
																													var _g41 = tink_await_OutcomeTools.getOutcome(null,__t8);
																													switch(_g41[1]) {
																													case 0:
																														var v6 = _g41[2];
																														__t8_result = v6;
																														break;
																													case 1:
																														var e8 = _g41[2];
																														__return(tink_core_Outcome.Failure(e8));
																														return;
																													}
																													__t5_continue();
																												} catch( e9 ) {
																													haxe_CallStack.lastException = e9;
																													if (e9 instanceof js__$Boot_HaxeError) e9 = e9.val;
																													__return(tink_core_Outcome.Failure(e9));
																												}
																											};
																										})());
																										if(!((__doCount1 -= 1) != 0)) {
																											break;
																										}
																									}
																								}
																							};
																						})(y7);
																						if(__iterator.hasNext()) {
																							__do3();
																						} else {
																							__t5_break();
																						}
																					};
																				})(y4);
																				var __t5_continue1 = __t5_continue;
																				__t5_continue1();
																			} catch( e10 ) {
																				haxe_CallStack.lastException = e10;
																				if (e10 instanceof js__$Boot_HaxeError) e10 = e10.val;
																				__return(tink_core_Outcome.Failure(e10));
																			}
																		};
																	})(lineB3,lineA3,y3));
																} catch( e11 ) {
																	haxe_CallStack.lastException = e11;
																	if (e11 instanceof js__$Boot_HaxeError) e11 = e11.val;
																	__return(tink_core_Outcome.Failure(e11));
																}
															};
														})(lineB2,lineA2,y2));
													} catch( e12 ) {
														haxe_CallStack.lastException = e12;
														if (e12 instanceof js__$Boot_HaxeError) e12 = e12.val;
														__return(tink_core_Outcome.Failure(e12));
													}
												};
											})(lineB1,lineA1,y1));
										} catch( e13 ) {
											haxe_CallStack.lastException = e13;
											if (e13 instanceof js__$Boot_HaxeError) e13 = e13.val;
											__return(tink_core_Outcome.Failure(e13));
										}
									};
								})(lineB,lineA,y));
								if(!((__doCount -= 1) != 0)) {
									break;
								}
							}
						}
					};
					__do();
				};
				var __t0_continue1 = __t0_continue;
				__t0_continue1();
			} catch( e14 ) {
				haxe_CallStack.lastException = e14;
				if (e14 instanceof js__$Boot_HaxeError) e14 = e14.val;
				__return(tink_core_Outcome.Failure(e14));
			}
		});
	}
	,__class__: GJK1D
};
var Shape2D = function() {
	this.vertices = [];
};
Shape2D.__name__ = ["Shape2D"];
Shape2D.convexHull = function(verts) {
	var ccw = function(p1,p2,p3) {
		var area = (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]);
		if(area > 0) {
			return -1;
		}
		if(area < 0) {
			return 1;
		}
		return 0;
	};
	var startVert = null;
	var this1 = new Float32Array(4);
	this1[0] = Infinity;
	this1[1] = Infinity;
	var lowest = this1;
	var _g = 0;
	while(_g < verts.length) {
		var vert = verts[_g];
		++_g;
		if(vert[1] < lowest[1]) {
			lowest[1] = vert[1];
			lowest[0] = vert[0];
			startVert = vert;
		} else if(vert[1] == lowest[1]) {
			if(vert[0] < lowest[0]) {
				lowest[1] = vert[1];
				lowest[0] = vert[0];
				startVert = vert;
			}
		}
	}
	verts.sort(function(a,b) {
		var angleA = Math.atan2(a[1] - startVert[1],a[0] - startVert[0]);
		var angleB = Math.atan2(b[1] - startVert[1],b[0] - startVert[0]);
		if(Math.abs(angleA - angleB) <= 0.0000001) {
			return 0;
		}
		if(angleA > angleB) {
			return 1;
		}
		return -1;
	});
	var hull = [];
	hull.push(verts[0]);
	hull.push(verts[1]);
	hull.push(verts[2]);
	var _g1 = 3;
	var _g2 = verts.length;
	while(_g1 < _g2) {
		var i = _g1++;
		var top = hull.pop();
		while(ccw(hull[hull.length - 1],top,verts[i]) != -1) top = hull.pop();
		hull.push(top);
		hull.push(verts[i]);
	}
	var shape = new Shape2D();
	shape.vertices = hull;
	return shape;
};
Shape2D.minkowskiDifference = function(a,b) {
	var verts = [];
	var _g = 0;
	var _g1 = a.vertices;
	while(_g < _g1.length) {
		var va = _g1[_g];
		++_g;
		var _g2 = 0;
		var _g3 = b.vertices;
		while(_g2 < _g3.length) {
			var vb = _g3[_g2];
			++_g2;
			var this1 = new Float32Array(4);
			this1[0] = 0;
			this1[1] = 0;
			var dest = this1;
			dest[0] = va[0] - vb[0];
			dest[1] = va[1] - vb[1];
			verts.push(dest);
		}
	}
	return Shape2D.convexHull(verts);
};
Shape2D.prototype = {
	vertices: null
	,centre: function() {
		var x = 0;
		var y = 0;
		var _g = 0;
		var _g1 = this.vertices;
		while(_g < _g1.length) {
			var vertex = _g1[_g];
			++_g;
			x += vertex[0];
			y += vertex[1];
		}
		x /= this.vertices.length;
		y /= this.vertices.length;
		var this1 = new Float32Array(4);
		this1[0] = x;
		this1[1] = y;
		return this1;
	}
	,support: function(direction) {
		var d = -Infinity;
		var p = null;
		var _g = 0;
		var _g1 = this.vertices;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var dot = v[0] * direction[0] + v[1] * direction[1];
			if(dot > d) {
				d = dot;
				p = v;
			}
		}
		return p;
	}
	,__class__: Shape2D
};
var Simplex2D = function(container) {
	this.containsOrigin = false;
	Shape2D.call(this);
	this.container = container;
	var this1 = new Float32Array(4);
	this1[0] = 1;
	this1[1] = 0;
	this.direction = this1;
};
Simplex2D.__name__ = ["Simplex2D"];
Simplex2D.__super__ = Shape2D;
Simplex2D.prototype = $extend(Shape2D.prototype,{
	container: null
	,direction: null
	,containsOrigin: null
	,cross: function(a,b) {
		var this1 = new Float32Array(4);
		this1[0] = a[1] * b[2] - a[2] * b[1];
		this1[1] = a[2] * b[0] - a[0] * b[2];
		this1[2] = a[0] * b[1] - a[1] * b[0];
		return this1;
	}
	,tripleProduct: function(a,b,c) {
		var this1 = new Float32Array(4);
		this1[0] = a[0];
		this1[1] = a[1];
		this1[2] = 0;
		var A = this1;
		var this2 = new Float32Array(4);
		this2[0] = b[0];
		this2[1] = b[1];
		this2[2] = 0;
		var B = this2;
		var this3 = new Float32Array(4);
		this3[0] = c[0];
		this3[1] = c[1];
		this3[2] = 0;
		var C = this3;
		var first = this.cross(A,B);
		var second = this.cross(first,C);
		var this4 = new Float32Array(4);
		this4[0] = second[0];
		this4[1] = second[1];
		return this4;
	}
	,addSupport: function() {
		var newVert = this.container.support(this.direction);
		this.vertices.push(newVert);
		var b = this.direction;
		return newVert[0] * b[0] + newVert[1] * b[1] > 0;
	}
	,evolvePastOrigin: function() {
		var _g = this.vertices.length;
		switch(_g) {
		case 0:
			return this.addSupport();
		case 1:
			var a = this.direction;
			var this1 = new Float32Array(4);
			this1[0] = 0;
			this1[1] = 0;
			var dest = this1;
			dest[0] = a[0] * -1;
			dest[1] = a[1] * -1;
			this.direction = dest;
			return this.addSupport();
		case 2:
			var a1 = this.vertices[1];
			var b = this.vertices[0];
			var this2 = new Float32Array(4);
			this2[0] = 0;
			this2[1] = 0;
			var dest1 = this2;
			dest1[0] = a1[0] - b[0];
			dest1[1] = a1[1] - b[1];
			var ab = dest1;
			var a2 = this.vertices[0];
			var this3 = new Float32Array(4);
			this3[0] = 0;
			this3[1] = 0;
			var dest2 = this3;
			dest2[0] = a2[0] * -1;
			dest2[1] = a2[1] * -1;
			var a0 = dest2;
			this.direction = this.tripleProduct(ab,a0,ab);
			return this.addSupport();
		case 3:
			var a3 = this.vertices[2];
			var b1 = this.vertices[1];
			var c = this.vertices[0];
			var this4 = new Float32Array(4);
			this4[0] = 0;
			this4[1] = 0;
			var dest3 = this4;
			dest3[0] = a3[0] * -1;
			dest3[1] = a3[1] * -1;
			var a01 = dest3;
			var this5 = new Float32Array(4);
			this5[0] = 0;
			this5[1] = 0;
			var dest4 = this5;
			dest4[0] = b1[0] - a3[0];
			dest4[1] = b1[1] - a3[1];
			var ab1 = dest4;
			var this6 = new Float32Array(4);
			this6[0] = 0;
			this6[1] = 0;
			var dest5 = this6;
			dest5[0] = c[0] - a3[0];
			dest5[1] = c[1] - a3[1];
			var ac = dest5;
			var abPerp = this.tripleProduct(ac,ab1,ab1);
			var acPerp = this.tripleProduct(ab1,ac,ac);
			if(abPerp[0] * a01[0] + abPerp[1] * a01[1] > 0) {
				HxOverrides.remove(this.vertices,c);
				this.direction = abPerp;
			} else if(acPerp[0] * a01[0] + acPerp[1] * a01[1] > 0) {
				HxOverrides.remove(this.vertices,b1);
				this.direction = acPerp;
			} else {
				this.containsOrigin = true;
				return true;
			}
			return this.addSupport();
		default:
			throw new js__$Boot_HaxeError("Can't have simplex with " + this.vertices.length + " verts!");
		}
	}
	,__class__: Simplex2D
});
var DemoState = { __ename__ : ["DemoState"], __constructs__ : ["NoIntersect","IntersectRandomDirection","IntersectDifferenceDirection"] };
DemoState.NoIntersect = ["NoIntersect",0];
DemoState.NoIntersect.__enum__ = DemoState;
DemoState.IntersectRandomDirection = ["IntersectRandomDirection",1];
DemoState.IntersectRandomDirection.__enum__ = DemoState;
DemoState.IntersectDifferenceDirection = ["IntersectDifferenceDirection",2];
DemoState.IntersectDifferenceDirection.__enum__ = DemoState;
var GJK2D = function(canvas,name) {
	this.canvas = canvas;
	canvas.display(name);
};
GJK2D.__name__ = ["GJK2D"];
GJK2D.prototype = {
	canvas: null
	,mapX: function(x) {
		return (x + 20) / 40 * this.canvas.width;
	}
	,mapY: function(y) {
		return (y + 20) / 40 * this.canvas.height;
	}
	,drawDot: function(x,y,colour) {
		if(colour == null) {
			colour = thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.black);
		}
		this.canvas.dot((x + 20) / 40 * this.canvas.width,(y + 20) / 40 * this.canvas.height,4.0,colour);
	}
	,drawLine: function(x0,y0,x1,y1,colour) {
		if(colour == null) {
			colour = thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.black);
		}
		this.canvas.line((x0 + 20) / 40 * this.canvas.width,(y0 + 20) / 40 * this.canvas.height,(x1 + 20) / 40 * this.canvas.width,(y1 + 20) / 40 * this.canvas.height,2.0,colour);
	}
	,drawShape: function(shape,colour) {
		if(colour == null) {
			colour = thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.black);
		}
		if(shape.vertices.length > 0) {
			this.drawDot(shape.vertices[0][0],shape.vertices[0][1],colour);
		}
		if(shape.vertices.length > 1) {
			this.drawLine(shape.vertices[0][0],shape.vertices[0][1],shape.vertices[shape.vertices.length - 1][0],shape.vertices[shape.vertices.length - 1][1],colour);
		}
		var _g1 = 1;
		var _g = shape.vertices.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.drawDot(shape.vertices[i][0],shape.vertices[i][1],colour);
			this.drawLine(shape.vertices[i - 1][0],shape.vertices[i - 1][1],shape.vertices[i][0],shape.vertices[i][1],colour);
		}
	}
	,drawText: function(text,x,y,color) {
		var _gthis = this;
		this.canvas.context(function(ctx,w,h) {
			if(color != null) {
				ctx.fillStyle = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(color);
			}
			ctx.fillText(text,(x + 20) / 40 * _gthis.canvas.width,(y + 20) / 40 * _gthis.canvas.height + 4);
		});
	}
	,pause: function(t) {
		var trigger = new tink_core_FutureTrigger();
		haxe_Timer.delay(function() {
			trigger.trigger(t);
		},t * 1000.0 | 0);
		return trigger;
	}
	,demo: function(state) {
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.async(function(__return) {
			try {
				var __doCount = 0;
				var __t9_break = function() {
				};
				var __t9_continue = null;
				__t9_continue = function() {
					var __do = function() {
						__doCount += 1;
						if(__doCount - 1 == 0) {
							while(true) {
								_gthis.canvas.clear().dotGrid(10,10,0.5,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.lightgrey)).lineHorizontal(_gthis.canvas.height / 2 + 0.5,1.0,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.black)).lineVertical(_gthis.canvas.width / 2 + 0.5,1.0,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.black)).context((function() {
									return function(ctx,w,h) {
										ctx.font = "16px monospace";
									};
								})());
								var shapeA = [new Shape2D()];
								var shapeA1 = shapeA[0].vertices;
								var this1 = new Float32Array(4);
								this1[0] = -18;
								this1[1] = -18;
								shapeA1.push(this1);
								var shapeA2 = shapeA[0].vertices;
								var this2 = new Float32Array(4);
								this2[0] = -10;
								this2[1] = -18;
								shapeA2.push(this2);
								var shapeA3 = shapeA[0].vertices;
								var this3 = new Float32Array(4);
								this3[0] = -10;
								this3[1] = -13;
								shapeA3.push(this3);
								var shapeA4 = shapeA[0].vertices;
								var this4 = new Float32Array(4);
								this4[0] = -18;
								this4[1] = -13;
								shapeA4.push(this4);
								var shapeB = [new Shape2D()];
								var shapeB1 = shapeB[0].vertices;
								var this5 = new Float32Array(4);
								this5[0] = -9;
								this5[1] = -14;
								shapeB1.push(this5);
								var shapeB2 = shapeB[0].vertices;
								var this6 = new Float32Array(4);
								this6[0] = 0;
								this6[1] = -16;
								shapeB2.push(this6);
								var shapeB3 = shapeB[0].vertices;
								var this7 = new Float32Array(4);
								this7[0] = -7;
								this7[1] = -8;
								shapeB3.push(this7);
								if(state == DemoState.IntersectDifferenceDirection || state == DemoState.IntersectRandomDirection) {
									var _g = 0;
									var _g1 = shapeB[0].vertices;
									while(_g < _g1.length) {
										var vert = _g1[_g];
										++_g;
										vert[0] -= 5;
									}
								}
								var minkowski = [Shape2D.minkowskiDifference(shapeA[0],shapeB[0])];
								_gthis.pause(1.0).handle((function(minkowski1,shapeB4,shapeA5) {
									return function(__t10) {
										try {
											var __t10_result;
											var _g2 = tink_await_OutcomeTools.getOutcome(null,__t10);
											switch(_g2[1]) {
											case 0:
												var v = _g2[2];
												__t10_result = v;
												break;
											case 1:
												var e = _g2[2];
												__return(tink_core_Outcome.Failure(e));
												return;
											}
											_gthis.drawShape(shapeA5[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.red));
											_gthis.drawText("shape 1",2,-18,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.red));
											_gthis.pause(1.0).handle((function(minkowski2,shapeB5,shapeA6) {
												return function(__t11) {
													try {
														var __t11_result;
														var _g11 = tink_await_OutcomeTools.getOutcome(null,__t11);
														switch(_g11[1]) {
														case 0:
															var v1 = _g11[2];
															__t11_result = v1;
															break;
														case 1:
															var e1 = _g11[2];
															__return(tink_core_Outcome.Failure(e1));
															return;
														}
														_gthis.drawShape(shapeB5[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.orange));
														_gthis.drawText("shape 2",2,-16,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.orange));
														_gthis.pause(1.0).handle((function(minkowski3,shapeB6,shapeA7) {
															return function(__t12) {
																try {
																	var __t12_result;
																	var _g21 = tink_await_OutcomeTools.getOutcome(null,__t12);
																	switch(_g21[1]) {
																	case 0:
																		var v2 = _g21[2];
																		__t12_result = v2;
																		break;
																	case 1:
																		var e2 = _g21[2];
																		__return(tink_core_Outcome.Failure(e2));
																		return;
																	}
																	_gthis.drawShape(minkowski3[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.blue));
																	_gthis.drawText("minkowski difference",2,-14,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.blue));
																	var simplex = new Simplex2D(minkowski3[0]);
																	var this8 = new Float32Array(4);
																	this8[0] = 0;
																	this8[1] = 1;
																	simplex.direction = this8;
																	if(state == DemoState.IntersectDifferenceDirection) {
																		var a = shapeB6[0].centre();
																		var b = shapeA7[0].centre();
																		var this9 = new Float32Array(4);
																		this9[0] = 0;
																		this9[1] = 0;
																		var dest = this9;
																		dest[0] = a[0] - b[0];
																		dest[1] = a[1] - b[1];
																		simplex.direction = dest;
																	}
																	_gthis.pause(1.0).handle((function(minkowski4,shapeB7,shapeA8) {
																		return function(__t13) {
																			try {
																				var __t13_result;
																				var _g3 = tink_await_OutcomeTools.getOutcome(null,__t13);
																				switch(_g3[1]) {
																				case 0:
																					var v3 = _g3[2];
																					__t13_result = v3;
																					break;
																				case 1:
																					var e3 = _g3[2];
																					__return(tink_core_Outcome.Failure(e3));
																					return;
																				}
																				var canIntersect = true;
																				var __doCount1 = 0;
																				var __t14_break = (function() {
																					return function() {
																						_gthis.pause(10.0).handle((function() {
																							return function(__t15) {
																								try {
																									var __t15_result;
																									var _g4 = tink_await_OutcomeTools.getOutcome(null,__t15);
																									switch(_g4[1]) {
																									case 0:
																										var v4 = _g4[2];
																										__t15_result = v4;
																										break;
																									case 1:
																										var e4 = _g4[2];
																										__return(tink_core_Outcome.Failure(e4));
																										return;
																									}
																									__t9_continue();
																								} catch( e5 ) {
																									haxe_CallStack.lastException = e5;
																									if (e5 instanceof js__$Boot_HaxeError) e5 = e5.val;
																									__return(tink_core_Outcome.Failure(e5));
																								}
																							};
																						})());
																					};
																				})();
																				var __do1 = null;
																				__do1 = (function(minkowski5,shapeB8,shapeA9) {
																					return function() {
																						var __t14_continue = (function() {
																							return function() {
																								if(canIntersect && !simplex.containsOrigin) {
																									__do1();
																								} else {
																									__t14_break();
																								}
																							};
																						})();
																						__doCount1 += 1;
																						if(__doCount1 - 1 == 0) {
																							while(true) {
																								_gthis.pause(1.0).handle((function(minkowski6,shapeB9,shapeA10) {
																									return function(__t16) {
																										try {
																											var __t16_result;
																											var _g41 = tink_await_OutcomeTools.getOutcome(null,__t16);
																											switch(_g41[1]) {
																											case 0:
																												var v5 = _g41[2];
																												__t16_result = v5;
																												break;
																											case 1:
																												var e6 = _g41[2];
																												__return(tink_core_Outcome.Failure(e6));
																												return;
																											}
																											canIntersect = simplex.evolvePastOrigin();
																											_gthis.canvas.clear().dotGrid(10,10,0.5,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.lightgrey)).lineHorizontal(_gthis.canvas.height / 2 + 0.5,1.0,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.black)).lineVertical(_gthis.canvas.width / 2 + 0.5,1.0,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.black));
																											_gthis.drawShape(shapeA10[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.red));
																											_gthis.drawText("shape 1",2,-18,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.red));
																											_gthis.drawShape(shapeB9[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.orange));
																											_gthis.drawText("shape 2",2,-16,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.orange));
																											_gthis.drawShape(minkowski6[0],thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.blue));
																											_gthis.drawText("minkowski difference",2,-14,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.blue));
																											_gthis.drawShape(simplex,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.green));
																											_gthis.drawText("simplex",2,-12,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.green));
																											if(state == DemoState.IntersectRandomDirection) {
																												_gthis.drawText("Random initial direction choice",-19.5,12,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.blue));
																											} else if(state == DemoState.IntersectDifferenceDirection) {
																												_gthis.drawText("Δ initial direction choice",-19.5,12,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.blue));
																											}
																											if(simplex.containsOrigin) {
																												_gthis.drawText("Intersection found",-19.5,14,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.green));
																											} else {
																												_gthis.drawText("No intersection..",-19.5,14,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.red));
																											}
																											if(!canIntersect) {
																												_gthis.drawText("New support point didn't cross the origin!",-19.5,16,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.orangered));
																												_gthis.drawText("No possible intersection!",-19.5,18,thx_color__$Rgb_Rgb_$Impl_$.toRgbxa(thx_color_palettes_Web.orangered));
																											}
																											__t14_continue();
																										} catch( e7 ) {
																											haxe_CallStack.lastException = e7;
																											if (e7 instanceof js__$Boot_HaxeError) e7 = e7.val;
																											__return(tink_core_Outcome.Failure(e7));
																										}
																									};
																								})(minkowski5,shapeB8,shapeA9));
																								if(!((__doCount1 -= 1) != 0)) {
																									break;
																								}
																							}
																						}
																					};
																				})(minkowski4,shapeB7,shapeA8);
																				var __do2 = __do1;
																				__do2();
																			} catch( e8 ) {
																				haxe_CallStack.lastException = e8;
																				if (e8 instanceof js__$Boot_HaxeError) e8 = e8.val;
																				__return(tink_core_Outcome.Failure(e8));
																			}
																		};
																	})(minkowski3,shapeB6,shapeA7));
																} catch( e9 ) {
																	haxe_CallStack.lastException = e9;
																	if (e9 instanceof js__$Boot_HaxeError) e9 = e9.val;
																	__return(tink_core_Outcome.Failure(e9));
																}
															};
														})(minkowski2,shapeB5,shapeA6));
													} catch( e10 ) {
														haxe_CallStack.lastException = e10;
														if (e10 instanceof js__$Boot_HaxeError) e10 = e10.val;
														__return(tink_core_Outcome.Failure(e10));
													}
												};
											})(minkowski1,shapeB4,shapeA5));
										} catch( e11 ) {
											haxe_CallStack.lastException = e11;
											if (e11 instanceof js__$Boot_HaxeError) e11 = e11.val;
											__return(tink_core_Outcome.Failure(e11));
										}
									};
								})(minkowski,shapeB,shapeA));
								if(!((__doCount -= 1) != 0)) {
									break;
								}
							}
						}
					};
					__do();
				};
				var __t9_continue1 = __t9_continue;
				__t9_continue1();
			} catch( e12 ) {
				haxe_CallStack.lastException = e12;
				if (e12 instanceof js__$Boot_HaxeError) e12 = e12.val;
				__return(tink_core_Outcome.Failure(e12));
			}
		});
	}
	,__class__: GJK2D
};
var HxOverrides = function() { };
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
var Main = function() { };
Main.__name__ = ["Main"];
Main.main = function() {
	var d1_a = new GJK1D(minicanvas_MiniCanvas.create(401,141),"1D No Intersection");
	d1_a.demo(false);
	var d1_2 = new GJK1D(minicanvas_MiniCanvas.create(401,141),"1D Intersection");
	d1_2.demo(true);
	var d2_a = new GJK2D(minicanvas_MiniCanvas.create(401,401),"2D No Intersection");
	d2_a.demo(DemoState.NoIntersect);
	var d2_b = new GJK2D(minicanvas_MiniCanvas.create(401,401),"2D Intersection, bad choice of initial intersection");
	d2_b.demo(DemoState.IntersectRandomDirection);
	var d2_c = new GJK2D(minicanvas_MiniCanvas.create(401,401),"2D Intersection");
	d2_c.demo(DemoState.IntersectDifferenceDirection);
};
Math.__name__ = ["Math"];
var Reflect = function() { };
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = ["StringTools"];
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s += c;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
Type.__name__ = ["Type"];
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var glm_GLM = function() { };
glm_GLM.__name__ = ["glm","GLM"];
glm_GLM.lerp = function(a,b,t) {
	return a + t * (b - a);
};
glm_GLM.translate = function(translation,dest) {
	dest[0] = 1;
	dest[1] = 0;
	dest[2] = 0;
	dest[3] = 0;
	dest[4] = 0;
	dest[5] = 1;
	dest[6] = 0;
	dest[7] = 0;
	dest[8] = 0;
	dest[9] = 0;
	dest[10] = 1;
	dest[11] = 0;
	dest[12] = 0;
	dest[13] = 0;
	dest[14] = 0;
	dest[15] = 1;
	dest[12] = translation[0];
	dest[13] = translation[1];
	dest[14] = translation[2];
	return dest;
};
glm_GLM.rotate = function(rotation,dest) {
	var x2 = rotation[0] + rotation[0];
	var y2 = rotation[1] + rotation[1];
	var z2 = rotation[2] + rotation[2];
	var xx = rotation[0] * x2;
	var xy = rotation[0] * y2;
	var xz = rotation[0] * z2;
	var yy = rotation[1] * y2;
	var yz = rotation[1] * z2;
	var zz = rotation[2] * z2;
	var wx = rotation[3] * x2;
	var wy = rotation[3] * y2;
	var wz = rotation[3] * z2;
	dest[0] = 1 - (yy + zz);
	dest[4] = xy - wz;
	dest[8] = xz + wy;
	dest[12] = 0;
	dest[1] = xy + wz;
	dest[5] = 1 - (xx + zz);
	dest[9] = yz - wx;
	dest[13] = 0;
	dest[2] = xz - wy;
	dest[6] = yz + wx;
	dest[10] = 1 - (xx + yy);
	dest[14] = 0;
	dest[3] = 0;
	dest[7] = 0;
	dest[11] = 0;
	dest[15] = 1;
	return dest;
};
glm_GLM.scale = function(amount,dest) {
	dest[0] = 1;
	dest[1] = 0;
	dest[2] = 0;
	dest[3] = 0;
	dest[4] = 0;
	dest[5] = 1;
	dest[6] = 0;
	dest[7] = 0;
	dest[8] = 0;
	dest[9] = 0;
	dest[10] = 1;
	dest[11] = 0;
	dest[12] = 0;
	dest[13] = 0;
	dest[14] = 0;
	dest[15] = 1;
	dest[0] = amount[0];
	dest[5] = amount[1];
	dest[10] = amount[2];
	return dest;
};
glm_GLM.transform = function(translation,rotation,scale,dest) {
	var x2 = rotation[0] + rotation[0];
	var y2 = rotation[1] + rotation[1];
	var z2 = rotation[2] + rotation[2];
	var xx = rotation[0] * x2;
	var xy = rotation[0] * y2;
	var xz = rotation[0] * z2;
	var yy = rotation[1] * y2;
	var yz = rotation[1] * z2;
	var zz = rotation[2] * z2;
	var wx = rotation[3] * x2;
	var wy = rotation[3] * y2;
	var wz = rotation[3] * z2;
	dest[0] = (1 - (yy + zz)) * scale[0];
	dest[1] = (xy + wz) * scale[0];
	dest[2] = (xz - wy) * scale[0];
	dest[3] = 0;
	dest[4] = (xy - wz) * scale[1];
	dest[5] = (1 - (xx + zz)) * scale[1];
	dest[6] = (yz + wx) * scale[1];
	dest[7] = 0;
	dest[8] = (xz + wy) * scale[2];
	dest[9] = (yz - wx) * scale[2];
	dest[10] = (1 - (xx + yy)) * scale[2];
	dest[11] = 0;
	dest[12] = translation[0];
	dest[13] = translation[1];
	dest[14] = translation[2];
	dest[15] = 1;
	return dest;
};
glm_GLM.lookAt = function(eye,centre,up,dest) {
	var x0;
	var x1;
	var x2;
	var y0;
	var y1;
	var y2;
	var z0;
	var z1;
	var z2;
	var len;
	if(Math.abs(eye[0] - centre[0]) < glm_GLM.EPSILON && Math.abs(eye[1] - centre[1]) < glm_GLM.EPSILON && Math.abs(eye[2] - centre[2]) < glm_GLM.EPSILON) {
		dest[0] = 1;
		dest[1] = 0;
		dest[2] = 0;
		dest[3] = 0;
		dest[4] = 0;
		dest[5] = 1;
		dest[6] = 0;
		dest[7] = 0;
		dest[8] = 0;
		dest[9] = 0;
		dest[10] = 1;
		dest[11] = 0;
		dest[12] = 0;
		dest[13] = 0;
		dest[14] = 0;
		dest[15] = 1;
		return dest;
	}
	z0 = eye[0] - centre[0];
	z1 = eye[1] - centre[1];
	z2 = eye[2] - centre[2];
	len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);
	z0 *= len;
	z1 *= len;
	z2 *= len;
	x0 = up[1] * z2 - up[2] * z1;
	x1 = up[2] * z0 - up[0] * z2;
	x2 = up[0] * z1 - up[1] * z0;
	len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);
	if(len <= glm_GLM.EPSILON) {
		x0 = 0;
		x1 = 0;
		x2 = 0;
	} else {
		len = 1 / len;
		x0 *= len;
		x1 *= len;
		x2 *= len;
	}
	y0 = z1 * x2 - z2 * x1;
	y1 = z2 * x0 - z0 * x2;
	y2 = z0 * x1 - z1 * x0;
	len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);
	if(len <= glm_GLM.EPSILON) {
		y0 = 0;
		y1 = 0;
		y2 = 0;
	} else {
		len = 1 / len;
		y0 *= len;
		y1 *= len;
		y2 *= len;
	}
	dest[0] = x0;
	dest[1] = y0;
	dest[2] = z0;
	dest[3] = 0;
	dest[4] = x1;
	dest[5] = y1;
	dest[6] = z1;
	dest[7] = 0;
	dest[8] = x2;
	dest[9] = y2;
	dest[10] = z2;
	dest[11] = 0;
	dest[12] = -(x0 * eye[0] + x1 * eye[1] + x2 * eye[2]);
	dest[13] = -(y0 * eye[0] + y1 * eye[1] + y2 * eye[2]);
	dest[14] = -(z0 * eye[0] + z1 * eye[1] + z2 * eye[2]);
	dest[15] = 1;
	return dest;
};
glm_GLM.perspective = function(fovy,aspectRatio,near,far,dest) {
	var f = 1 / Math.tan(fovy / 2);
	var nf = 1 / (near - far);
	dest[0] = f / aspectRatio;
	dest[1] = 0;
	dest[2] = 0;
	dest[3] = 0;
	dest[4] = 0;
	dest[5] = f;
	dest[6] = 0;
	dest[7] = 0;
	dest[8] = 0;
	dest[9] = 0;
	dest[10] = (far + near) * nf;
	dest[11] = -1;
	dest[12] = 0;
	dest[13] = 0;
	dest[14] = 2 * far * near * nf;
	dest[15] = 0;
	return dest;
};
glm_GLM.orthographic = function(left,right,bottom,top,near,far,dest) {
	if(far == null) {
		far = 1;
	}
	if(near == null) {
		near = -1;
	}
	var rl = 1 / (right - left);
	var tb = 1 / (top - bottom);
	var fn = 1 / (far - near);
	dest[0] = 2 * rl;
	dest[4] = 0;
	dest[8] = 0;
	dest[12] = -1 * (left + right) * rl;
	dest[1] = 0;
	dest[5] = 2 * tb;
	dest[9] = 0;
	dest[13] = -1 * (top + bottom) * tb;
	dest[2] = 0;
	dest[6] = 0;
	dest[10] = -2 * fn;
	dest[14] = -1 * (far + near) * fn;
	dest[3] = 0;
	dest[7] = 0;
	dest[11] = 0;
	dest[15] = 1;
	return dest;
};
glm_GLM.frustum = function(left,right,bottom,top,near,far,dest) {
	if(far == null) {
		far = 1;
	}
	if(near == null) {
		near = -1;
	}
	var rl = 1 / (right - left);
	var tb = 1 / (top - bottom);
	var nf = 1 / (near - far);
	dest[0] = near * 2 * rl;
	dest[1] = 0;
	dest[2] = 0;
	dest[3] = 0;
	dest[4] = 0;
	dest[5] = near * 2 * tb;
	dest[6] = 0;
	dest[7] = 0;
	dest[8] = (right + left) * tb;
	dest[9] = (top + bottom) * tb;
	dest[10] = (far + near) * nf;
	dest[11] = -1;
	dest[12] = 0;
	dest[13] = 0;
	dest[14] = far * near * 2 * nf;
	dest[15] = 0;
	return dest;
};
var glm__$Mat4_Mat4_$Impl_$ = {};
glm__$Mat4_Mat4_$Impl_$.__name__ = ["glm","_Mat4","Mat4_Impl_"];
glm__$Mat4_Mat4_$Impl_$._new = function(_r0c0,_r0c1,_r0c2,_r0c3,_r1c0,_r1c1,_r1c2,_r1c3,_r2c0,_r2c1,_r2c2,_r2c3,_r3c0,_r3c1,_r3c2,_r3c3) {
	if(_r3c3 == null) {
		_r3c3 = 0;
	}
	if(_r3c2 == null) {
		_r3c2 = 0;
	}
	if(_r3c1 == null) {
		_r3c1 = 0;
	}
	if(_r3c0 == null) {
		_r3c0 = 0;
	}
	if(_r2c3 == null) {
		_r2c3 = 0;
	}
	if(_r2c2 == null) {
		_r2c2 = 0;
	}
	if(_r2c1 == null) {
		_r2c1 = 0;
	}
	if(_r2c0 == null) {
		_r2c0 = 0;
	}
	if(_r1c3 == null) {
		_r1c3 = 0;
	}
	if(_r1c2 == null) {
		_r1c2 = 0;
	}
	if(_r1c1 == null) {
		_r1c1 = 0;
	}
	if(_r1c0 == null) {
		_r1c0 = 0;
	}
	if(_r0c3 == null) {
		_r0c3 = 0;
	}
	if(_r0c2 == null) {
		_r0c2 = 0;
	}
	if(_r0c1 == null) {
		_r0c1 = 0;
	}
	if(_r0c0 == null) {
		_r0c0 = 0;
	}
	var this1 = new Float32Array(16);
	this1[0] = _r0c0;
	this1[1] = _r1c0;
	this1[2] = _r2c0;
	this1[3] = _r3c0;
	this1[4] = _r0c1;
	this1[5] = _r1c1;
	this1[6] = _r2c1;
	this1[7] = _r3c1;
	this1[8] = _r0c2;
	this1[9] = _r1c2;
	this1[10] = _r2c2;
	this1[11] = _r3c2;
	this1[12] = _r0c3;
	this1[13] = _r1c3;
	this1[14] = _r2c3;
	this1[15] = _r3c3;
	return this1;
};
glm__$Mat4_Mat4_$Impl_$.get_r0c0 = function(this1) {
	return this1[0];
};
glm__$Mat4_Mat4_$Impl_$.set_r0c0 = function(this1,v) {
	return this1[0] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r1c0 = function(this1) {
	return this1[1];
};
glm__$Mat4_Mat4_$Impl_$.set_r1c0 = function(this1,v) {
	return this1[1] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r2c0 = function(this1) {
	return this1[2];
};
glm__$Mat4_Mat4_$Impl_$.set_r2c0 = function(this1,v) {
	return this1[2] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r3c0 = function(this1) {
	return this1[3];
};
glm__$Mat4_Mat4_$Impl_$.set_r3c0 = function(this1,v) {
	return this1[3] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r0c1 = function(this1) {
	return this1[4];
};
glm__$Mat4_Mat4_$Impl_$.set_r0c1 = function(this1,v) {
	return this1[4] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r1c1 = function(this1) {
	return this1[5];
};
glm__$Mat4_Mat4_$Impl_$.set_r1c1 = function(this1,v) {
	return this1[5] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r2c1 = function(this1) {
	return this1[6];
};
glm__$Mat4_Mat4_$Impl_$.set_r2c1 = function(this1,v) {
	return this1[6] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r3c1 = function(this1) {
	return this1[7];
};
glm__$Mat4_Mat4_$Impl_$.set_r3c1 = function(this1,v) {
	return this1[7] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r0c2 = function(this1) {
	return this1[8];
};
glm__$Mat4_Mat4_$Impl_$.set_r0c2 = function(this1,v) {
	return this1[8] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r1c2 = function(this1) {
	return this1[9];
};
glm__$Mat4_Mat4_$Impl_$.set_r1c2 = function(this1,v) {
	return this1[9] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r2c2 = function(this1) {
	return this1[10];
};
glm__$Mat4_Mat4_$Impl_$.set_r2c2 = function(this1,v) {
	return this1[10] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r3c2 = function(this1) {
	return this1[11];
};
glm__$Mat4_Mat4_$Impl_$.set_r3c2 = function(this1,v) {
	return this1[11] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r0c3 = function(this1) {
	return this1[12];
};
glm__$Mat4_Mat4_$Impl_$.set_r0c3 = function(this1,v) {
	return this1[12] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r1c3 = function(this1) {
	return this1[13];
};
glm__$Mat4_Mat4_$Impl_$.set_r1c3 = function(this1,v) {
	return this1[13] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r2c3 = function(this1) {
	return this1[14];
};
glm__$Mat4_Mat4_$Impl_$.set_r2c3 = function(this1,v) {
	return this1[14] = v;
};
glm__$Mat4_Mat4_$Impl_$.get_r3c3 = function(this1) {
	return this1[15];
};
glm__$Mat4_Mat4_$Impl_$.set_r3c3 = function(this1,v) {
	return this1[15] = v;
};
glm__$Mat4_Mat4_$Impl_$.get = function(this1,key) {
	return this1[key];
};
glm__$Mat4_Mat4_$Impl_$.arrayWrite = function(this1,key,value) {
	return this1[key] = value;
};
glm__$Mat4_Mat4_$Impl_$.equals = function(this1,b) {
	var equal = true;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(Math.abs(this1[i] - b[i]) >= glm_GLM.EPSILON) {
			equal = false;
			break;
		}
	}
	return equal;
};
glm__$Mat4_Mat4_$Impl_$.toString = function(this1) {
	return "[" + this1[0] + ", " + this1[4] + ", " + this1[8] + ", " + this1[12] + "]\n" + ("[" + this1[1] + ", " + this1[5] + ", " + this1[9] + ", " + this1[13] + "]\n") + ("[" + this1[2] + ", " + this1[6] + ", " + this1[10] + ", " + this1[14] + "]\n") + ("[" + this1[3] + ", " + this1[7] + ", " + this1[11] + ", " + this1[15] + "]\n");
};
glm__$Mat4_Mat4_$Impl_$.identity = function(dest) {
	dest[0] = 1;
	dest[1] = 0;
	dest[2] = 0;
	dest[3] = 0;
	dest[4] = 0;
	dest[5] = 1;
	dest[6] = 0;
	dest[7] = 0;
	dest[8] = 0;
	dest[9] = 0;
	dest[10] = 1;
	dest[11] = 0;
	dest[12] = 0;
	dest[13] = 0;
	dest[14] = 0;
	dest[15] = 1;
	return dest;
};
glm__$Mat4_Mat4_$Impl_$.copy = function(src,dest) {
	dest[0] = src[0];
	dest[1] = src[1];
	dest[2] = src[2];
	dest[3] = src[3];
	dest[4] = src[4];
	dest[5] = src[5];
	dest[6] = src[6];
	dest[7] = src[7];
	dest[8] = src[8];
	dest[9] = src[9];
	dest[10] = src[10];
	dest[11] = src[11];
	dest[12] = src[12];
	dest[13] = src[13];
	dest[14] = src[14];
	dest[15] = src[15];
	return dest;
};
glm__$Mat4_Mat4_$Impl_$.transpose = function(src,dest) {
	var src01 = src[1];
	var src02 = src[2];
	var src03 = src[3];
	var src12 = src[6];
	var src13 = src[7];
	var src23 = src[11];
	dest[0] = src[0];
	dest[1] = src[4];
	dest[2] = src[8];
	dest[3] = src[12];
	dest[4] = src01;
	dest[5] = src[5];
	dest[6] = src[9];
	dest[7] = src[13];
	dest[8] = src02;
	dest[9] = src12;
	dest[10] = src[10];
	dest[11] = src[14];
	dest[12] = src03;
	dest[13] = src13;
	dest[14] = src23;
	dest[15] = src[15];
	return dest;
};
glm__$Mat4_Mat4_$Impl_$.determinant = function(src) {
	var a00 = src[0];
	var a01 = src[1];
	var a02 = src[2];
	var a03 = src[3];
	var a10 = src[4];
	var a11 = src[5];
	var a12 = src[6];
	var a13 = src[7];
	var a20 = src[8];
	var a21 = src[9];
	var a22 = src[10];
	var a23 = src[11];
	var a30 = src[12];
	var a31 = src[13];
	var a32 = src[14];
	var a33 = src[15];
	var b00 = a00 * a11 - a01 * a10;
	var b01 = a00 * a12 - a02 * a10;
	var b02 = a00 * a13 - a03 * a10;
	var b03 = a01 * a12 - a02 * a11;
	var b04 = a01 * a13 - a03 * a11;
	var b05 = a02 * a13 - a03 * a12;
	var b06 = a20 * a31 - a21 * a30;
	var b07 = a20 * a32 - a22 * a30;
	var b08 = a20 * a33 - a23 * a30;
	var b09 = a21 * a32 - a22 * a31;
	var b10 = a21 * a33 - a23 * a31;
	var b11 = a22 * a33 - a23 * a32;
	return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
};
glm__$Mat4_Mat4_$Impl_$.invert = function(src,dest) {
	var a00 = src[0];
	var a01 = src[4];
	var a02 = src[8];
	var a03 = src[12];
	var a10 = src[1];
	var a11 = src[5];
	var a12 = src[9];
	var a13 = src[13];
	var a20 = src[2];
	var a21 = src[6];
	var a22 = src[10];
	var a23 = src[14];
	var a30 = src[3];
	var a31 = src[7];
	var a32 = src[11];
	var a33 = src[15];
	var t00 = a12 * a23 * a31 - a13 * a22 * a31 + a13 * a21 * a32 - a11 * a23 * a32 - a12 * a21 * a33 + a11 * a22 * a33;
	var t01 = a03 * a22 * a31 - a02 * a23 * a31 - a03 * a21 * a32 + a01 * a23 * a32 + a02 * a21 * a33 - a01 * a22 * a33;
	var t02 = a02 * a13 * a31 - a03 * a12 * a31 + a03 * a11 * a32 - a01 * a13 * a32 - a02 * a11 * a33 + a01 * a12 * a33;
	var t03 = a03 * a12 * a21 - a02 * a13 * a21 - a03 * a11 * a22 + a01 * a13 * a22 + a02 * a11 * a23 - a01 * a12 * a23;
	var det = a00 * t00 + a10 * t01 + a20 * t02 + a30 * t03;
	if(Math.abs(det) <= glm_GLM.EPSILON) {
		throw new js__$Boot_HaxeError("Can't invert matrix, det (" + det + ") is too small!");
	}
	var idet = 1 / det;
	dest[0] = t00 * idet;
	dest[1] = (a13 * a22 * a30 - a12 * a23 * a30 - a13 * a20 * a32 + a10 * a23 * a32 + a12 * a20 * a33 - a10 * a22 * a33) * idet;
	dest[2] = (a11 * a23 * a30 - a13 * a21 * a30 + a13 * a20 * a31 - a10 * a23 * a31 - a11 * a20 * a33 + a10 * a21 * a33) * idet;
	dest[3] = (a12 * a21 * a30 - a11 * a22 * a30 - a12 * a20 * a31 + a10 * a22 * a31 + a11 * a20 * a32 - a10 * a21 * a32) * idet;
	dest[4] = t01 * idet;
	dest[5] = (a02 * a23 * a30 - a03 * a22 * a30 + a03 * a20 * a32 - a00 * a23 * a32 - a02 * a20 * a33 + a00 * a22 * a33) * idet;
	dest[6] = (a03 * a21 * a30 - a01 * a23 * a30 - a03 * a20 * a31 + a00 * a23 * a31 + a01 * a20 * a33 - a00 * a21 * a33) * idet;
	dest[7] = (a01 * a22 * a30 - a02 * a21 * a30 + a02 * a20 * a31 - a00 * a22 * a31 - a01 * a20 * a32 + a00 * a21 * a32) * idet;
	dest[8] = t02 * idet;
	dest[9] = (a03 * a12 * a30 - a02 * a13 * a30 - a03 * a10 * a32 + a00 * a13 * a32 + a02 * a10 * a33 - a00 * a12 * a33) * idet;
	dest[10] = (a01 * a13 * a30 - a03 * a11 * a30 + a03 * a10 * a31 - a00 * a13 * a31 - a01 * a10 * a33 + a00 * a11 * a33) * idet;
	dest[11] = (a02 * a11 * a30 - a01 * a12 * a30 - a02 * a10 * a31 + a00 * a12 * a31 + a01 * a10 * a32 - a00 * a11 * a32) * idet;
	dest[12] = t03 * idet;
	dest[13] = (a02 * a13 * a20 - a03 * a12 * a20 + a03 * a10 * a22 - a00 * a13 * a22 - a02 * a10 * a23 + a00 * a12 * a23) * idet;
	dest[14] = (a03 * a11 * a20 - a01 * a13 * a20 - a03 * a10 * a21 + a00 * a13 * a21 + a01 * a10 * a23 - a00 * a11 * a23) * idet;
	dest[15] = (a01 * a12 * a20 - a02 * a11 * a20 + a02 * a10 * a21 - a00 * a12 * a21 - a01 * a10 * a22 + a00 * a11 * a22) * idet;
	return dest;
};
glm__$Mat4_Mat4_$Impl_$.multMat = function(a,b,dest) {
	var a00 = a[0];
	var a01 = a[1];
	var a02 = a[2];
	var a03 = a[3];
	var a10 = a[4];
	var a11 = a[5];
	var a12 = a[6];
	var a13 = a[7];
	var a20 = a[8];
	var a21 = a[9];
	var a22 = a[10];
	var a23 = a[11];
	var a30 = a[12];
	var a31 = a[13];
	var a32 = a[14];
	var a33 = a[15];
	var b00 = b[0];
	var b01 = b[1];
	var b02 = b[2];
	var b03 = b[3];
	var b10 = b[4];
	var b11 = b[5];
	var b12 = b[6];
	var b13 = b[7];
	var b20 = b[8];
	var b21 = b[9];
	var b22 = b[10];
	var b23 = b[11];
	var b30 = b[12];
	var b31 = b[13];
	var b32 = b[14];
	var b33 = b[15];
	dest[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;
	dest[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;
	dest[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;
	dest[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;
	dest[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;
	dest[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;
	dest[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;
	dest[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;
	dest[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;
	dest[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;
	dest[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;
	dest[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;
	dest[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;
	dest[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;
	dest[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;
	dest[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;
	return dest;
};
glm__$Mat4_Mat4_$Impl_$.multMatOp = function(a,b) {
	var this1 = new Float32Array(16);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	this1[4] = 0;
	this1[5] = 0;
	this1[6] = 0;
	this1[7] = 0;
	this1[8] = 0;
	this1[9] = 0;
	this1[10] = 0;
	this1[11] = 0;
	this1[12] = 0;
	this1[13] = 0;
	this1[14] = 0;
	this1[15] = 0;
	var dest = this1;
	var a00 = a[0];
	var a01 = a[1];
	var a02 = a[2];
	var a03 = a[3];
	var a10 = a[4];
	var a11 = a[5];
	var a12 = a[6];
	var a13 = a[7];
	var a20 = a[8];
	var a21 = a[9];
	var a22 = a[10];
	var a23 = a[11];
	var a30 = a[12];
	var a31 = a[13];
	var a32 = a[14];
	var a33 = a[15];
	var b00 = b[0];
	var b01 = b[1];
	var b02 = b[2];
	var b03 = b[3];
	var b10 = b[4];
	var b11 = b[5];
	var b12 = b[6];
	var b13 = b[7];
	var b20 = b[8];
	var b21 = b[9];
	var b22 = b[10];
	var b23 = b[11];
	var b30 = b[12];
	var b31 = b[13];
	var b32 = b[14];
	var b33 = b[15];
	dest[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;
	dest[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;
	dest[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;
	dest[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;
	dest[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;
	dest[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;
	dest[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;
	dest[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;
	dest[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;
	dest[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;
	dest[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;
	dest[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;
	dest[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;
	dest[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;
	dest[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;
	dest[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;
	return dest;
};
glm__$Mat4_Mat4_$Impl_$.multVec = function(m,v,dest) {
	var x = v[0];
	var y = v[1];
	var z = v[2];
	var w = v[3];
	dest[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;
	dest[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;
	dest[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;
	dest[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;
	return dest;
};
glm__$Mat4_Mat4_$Impl_$.multVecOp = function(m,v) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	var dest = this1;
	var x = v[0];
	var y = v[1];
	var z = v[2];
	var w = v[3];
	dest[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;
	dest[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;
	dest[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;
	dest[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;
	return dest;
};
var glm__$Quat_Quat_$Impl_$ = {};
glm__$Quat_Quat_$Impl_$.__name__ = ["glm","_Quat","Quat_Impl_"];
glm__$Quat_Quat_$Impl_$.get_x = function(this1) {
	return this1[0];
};
glm__$Quat_Quat_$Impl_$.set_x = function(this1,v) {
	return this1[0] = v;
};
glm__$Quat_Quat_$Impl_$.get_y = function(this1) {
	return this1[1];
};
glm__$Quat_Quat_$Impl_$.set_y = function(this1,v) {
	return this1[1] = v;
};
glm__$Quat_Quat_$Impl_$.get_z = function(this1) {
	return this1[2];
};
glm__$Quat_Quat_$Impl_$.set_z = function(this1,v) {
	return this1[2] = v;
};
glm__$Quat_Quat_$Impl_$.get_w = function(this1) {
	return this1[3];
};
glm__$Quat_Quat_$Impl_$.set_w = function(this1,v) {
	return this1[3] = v;
};
glm__$Quat_Quat_$Impl_$.get = function(this1,key) {
	return this1[key];
};
glm__$Quat_Quat_$Impl_$.arrayWrite = function(this1,key,value) {
	return this1[key] = value;
};
glm__$Quat_Quat_$Impl_$._new = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Float32Array(4);
	this1[0] = x;
	this1[1] = y;
	this1[2] = z;
	this1[3] = w;
	return this1;
};
glm__$Quat_Quat_$Impl_$.equals = function(this1,b) {
	var equal = true;
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		if(Math.abs(this1[i] - b[i]) >= glm_GLM.EPSILON) {
			equal = false;
			break;
		}
	}
	return equal;
};
glm__$Quat_Quat_$Impl_$.toString = function(this1) {
	return "{" + this1[0] + ", " + this1[1] + ", " + this1[2] + ", " + this1[3] + "}";
};
glm__$Quat_Quat_$Impl_$.lengthSquared = function(this1) {
	return this1[0] * this1[0] + this1[1] * this1[1] + this1[2] * this1[2] + this1[3] * this1[3];
};
glm__$Quat_Quat_$Impl_$.$length = function(this1) {
	return Math.sqrt(this1[0] * this1[0] + this1[1] * this1[1] + this1[2] * this1[2] + this1[3] * this1[3]);
};
glm__$Quat_Quat_$Impl_$.normalize = function(q,dest) {
	var length = Math.sqrt(q[0] * q[0] + q[1] * q[1] + q[2] * q[2] + q[3] * q[3]);
	var mult = 0;
	if(length >= glm_GLM.EPSILON) {
		mult = 1 / length;
	}
	dest[0] = q[0] * mult;
	dest[1] = q[1] * mult;
	dest[2] = q[2] * mult;
	dest[3] = q[3] * mult;
	return dest;
};
glm__$Quat_Quat_$Impl_$.dot = function(a,b) {
	return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
};
glm__$Quat_Quat_$Impl_$.identity = function(dest) {
	dest[0] = 0;
	dest[1] = 0;
	dest[2] = 0;
	dest[3] = 1;
	return dest;
};
glm__$Quat_Quat_$Impl_$.copy = function(src,dest) {
	dest[0] = src[0];
	dest[1] = src[1];
	dest[2] = src[2];
	dest[3] = src[3];
	return dest;
};
glm__$Quat_Quat_$Impl_$.axisAngle = function(axis,angle,dest) {
	angle *= 0.5;
	var s = Math.sin(angle);
	dest[0] = s * axis[0];
	dest[1] = s * axis[1];
	dest[2] = s * axis[2];
	dest[3] = Math.cos(angle);
	return dest;
};
glm__$Quat_Quat_$Impl_$.multiplyQuats = function(a,b,dest) {
	var ax = a[0];
	var ay = a[1];
	var az = a[2];
	var aw = a[3];
	var bx = b[0];
	var by = b[1];
	var bz = b[2];
	var bw = b[3];
	dest[0] = ax * bw + aw * bx + ay * bz - az * by;
	dest[1] = ay * bw + aw * by + az * bx - ax * bz;
	dest[2] = az * bw + aw * bz + ax * by - ay * bx;
	dest[3] = aw * bw - ax * bx - ay * by - az * bz;
	return dest;
};
glm__$Quat_Quat_$Impl_$.multiplyQuatsOp = function(a,b) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 1;
	var dest = this1;
	var ax = a[0];
	var ay = a[1];
	var az = a[2];
	var aw = a[3];
	var bx = b[0];
	var by = b[1];
	var bz = b[2];
	var bw = b[3];
	dest[0] = ax * bw + aw * bx + ay * bz - az * by;
	dest[1] = ay * bw + aw * by + az * bx - ax * bz;
	dest[2] = az * bw + aw * bz + ax * by - ay * bx;
	dest[3] = aw * bw - ax * bx - ay * by - az * bz;
	return dest;
};
glm__$Quat_Quat_$Impl_$.multiplyScalar = function(a,s,dest) {
	dest[0] = a[0] * s;
	dest[1] = a[1] * s;
	dest[2] = a[2] * s;
	dest[3] = a[3] * s;
	return dest;
};
glm__$Quat_Quat_$Impl_$.multiplyScalarOp = function(a,s) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 1;
	var dest = this1;
	dest[0] = a[0] * s;
	dest[1] = a[1] * s;
	dest[2] = a[2] * s;
	dest[3] = a[3] * s;
	return dest;
};
glm__$Quat_Quat_$Impl_$.lerp = function(a,b,t,dest) {
	var a1 = a[0];
	dest[0] = a1 + t * (b[0] - a1);
	var a2 = a[1];
	dest[1] = a2 + t * (b[1] - a2);
	var a3 = a[2];
	dest[2] = a3 + t * (b[2] - a3);
	var a4 = a[3];
	dest[3] = a4 + t * (b[3] - a4);
	return dest;
};
glm__$Quat_Quat_$Impl_$.slerp = function(a,b,t,dest) {
	var bx = b[0];
	var by = b[1];
	var bz = b[2];
	var bw = b[3];
	var cosTheta = a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
	if(cosTheta < 0) {
		cosTheta = -cosTheta;
		bx = -bx;
		by = -by;
		bz = -bz;
		bw = -bw;
	}
	if(cosTheta > 1 - glm_GLM.EPSILON) {
		var a1 = a[0];
		dest[0] = a1 + t * (b[0] - a1);
		var a2 = a[1];
		dest[1] = a2 + t * (b[1] - a2);
		var a3 = a[2];
		dest[2] = a3 + t * (b[2] - a3);
		var a4 = a[3];
		dest[3] = a4 + t * (b[3] - a4);
		return dest;
	} else {
		var angle = Math.acos(cosTheta);
		var sa = 1 / Math.sin(angle);
		var i = Math.sin((1 - t) * angle);
		var j = Math.sin(t * angle);
		dest[0] = (i * a[0] + j * bx) * sa;
		dest[1] = (i * a[1] + j * by) * sa;
		dest[2] = (i * a[2] + j * bz) * sa;
		dest[3] = (i * a[3] + j * bw) * sa;
		return dest;
	}
};
glm__$Quat_Quat_$Impl_$.invert = function(q,dest) {
	var x = q[0];
	var y = q[1];
	var z = q[2];
	var w = q[3];
	var d = q[0] * q[0] + q[1] * q[1] + q[2] * q[2] + q[3] * q[3];
	var oneOverD = d < glm_GLM.EPSILON ? 0 : 1 / d;
	dest[0] = -x * oneOverD;
	dest[1] = -y * oneOverD;
	dest[2] = -z * oneOverD;
	dest[3] = w * oneOverD;
	return dest;
};
glm__$Quat_Quat_$Impl_$.conjugate = function(q,dest) {
	dest[0] = -1 * q[0];
	dest[1] = -1 * q[1];
	dest[2] = -1 * q[2];
	dest[3] = q[3];
	return dest;
};
glm__$Quat_Quat_$Impl_$.fromEuler = function(x,y,z,dest) {
	var c1 = Math.cos(x / 2);
	var c2 = Math.cos(y / 2);
	var c3 = Math.cos(z / 2);
	var s1 = Math.sin(x / 2);
	var s2 = Math.sin(y / 2);
	var s3 = Math.sin(z / 2);
	dest[0] = s1 * c2 * c3 + c1 * s2 * s3;
	dest[1] = c1 * s2 * c3 - s1 * c2 * s3;
	dest[2] = c1 * c2 * s3 + s1 * s2 * c3;
	dest[3] = c1 * c2 * c3 - s1 * s2 * s3;
	return dest;
};
var glm__$Vec2_Vec2_$Impl_$ = {};
glm__$Vec2_Vec2_$Impl_$.__name__ = ["glm","_Vec2","Vec2_Impl_"];
glm__$Vec2_Vec2_$Impl_$.get_x = function(this1) {
	return this1[0];
};
glm__$Vec2_Vec2_$Impl_$.set_x = function(this1,v) {
	return this1[0] = v;
};
glm__$Vec2_Vec2_$Impl_$.get_y = function(this1) {
	return this1[1];
};
glm__$Vec2_Vec2_$Impl_$.set_y = function(this1,v) {
	return this1[1] = v;
};
glm__$Vec2_Vec2_$Impl_$.get_i = function(this1) {
	return this1[0];
};
glm__$Vec2_Vec2_$Impl_$.set_i = function(this1,v) {
	return this1[0] = v;
};
glm__$Vec2_Vec2_$Impl_$.get_j = function(this1) {
	return this1[1];
};
glm__$Vec2_Vec2_$Impl_$.set_j = function(this1,v) {
	return this1[1] = v;
};
glm__$Vec2_Vec2_$Impl_$.get = function(this1,key) {
	return this1[key];
};
glm__$Vec2_Vec2_$Impl_$.arrayWrite = function(this1,key,value) {
	return this1[key] = value;
};
glm__$Vec2_Vec2_$Impl_$._new = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Float32Array(4);
	this1[0] = x;
	this1[1] = y;
	return this1;
};
glm__$Vec2_Vec2_$Impl_$.equals = function(this1,b) {
	var equal = true;
	var _g = 0;
	while(_g < 2) {
		var i = _g++;
		if(Math.abs(this1[i] - b[i]) >= glm_GLM.EPSILON) {
			equal = false;
			break;
		}
	}
	return equal;
};
glm__$Vec2_Vec2_$Impl_$.toString = function(this1) {
	return "<" + this1[0] + ", " + this1[1] + ">";
};
glm__$Vec2_Vec2_$Impl_$.lengthSquared = function(this1) {
	return this1[0] * this1[0] + this1[1] * this1[1];
};
glm__$Vec2_Vec2_$Impl_$.$length = function(this1) {
	return Math.sqrt(this1[0] * this1[0] + this1[1] * this1[1]);
};
glm__$Vec2_Vec2_$Impl_$.copy = function(src,dest) {
	dest[0] = src[0];
	dest[1] = src[1];
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.set = function(dest,x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	dest[0] = x;
	dest[1] = y;
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.addVec = function(a,b,dest) {
	dest[0] = a[0] + b[0];
	dest[1] = a[1] + b[1];
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.subtractVec = function(a,b,dest) {
	dest[0] = a[0] - b[0];
	dest[1] = a[1] - b[1];
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.addVecOp = function(a,b) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	var dest = this1;
	dest[0] = a[0] + b[0];
	dest[1] = a[1] + b[1];
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.subtractVecOp = function(a,b) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	var dest = this1;
	dest[0] = a[0] - b[0];
	dest[1] = a[1] - b[1];
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.addScalar = function(a,s,dest) {
	dest[0] = a[0] + s;
	dest[1] = a[1] + s;
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.multiplyScalar = function(a,s,dest) {
	dest[0] = a[0] * s;
	dest[1] = a[1] * s;
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.addScalarOp = function(a,s) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	var dest = this1;
	dest[0] = a[0] + s;
	dest[1] = a[1] + s;
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.subtractScalarOp = function(a,s) {
	var s1 = -s;
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	var dest = this1;
	dest[0] = a[0] + s1;
	dest[1] = a[1] + s1;
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.multiplyScalarOp = function(a,s) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	var dest = this1;
	dest[0] = a[0] * s;
	dest[1] = a[1] * s;
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.divideScalarOp = function(a,s) {
	var s1 = 1 / s;
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	var dest = this1;
	dest[0] = a[0] * s1;
	dest[1] = a[1] * s1;
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.distanceSquared = function(a,b) {
	return (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]);
};
glm__$Vec2_Vec2_$Impl_$.distance = function(a,b) {
	return Math.sqrt((a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]));
};
glm__$Vec2_Vec2_$Impl_$.dot = function(a,b) {
	return a[0] * b[0] + a[1] * b[1];
};
glm__$Vec2_Vec2_$Impl_$.normalize = function(v,dest) {
	var length = Math.sqrt(v[0] * v[0] + v[1] * v[1]);
	var mult = 0;
	if(length >= glm_GLM.EPSILON) {
		mult = 1 / length;
	}
	dest[0] = v[0] * mult;
	dest[1] = v[1] * mult;
	return dest;
};
glm__$Vec2_Vec2_$Impl_$.lerp = function(a,b,t,dest) {
	var a1 = a[0];
	dest[0] = a1 + t * (b[0] - a1);
	var a2 = a[1];
	dest[1] = a2 + t * (b[1] - a2);
	return dest;
};
var glm__$Vec3_Vec3_$Impl_$ = {};
glm__$Vec3_Vec3_$Impl_$.__name__ = ["glm","_Vec3","Vec3_Impl_"];
glm__$Vec3_Vec3_$Impl_$.get_x = function(this1) {
	return this1[0];
};
glm__$Vec3_Vec3_$Impl_$.set_x = function(this1,v) {
	return this1[0] = v;
};
glm__$Vec3_Vec3_$Impl_$.get_y = function(this1) {
	return this1[1];
};
glm__$Vec3_Vec3_$Impl_$.set_y = function(this1,v) {
	return this1[1] = v;
};
glm__$Vec3_Vec3_$Impl_$.get_z = function(this1) {
	return this1[2];
};
glm__$Vec3_Vec3_$Impl_$.set_z = function(this1,v) {
	return this1[2] = v;
};
glm__$Vec3_Vec3_$Impl_$.get_r = function(this1) {
	return this1[0];
};
glm__$Vec3_Vec3_$Impl_$.set_r = function(this1,v) {
	return this1[0] = v;
};
glm__$Vec3_Vec3_$Impl_$.get_g = function(this1) {
	return this1[1];
};
glm__$Vec3_Vec3_$Impl_$.set_g = function(this1,v) {
	return this1[1] = v;
};
glm__$Vec3_Vec3_$Impl_$.get_b = function(this1) {
	return this1[2];
};
glm__$Vec3_Vec3_$Impl_$.set_b = function(this1,v) {
	return this1[2] = v;
};
glm__$Vec3_Vec3_$Impl_$.get = function(this1,key) {
	return this1[key];
};
glm__$Vec3_Vec3_$Impl_$.arrayWrite = function(this1,key,value) {
	return this1[key] = value;
};
glm__$Vec3_Vec3_$Impl_$._new = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Float32Array(4);
	this1[0] = x;
	this1[1] = y;
	this1[2] = z;
	return this1;
};
glm__$Vec3_Vec3_$Impl_$.equals = function(this1,b) {
	var equal = true;
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		if(Math.abs(this1[i] - b[i]) >= glm_GLM.EPSILON) {
			equal = false;
			break;
		}
	}
	return equal;
};
glm__$Vec3_Vec3_$Impl_$.toString = function(this1) {
	return "<" + this1[0] + ", " + this1[1] + ", " + this1[2] + ">";
};
glm__$Vec3_Vec3_$Impl_$.lengthSquared = function(this1) {
	return this1[0] * this1[0] + this1[1] * this1[1] + this1[2] * this1[2];
};
glm__$Vec3_Vec3_$Impl_$.$length = function(this1) {
	return Math.sqrt(this1[0] * this1[0] + this1[1] * this1[1] + this1[2] * this1[2]);
};
glm__$Vec3_Vec3_$Impl_$.copy = function(src,dest) {
	dest[0] = src[0];
	dest[1] = src[1];
	dest[2] = src[2];
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.set = function(dest,x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	dest[0] = x;
	dest[1] = y;
	dest[2] = z;
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.addVec = function(a,b,dest) {
	dest[0] = a[0] + b[0];
	dest[1] = a[1] + b[1];
	dest[2] = a[2] + b[2];
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.subtractVec = function(a,b,dest) {
	dest[0] = a[0] - b[0];
	dest[1] = a[1] - b[1];
	dest[2] = a[2] - b[2];
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.addVecOp = function(a,b) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	var dest = this1;
	dest[0] = a[0] + b[0];
	dest[1] = a[1] + b[1];
	dest[2] = a[2] + b[2];
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.subtractVecOp = function(a,b) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	var dest = this1;
	dest[0] = a[0] - b[0];
	dest[1] = a[1] - b[1];
	dest[2] = a[2] - b[2];
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.addScalar = function(a,s,dest) {
	dest[0] = a[0] + s;
	dest[1] = a[1] + s;
	dest[2] = a[2] + s;
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.multiplyScalar = function(a,s,dest) {
	dest[0] = a[0] * s;
	dest[1] = a[1] * s;
	dest[2] = a[2] * s;
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.addScalarOp = function(a,s) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	var dest = this1;
	dest[0] = a[0] + s;
	dest[1] = a[1] + s;
	dest[2] = a[2] + s;
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.subtractScalarOp = function(a,s) {
	var s1 = -s;
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	var dest = this1;
	dest[0] = a[0] + s1;
	dest[1] = a[1] + s1;
	dest[2] = a[2] + s1;
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.multiplyScalarOp = function(a,s) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	var dest = this1;
	dest[0] = a[0] * s;
	dest[1] = a[1] * s;
	dest[2] = a[2] * s;
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.divideScalarOp = function(a,s) {
	var s1 = 1 / s;
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	var dest = this1;
	dest[0] = a[0] * s1;
	dest[1] = a[1] * s1;
	dest[2] = a[2] * s1;
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.distanceSquared = function(a,b) {
	return (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]) + (a[2] - b[2]) * (a[2] - b[2]);
};
glm__$Vec3_Vec3_$Impl_$.distance = function(a,b) {
	return Math.sqrt((a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]) + (a[2] - b[2]) * (a[2] - b[2]));
};
glm__$Vec3_Vec3_$Impl_$.dot = function(a,b) {
	return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
};
glm__$Vec3_Vec3_$Impl_$.normalize = function(v,dest) {
	var length = Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);
	var mult = 0;
	if(length >= glm_GLM.EPSILON) {
		mult = 1 / length;
	}
	dest[0] = v[0] * mult;
	dest[1] = v[1] * mult;
	dest[2] = v[2] * mult;
	return dest;
};
glm__$Vec3_Vec3_$Impl_$.lerp = function(a,b,t,dest) {
	var a1 = a[0];
	dest[0] = a1 + t * (b[0] - a1);
	var a2 = a[1];
	dest[1] = a2 + t * (b[1] - a2);
	var a3 = a[2];
	dest[2] = a3 + t * (b[2] - a3);
	return dest;
};
var glm__$Vec4_Vec4_$Impl_$ = {};
glm__$Vec4_Vec4_$Impl_$.__name__ = ["glm","_Vec4","Vec4_Impl_"];
glm__$Vec4_Vec4_$Impl_$.get_x = function(this1) {
	return this1[0];
};
glm__$Vec4_Vec4_$Impl_$.set_x = function(this1,v) {
	return this1[0] = v;
};
glm__$Vec4_Vec4_$Impl_$.get_y = function(this1) {
	return this1[1];
};
glm__$Vec4_Vec4_$Impl_$.set_y = function(this1,v) {
	return this1[1] = v;
};
glm__$Vec4_Vec4_$Impl_$.get_z = function(this1) {
	return this1[2];
};
glm__$Vec4_Vec4_$Impl_$.set_z = function(this1,v) {
	return this1[2] = v;
};
glm__$Vec4_Vec4_$Impl_$.get_w = function(this1) {
	return this1[3];
};
glm__$Vec4_Vec4_$Impl_$.set_w = function(this1,v) {
	return this1[3] = v;
};
glm__$Vec4_Vec4_$Impl_$.get_r = function(this1) {
	return this1[0];
};
glm__$Vec4_Vec4_$Impl_$.set_r = function(this1,v) {
	return this1[0] = v;
};
glm__$Vec4_Vec4_$Impl_$.get_g = function(this1) {
	return this1[1];
};
glm__$Vec4_Vec4_$Impl_$.set_g = function(this1,v) {
	return this1[1] = v;
};
glm__$Vec4_Vec4_$Impl_$.get_b = function(this1) {
	return this1[2];
};
glm__$Vec4_Vec4_$Impl_$.set_b = function(this1,v) {
	return this1[2] = v;
};
glm__$Vec4_Vec4_$Impl_$.get_a = function(this1) {
	return this1[3];
};
glm__$Vec4_Vec4_$Impl_$.set_a = function(this1,v) {
	return this1[3] = v;
};
glm__$Vec4_Vec4_$Impl_$.get = function(this1,key) {
	return this1[key];
};
glm__$Vec4_Vec4_$Impl_$.arrayWrite = function(this1,key,value) {
	return this1[key] = value;
};
glm__$Vec4_Vec4_$Impl_$._new = function(x,y,z,w) {
	if(w == null) {
		w = 0;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Float32Array(4);
	this1[0] = x;
	this1[1] = y;
	this1[2] = z;
	this1[3] = w;
	return this1;
};
glm__$Vec4_Vec4_$Impl_$.equals = function(this1,b) {
	var equal = true;
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		if(Math.abs(this1[i] - b[i]) >= glm_GLM.EPSILON) {
			equal = false;
			break;
		}
	}
	return equal;
};
glm__$Vec4_Vec4_$Impl_$.toString = function(this1) {
	return "<" + this1[0] + ", " + this1[1] + ", " + this1[2] + ", " + this1[3] + ">";
};
glm__$Vec4_Vec4_$Impl_$.lengthSquared = function(this1) {
	return this1[0] * this1[0] + this1[1] * this1[1] + this1[2] * this1[2] + this1[3] * this1[3];
};
glm__$Vec4_Vec4_$Impl_$.$length = function(this1) {
	return Math.sqrt(this1[0] * this1[0] + this1[1] * this1[1] + this1[2] * this1[2] + this1[3] * this1[3]);
};
glm__$Vec4_Vec4_$Impl_$.copy = function(src,dest) {
	dest[0] = src[0];
	dest[1] = src[1];
	dest[2] = src[2];
	dest[3] = src[3];
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.set = function(dest,x,y,z,w) {
	if(w == null) {
		w = 0;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	dest[0] = x;
	dest[1] = y;
	dest[2] = z;
	dest[3] = w;
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.addVec = function(a,b,dest) {
	dest[0] = a[0] + b[0];
	dest[1] = a[1] + b[1];
	dest[2] = a[2] + b[2];
	dest[3] = a[3] + b[3];
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.subtractVec = function(a,b,dest) {
	dest[0] = a[0] - b[0];
	dest[1] = a[1] - b[1];
	dest[2] = a[2] - b[2];
	dest[3] = a[3] - b[3];
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.addVecOp = function(a,b) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	var dest = this1;
	dest[0] = a[0] + b[0];
	dest[1] = a[1] + b[1];
	dest[2] = a[2] + b[2];
	dest[3] = a[3] + b[3];
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.subtractVecOp = function(a,b) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	var dest = this1;
	dest[0] = a[0] - b[0];
	dest[1] = a[1] - b[1];
	dest[2] = a[2] - b[2];
	dest[3] = a[3] - b[3];
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.addScalar = function(a,s,dest) {
	dest[0] = a[0] + s;
	dest[1] = a[1] + s;
	dest[2] = a[2] + s;
	dest[3] = a[3] + s;
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.multiplyScalar = function(a,s,dest) {
	dest[0] = a[0] * s;
	dest[1] = a[1] * s;
	dest[2] = a[2] * s;
	dest[3] = a[3] * s;
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.addScalarOp = function(a,s) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	var dest = this1;
	dest[0] = a[0] + s;
	dest[1] = a[1] + s;
	dest[2] = a[2] + s;
	dest[3] = a[3] + s;
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.subtractScalarOp = function(a,s) {
	var s1 = -s;
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	var dest = this1;
	dest[0] = a[0] + s1;
	dest[1] = a[1] + s1;
	dest[2] = a[2] + s1;
	dest[3] = a[3] + s1;
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.multiplyScalarOp = function(a,s) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	var dest = this1;
	dest[0] = a[0] * s;
	dest[1] = a[1] * s;
	dest[2] = a[2] * s;
	dest[3] = a[3] * s;
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.divideScalarOp = function(a,s) {
	var s1 = 1 / s;
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	var dest = this1;
	dest[0] = a[0] * s1;
	dest[1] = a[1] * s1;
	dest[2] = a[2] * s1;
	dest[3] = a[3] * s1;
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.distanceSquared = function(a,b) {
	return (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]) + (a[2] - b[2]) * (a[2] - b[2]) + (a[3] - b[3]) * (a[3] - b[3]);
};
glm__$Vec4_Vec4_$Impl_$.distance = function(a,b) {
	return Math.sqrt((a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]) + (a[2] - b[2]) * (a[2] - b[2]) + (a[3] - b[3]) * (a[3] - b[3]));
};
glm__$Vec4_Vec4_$Impl_$.dot = function(a,b) {
	return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
};
glm__$Vec4_Vec4_$Impl_$.normalize = function(v,dest) {
	var length = Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2] + v[3] * v[3]);
	var mult = 0;
	if(length >= glm_GLM.EPSILON) {
		mult = 1 / length;
	}
	dest[0] = v[0] * mult;
	dest[1] = v[1] * mult;
	dest[2] = v[2] * mult;
	dest[3] = v[3] * mult;
	return dest;
};
glm__$Vec4_Vec4_$Impl_$.lerp = function(a,b,t,dest) {
	var a1 = a[0];
	dest[0] = a1 + t * (b[0] - a1);
	var a2 = a[1];
	dest[1] = a2 + t * (b[1] - a2);
	var a3 = a[2];
	dest[2] = a3 + t * (b[2] - a3);
	var a4 = a[3];
	dest[3] = a4 + t * (b[3] - a4);
	return dest;
};
var haxe_StackItem = { __ename__ : ["haxe","StackItem"], __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; return $x; };
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = ["haxe","CallStack"];
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		b.b += cname == null ? "null" : "" + cname;
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		b.b += n == null ? "null" : "" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,keys: null
	,iterator: null
	,__class__: haxe_IMap
};
var haxe__$Int32_Int32_$Impl_$ = {};
haxe__$Int32_Int32_$Impl_$.__name__ = ["haxe","_Int32","Int32_Impl_"];
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_Utf8 = function() { };
haxe_Utf8.__name__ = ["haxe","Utf8"];
haxe_Utf8.compare = function(a,b) {
	if(a > b) {
		return 1;
	} else if(a == b) {
		return 0;
	} else {
		return -1;
	}
};
var haxe_crypto_Base64 = function() { };
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
var haxe_ds_BalancedTree = function() {
};
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,String) ) {
				return false;
			} else throw(e);
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		this.iteratorLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw new js__$Boot_HaxeError("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,iteratorLoop: function(node,acc) {
		if(node != null) {
			this.iteratorLoop(node.left,acc);
			acc.push(node.value);
			this.iteratorLoop(node.right,acc);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw new js__$Boot_HaxeError("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			if(_this2 == null) {
				tmp = 0;
			} else {
				tmp = _this2._height;
			}
		} else {
			var _this3 = this.right;
			if(_this3 == null) {
				tmp = 0;
			} else {
				tmp = _this3._height;
			}
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_Either = { __ename__ : ["haxe","ds","Either"], __constructs__ : ["Left","Right"] };
haxe_ds_Either.Left = function(v) { var $x = ["Left",0,v]; $x.__enum__ = haxe_ds_Either; return $x; };
haxe_ds_Either.Right = function(v) { var $x = ["Right",1,v]; $x.__enum__ = haxe_ds_Either; return $x; };
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) {
			return d;
		}
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = { __ename__ : ["haxe","ds","Option"], __constructs__ : ["Some","None"] };
haxe_ds_Option.Some = function(v) { var $x = ["Some",0,v]; $x.__enum__ = haxe_ds_Option; return $x; };
haxe_ds_Option.None = ["None",1];
haxe_ds_Option.None.__enum__ = haxe_ds_Option;
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	map: null
	,keys: null
	,index: null
	,count: null
	,hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_FPHelper = function() { };
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0 ? -f : f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608);
	if(sig == 8388608 && exp < 128) {
		sig = 0;
		++exp;
	}
	return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | sig;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	byteLength: null
	,a: null
	,slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Float32Array = function() { };
js_html_compat_Float32Array.__name__ = ["js","html","compat","Float32Array"];
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var minicanvas_MiniCanvas = function(width,height,scaleMode) {
	this.scaleMode = scaleMode;
	this.width = width;
	this.height = height;
	this.processScale();
	this.startTime = performance.now();
	this.events = new haxe_ds_StringMap();
	this.init();
};
minicanvas_MiniCanvas.__name__ = ["minicanvas","MiniCanvas"];
minicanvas_MiniCanvas.envIsNode = function() {
	return typeof module !== 'undefined' && module.exports;
};
minicanvas_MiniCanvas.create = function(width,height,scaleMode) {
	if(minicanvas_MiniCanvas.envIsNode()) {
		return new minicanvas_NodeCanvas(width,height,scaleMode);
	} else {
		return new minicanvas_BrowserCanvas(width,height,scaleMode);
	}
};
minicanvas_MiniCanvas.prototype = {
	isNode: null
	,isBrowser: null
	,width: null
	,height: null
	,scaleMode: null
	,canvas: null
	,ctx: null
	,startTime: null
	,deltaTime: null
	,events: null
	,display: function(name) {
		this.deltaTime = performance.now() - this.startTime;
		if(null != name && !minicanvas_MiniCanvas.displayGenerationTime) {
			console.log("generated \"" + name + "\" in " + thx_Floats.roundTo(this.deltaTime,2) + "ms");
		}
		this.nativeDisplay(name);
		return this;
	}
	,border: function(weight,color) {
		if(weight == null) {
			weight = 1.0;
		}
		if(null == color) {
			var this1 = [0,0,0,1];
			color = this1;
		}
		return this.rect(weight / 2,weight / 2,this.width - weight / 2,this.height - weight / 2,weight,color);
	}
	,box: function(handler) {
		var _g1 = 0;
		var _g = this.width;
		while(_g1 < _g) {
			var x = _g1++;
			var _g3 = 0;
			var _g2 = this.height;
			while(_g3 < _g2) {
				var y = _g3++;
				var color = handler(x / this.width,y / this.height);
				if(thx_color__$Rgbxa_Rgbxa_$Impl_$.get_inSpace(color)) {
					this.ctx.fillStyle = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(color);
					this.ctx.fillRect(x,y,1,1);
				}
			}
		}
		return this;
	}
	,checkboard: function(size,light,dark) {
		if(size == null) {
			size = 8;
		}
		var cols = Math.ceil(this.width / size);
		var rows = Math.ceil(this.height / size);
		var slight;
		if(null == light) {
			var this1 = [1,1,1,1];
			slight = this1;
		} else {
			slight = light;
		}
		var sdark;
		if(null == dark) {
			var this2 = [0.5,0.5,0.5,1];
			sdark = this2;
		} else {
			sdark = dark;
		}
		var _g1 = 0;
		var _g = cols;
		while(_g1 < _g) {
			var c = _g1++;
			var _g3 = 0;
			var _g2 = rows;
			while(_g3 < _g2) {
				var r = _g3++;
				var tmp = c % 2 != r % 2 ? thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(slight) : thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(sdark);
				this.ctx.fillStyle = tmp;
				this.ctx.fillRect(c * size,r * size,size,size);
			}
		}
		return this;
	}
	,circle: function(x,y,radius,weight,lineColor,fillColor) {
		if(weight == null) {
			weight = 1.0;
		}
		if(null != fillColor || null != lineColor) {
			this.ctx.beginPath();
		}
		if(null != fillColor) {
			this.ctx.fillStyle = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(fillColor);
		}
		if(null != lineColor) {
			this.ctx.strokeStyle = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(lineColor);
			this.ctx.lineWidth = weight;
		}
		this.ctx.arc(x,y,radius,0,Math.PI * 2,true);
		if(null != fillColor) {
			this.ctx.fill();
		}
		if(null != lineColor) {
			this.ctx.stroke();
		}
	}
	,clear: function() {
		this.ctx.clearRect(0,0,this.width,this.height);
		return this;
	}
	,cross: function(ox,oy,weight,color) {
		if(weight == null) {
			weight = 1.0;
		}
		if(null == ox) {
			ox = this.width / 2 + 0.5;
		}
		if(null == oy) {
			oy = this.height / 2 + 0.5;
		}
		this.lineHorizontal(oy,weight,color);
		this.lineVertical(ox,weight,color);
		return this;
	}
	,dot: function(x,y,radius,color) {
		if(radius == null) {
			radius = 3.0;
		}
		this.ctx.beginPath();
		var _0 = color;
		var t = null == _0 ? null : _0;
		var tmp;
		if(t != null) {
			tmp = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(t);
		} else {
			var this1 = [0.8,0.2,0,1];
			tmp = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(this1);
		}
		this.ctx.fillStyle = tmp;
		this.ctx.arc(x,y,radius,0,Math.PI * 2,true);
		this.ctx.fill();
		return this;
	}
	,dotGrid: function(dx,dy,radius,color,ox,oy) {
		if(oy == null) {
			oy = 0.5;
		}
		if(ox == null) {
			ox = 0.5;
		}
		if(radius == null) {
			radius = 1.0;
		}
		if(dy == null) {
			dy = 10.0;
		}
		if(dx == null) {
			dx = 10.0;
		}
		if(dx == 0) {
			throw new js__$Boot_HaxeError("invalid argument dx, should be different from zero");
		}
		if(dy == 0) {
			throw new js__$Boot_HaxeError("invalid argument dy, should be different from zero");
		}
		if(null == color) {
			var this1 = [0.675,0.675,0.678,1];
			color = this1;
		}
		var py = oy % dy;
		while(py - radius <= this.height) {
			var px = ox % dx;
			while(px - radius <= this.width) {
				this.dot(px + 0.5,py + 0.5,radius,color);
				px += dx;
			}
			py += dy;
		}
		return this;
	}
	,fill: function(color) {
		this.ctx.fillStyle = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(color);
		this.ctx.fillRect(0,0,this.width,this.height);
		return this;
	}
	,grid: function(dx,dy,weight,color,ox,oy) {
		if(oy == null) {
			oy = 0.5;
		}
		if(ox == null) {
			ox = 0.5;
		}
		if(weight == null) {
			weight = 1.0;
		}
		if(dy == null) {
			dy = 10.0;
		}
		if(dx == null) {
			dx = 10.0;
		}
		this.gridHorizontal(dy,weight,color,oy);
		this.gridVertical(dx,weight,color,ox);
		return this;
	}
	,gridHorizontal: function(dy,weight,color,oy) {
		if(oy == null) {
			oy = 0.5;
		}
		if(weight == null) {
			weight = 1.0;
		}
		if(dy == null) {
			dy = 10.0;
		}
		if(dy == 0) {
			throw new js__$Boot_HaxeError("invalid argument dy, should be different from zero");
		}
		if(null == color) {
			var this1 = [0.8,0.8,0.8,1];
			color = this1;
		}
		var py = oy % dy;
		while(py - weight / 2 <= this.height) {
			this.lineHorizontal(py,weight,color);
			py += dy;
		}
		return this;
	}
	,gridVertical: function(dx,weight,color,ox) {
		if(ox == null) {
			ox = 0.5;
		}
		if(weight == null) {
			weight = 1.0;
		}
		if(dx == null) {
			dx = 10.0;
		}
		if(dx == 0) {
			throw new js__$Boot_HaxeError("invalid argument dx, should be different from zero");
		}
		if(null == color) {
			var this1 = [0.8,0.8,0.8,1];
			color = this1;
		}
		var px = ox % dx;
		while(px - weight / 2 <= this.width) {
			this.lineVertical(px,weight,color);
			px += dx;
		}
		return this;
	}
	,gradientHorizontal: function(handler) {
		var _g1 = 0;
		var _g = this.width;
		while(_g1 < _g) {
			var x = _g1++;
			var color = handler(x / this.width);
			if(thx_color__$Rgbxa_Rgbxa_$Impl_$.get_inSpace(color)) {
				this.ctx.fillStyle = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(color);
				this.ctx.fillRect(x,0,1,this.height);
			}
		}
		return this;
	}
	,gradientVertical: function(handler) {
		var _g1 = 0;
		var _g = this.height;
		while(_g1 < _g) {
			var y = _g1++;
			var color = handler(y / this.height);
			if(thx_color__$Rgbxa_Rgbxa_$Impl_$.get_inSpace(color)) {
				this.ctx.fillStyle = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(color);
				this.ctx.fillRect(0,y,this.width,1);
			}
		}
		return this;
	}
	,line: function(x0,y0,x1,y1,weight,color) {
		if(weight == null) {
			weight = 1.0;
		}
		this.ctx.lineWidth = weight;
		var _0 = color;
		var t = null == _0 ? null : _0;
		var tmp = t != null ? thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(t) : thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(thx_color__$Rgbxa_Rgbxa_$Impl_$.fromString("Rgbxa(0,0,0,1)"));
		this.ctx.strokeStyle = tmp;
		this.ctx.beginPath();
		this.ctx.moveTo(x0,y0);
		this.ctx.lineTo(x1,y1);
		this.ctx.stroke();
		return this;
	}
	,lineHorizontal: function(offset,weight,color) {
		if(weight == null) {
			weight = 1.0;
		}
		return this.line(0,offset,this.width,offset,weight,color);
	}
	,lineVertical: function(offset,weight,color) {
		if(weight == null) {
			weight = 1.0;
		}
		return this.line(offset,0,offset,this.height,weight,color);
	}
	,palette: function(colors,padding,margin) {
		if(margin == null) {
			margin = 0.0;
		}
		if(padding == null) {
			padding = 2.0;
		}
		var rows = colors.length;
		var h = (this.height - 2 * margin - (rows - 1) * padding) / rows;
		var py = margin;
		var _g = 0;
		while(_g < colors.length) {
			var row = colors[_g];
			++_g;
			var cols = row.length;
			var w = (this.width - 2 * margin - (cols - 1) * padding) / cols;
			var px = margin;
			var _g1 = 0;
			while(_g1 < row.length) {
				var color = row[_g1];
				++_g1;
				if(thx_color__$Rgbxa_Rgbxa_$Impl_$.get_inSpace(color)) {
					this.ctx.fillStyle = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(color);
					this.ctx.fillRect(px,py,w,h);
				}
				px += w + padding;
			}
			py += h + padding;
		}
		return this;
	}
	,rect: function(x0,y0,x1,y1,weight,lineColor,fillColor) {
		if(weight == null) {
			weight = 1.0;
		}
		if(null != fillColor) {
			this.ctx.fillStyle = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(fillColor);
			this.ctx.fillRect(x0,y0,x1 - x0,y1 - y0);
		}
		if(null != lineColor) {
			this.ctx.lineWidth = weight;
			this.ctx.strokeStyle = thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(lineColor);
			this.ctx.strokeRect(x0,y0,x1 - x0,y1 - y0);
		}
		return this;
	}
	,animate: function(x,y) {
		var _gthis = this;
		var _0 = x;
		var t = null == _0 ? null : _0;
		var _01 = y;
		var t1 = null == _01 ? null : _01;
		var interaction = new minicanvas_CanvasInteraction(this,t != null ? t : this.width / 2,t1 != null ? t1 : this.height,function(stack) {
			_gthis.resolveStack(stack,$bind(_gthis,_gthis.afterAnimate));
			_gthis.storeFrame();
		});
		this.beforeAnimate();
		return interaction;
	}
	,animateNode: function(x,y) {
		if(this.isNode) {
			return this.animate(x,y);
		} else {
			return new minicanvas_Interaction(this);
		}
	}
	,animateBrowser: function(x,y) {
		if(this.isBrowser) {
			return this.animate(x,y);
		} else {
			return new minicanvas_Interaction(this);
		}
	}
	,storeFrame: function(times) {
		if(times == null) {
			times = 1;
		}
		return this;
	}
	,context: function(callback) {
		callback(this.ctx,this.width,this.height);
		return this;
	}
	,'with': function(callback) {
		callback(this);
		return this;
	}
	,onClick: function(callback) {
		return this.onMouseEvent("click",null,callback);
	}
	,onKeyDown: function(callback) {
		var _gthis = this;
		this._keyDown = { listener : function(e) {
			_gthis.keyDown(e.keyCode);
		}, callback : callback};
		if(this.isBrowser) {
			if(minicanvas_BrowserCanvas.attachKeyEventsToCanvas) {
				this.canvas.setAttribute("tabIndex","1");
				this.canvas.addEventListener("keydown",this._keyDown.listener);
			} else {
				window.addEventListener("keydown",this._keyDown.listener);
			}
		}
		return this;
	}
	,onKeyRepeat: function(callback) {
		var _gthis = this;
		var threshold = 40;
		var keys = thx__$Set_Set_$Impl_$.createInt();
		this._keyRepeat = { listener : function(e) {
			var isEmpty = thx__$Set_Set_$Impl_$.get_length(keys) == 0;
			thx__$Set_Set_$Impl_$.add(keys,e.keyCode);
			if(!isEmpty) {
				return;
			}
			var cancel = thx_Timer.repeat(function() {
				_gthis.keyRepeat(thx__$Set_Set_$Impl_$.toArray(keys));
			},threshold);
			var keyupListener = null;
			var keyupListener1 = function(e1) {
				keys.remove(e1.keyCode);
				if(thx__$Set_Set_$Impl_$.get_length(keys) > 0) {
					return;
				}
				cancel();
				if(minicanvas_BrowserCanvas.attachKeyEventsToCanvas) {
					_gthis.canvas.removeEventListener("keyup",keyupListener);
				} else {
					window.removeEventListener("keyup",keyupListener);
				}
			};
			if(minicanvas_BrowserCanvas.attachKeyEventsToCanvas) {
				_gthis.canvas.addEventListener("keyup",keyupListener1);
			} else {
				window.addEventListener("keyup",keyupListener1);
			}
		}, callback : callback};
		if(this.isBrowser) {
			if(minicanvas_BrowserCanvas.attachKeyEventsToCanvas) {
				this.canvas.setAttribute("tabIndex","1");
				this.canvas.addEventListener("keydown",this._keyRepeat.listener);
			} else {
				window.addEventListener("keydown",this._keyRepeat.listener);
			}
		}
		return this;
	}
	,onKeyUp: function(callback) {
		var _gthis = this;
		this._keyUp = { listener : function(e) {
			_gthis.keyUp(e.keyCode);
		}, callback : callback};
		if(this.isBrowser) {
			if(minicanvas_BrowserCanvas.attachKeyEventsToCanvas) {
				this.canvas.setAttribute("tabIndex","1");
				this.canvas.addEventListener("keyup",this._keyUp.listener);
			} else {
				window.addEventListener("keyup",this._keyUp.listener);
			}
		}
		return this;
	}
	,offKeyDown: function() {
		if(this.isBrowser && null != this._keyDown) {
			if(minicanvas_BrowserCanvas.attachKeyEventsToCanvas) {
				this.canvas.removeAttribute("tabIndex");
				this.canvas.removeEventListener("keydown",this._keyDown.listener);
			} else {
				window.removeEventListener("keydown",this._keyDown.listener);
			}
		}
		this._keyDown = null;
		return this;
	}
	,offKeyUp: function() {
		if(this.isBrowser && null != this._keyUp) {
			if(minicanvas_BrowserCanvas.attachKeyEventsToCanvas) {
				this.canvas.removeAttribute("tabIndex");
				this.canvas.removeEventListener("keyup",this._keyUp.listener);
			} else {
				window.removeEventListener("keyup",this._keyUp.listener);
			}
		}
		this._keyUp = null;
		return this;
	}
	,onDown: function(callback) {
		return this.onMouseEvent("mousedown",null,callback);
	}
	,onMove: function(callback) {
		return this.onMouseEvent("mousemove",null,callback);
	}
	,onTrail: function(callback) {
		var _gthis = this;
		var first = true;
		var x0 = 0.0;
		var y0 = 0.0;
		var x1;
		var y1;
		var listener = function(e) {
			if(first) {
				x0 = e.x;
				y0 = e.y;
				first = false;
			} else {
				x1 = e.x;
				y1 = e.y;
				callback({ mini : _gthis, x0 : x0, y0 : y0, x1 : x1, y1 : y1});
				x0 = x1;
				y0 = y1;
			}
		};
		return this.onMouseEvent("mousemove","trail",listener);
	}
	,onUp: function(callback) {
		return this.onMouseEvent("mouseup",null,callback);
	}
	,offClick: function() {
		return this.offMouseEvent("click");
	}
	,offDown: function() {
		return this.offMouseEvent("mousedown");
	}
	,offMove: function() {
		return this.offMouseEvent("mousemove");
	}
	,offTrail: function() {
		return this.offMouseEvent("mousemove","trail");
	}
	,offUp: function() {
		return this.offMouseEvent("mouseup");
	}
	,click: function(x,y) {
		return this.trigger("click",x,y);
	}
	,down: function(x,y) {
		return this.trigger("mousedown",x,y);
	}
	,keyDown: function(keyCode) {
		if(null != this._keyDown) {
			this._keyDown.callback({ mini : this, keyCode : keyCode});
		}
		return this;
	}
	,keyRepeat: function(keyCodes) {
		if(null != this._keyRepeat) {
			this._keyRepeat.callback({ mini : this, keyCodes : keyCodes});
		}
		return this;
	}
	,keyUp: function(keyCode) {
		if(null != this._keyUp) {
			this._keyUp.callback({ mini : this, keyCode : keyCode});
		}
		return this;
	}
	,move: function(x,y) {
		if(x < 0 || x > this.width || y < 0 || y > this.height) {
			return this;
		}
		this.trigger("mousemove",x,y);
		this.trigger("trail",x,y);
		return this;
	}
	,up: function(x,y) {
		return this.trigger("mouseup",x,y);
	}
	,onMouseEvent: function(type,name,callback) {
		var _gthis = this;
		if(null == name) {
			name = type;
		}
		this.offMouseEvent(type,name);
		var listener = function(e) {
			var rect = _gthis.canvas.getBoundingClientRect();
			_gthis.trigger(name,e.clientX - rect.left,e.clientY - rect.top);
		};
		var _this = this.events;
		var value = { callback : callback, listener : listener};
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
		if(this.isBrowser) {
			this.canvas.addEventListener(type,listener,false);
		}
		return this;
	}
	,offMouseEvent: function(type,name) {
		if(null == name) {
			name = type;
		}
		var _this = this.events;
		var item = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		if(null == item) {
			return this;
		}
		this.events.remove(name);
		if(this.isBrowser) {
			this.canvas.removeEventListener(type,item.listener,false);
		}
		return this;
	}
	,trigger: function(name,x,y) {
		var _this = this.events;
		var item = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		if(null == item) {
			return this;
		}
		item.callback({ mini : this, x : x, y : y});
		return this;
	}
	,getDevicePixelRatio: function() {
		throw new js__$Boot_HaxeError("abstract method getDevicePixelRatio()");
	}
	,getBackingStoreRatio: function() {
		throw new js__$Boot_HaxeError("abstract method getBackingStoreRatio()");
	}
	,init: function() {
		throw new js__$Boot_HaxeError("abstract method init()");
	}
	,nativeDisplay: function(name) {
		throw new js__$Boot_HaxeError("abstract method nativeDisplay()");
	}
	,processScale: function() {
		var _g = this.scaleMode;
		if(_g[1] == 1) {
			var ratio = this.getDevicePixelRatio() / this.getBackingStoreRatio();
			if(ratio != 1) {
				this.scaleMode = minicanvas_ScaleMode.Scaled(ratio);
			} else {
				this.scaleMode = minicanvas_ScaleMode.NoScale;
			}
		}
	}
	,_keyUp: null
	,_keyDown: null
	,_keyRepeat: null
	,beforeAnimate: function() {
	}
	,afterAnimate: function() {
	}
	,resolveStack: function(stack,done) {
		if(stack.length == 0) {
			done();
			return;
		}
		(stack.shift())();
		this.storeFrame();
		this.resolveStack(stack,done);
	}
	,__class__: minicanvas_MiniCanvas
};
var minicanvas_ScaleMode = { __ename__ : ["minicanvas","ScaleMode"], __constructs__ : ["NoScale","Auto","Scaled"] };
minicanvas_ScaleMode.NoScale = ["NoScale",0];
minicanvas_ScaleMode.NoScale.__enum__ = minicanvas_ScaleMode;
minicanvas_ScaleMode.Auto = ["Auto",1];
minicanvas_ScaleMode.Auto.__enum__ = minicanvas_ScaleMode;
minicanvas_ScaleMode.Scaled = function(v) { var $x = ["Scaled",2,v]; $x.__enum__ = minicanvas_ScaleMode; return $x; };
var minicanvas_BrowserCanvas = function(width,height,scaleMode) {
	this.isNode = false;
	this.isBrowser = true;
	if(null == scaleMode) {
		scaleMode = minicanvas_BrowserCanvas.defaultScaleMode;
	}
	minicanvas_MiniCanvas.call(this,width,height,scaleMode);
};
minicanvas_BrowserCanvas.__name__ = ["minicanvas","BrowserCanvas"];
minicanvas_BrowserCanvas.devicePixelRatio = function() {
	return window.devicePixelRatio || 1;
};
minicanvas_BrowserCanvas.backingStoreRatio = function() {
	if(minicanvas_BrowserCanvas._backingStoreRatio == 0) {
		var canvas = window.document.createElement("canvas");
		var context = canvas.getContext("2d",null);
		minicanvas_BrowserCanvas._backingStoreRatio = (function(c) {
        return c.webkitBackingStorePixelRatio ||
          c.mozBackingStorePixelRatio ||
          c.msBackingStorePixelRatio ||
          c.oBackingStorePixelRatio ||
          c.backingStorePixelRatio || 1;
        })(context);
	}
	return minicanvas_BrowserCanvas._backingStoreRatio;
};
minicanvas_BrowserCanvas.__super__ = minicanvas_MiniCanvas;
minicanvas_BrowserCanvas.prototype = $extend(minicanvas_MiniCanvas.prototype,{
	append: function(name) {
		var figure = window.document.createElement("figure");
		figure.className = "minicanvas";
		figure.appendChild(this.canvas);
		if(null != name) {
			var caption = window.document.createElement("figcaption");
			caption.innerHTML = thx_Strings.humanize(name) + (minicanvas_MiniCanvas.displayGenerationTime ? " <span class=\"info\">(" + thx_Floats.roundTo(this.deltaTime,2) + "ms)</span>" : "");
			figure.appendChild(caption);
		}
		minicanvas_BrowserCanvas.parentNode.appendChild(figure);
		if(null != this._keyUp || null != this._keyDown) {
			this.canvas.focus();
		}
	}
	,init: function() {
		this.canvas = window.document.createElement("canvas");
		var _g = this.scaleMode;
		if(_g[1] == 2) {
			var v = _g[2];
			this.canvas.width = Math.round(this.width * v);
			this.canvas.height = Math.round(this.height * v);
			this.canvas.style.width = "" + this.width + "px";
			this.canvas.style.height = "" + this.height + "px";
			this.ctx = this.canvas.getContext("2d",null);
			this.ctx.scale(v,v);
		} else {
			this.canvas.width = this.width;
			this.canvas.height = this.height;
			this.ctx = this.canvas.getContext("2d",null);
		}
	}
	,getDevicePixelRatio: function() {
		return minicanvas_BrowserCanvas.devicePixelRatio();
	}
	,getBackingStoreRatio: function() {
		return minicanvas_BrowserCanvas.backingStoreRatio();
	}
	,nativeDisplay: function(name) {
		this.append(name);
	}
	,beforeAnimate: function() {
		this.canvas.style.pointerEvents = "none";
	}
	,afterAnimate: function() {
		this.canvas.style.pointerEvents = "auto";
	}
	,resolveStack: function(stack,done) {
		if(stack.length == 0) {
			done();
			return;
		}
		(stack.shift())();
		this.storeFrame();
		var f = $bind(this,this.resolveStack);
		var a1 = stack;
		var a2 = done;
		thx_Timer.delay(function() {
			f(a1,a2);
		},50);
	}
	,__class__: minicanvas_BrowserCanvas
});
var minicanvas_Interaction = function(mini) {
	this.mini = mini;
};
minicanvas_Interaction.__name__ = ["minicanvas","Interaction"];
minicanvas_Interaction.prototype = {
	mini: null
	,click: function(x,y) {
		return this;
	}
	,down: function(x,y) {
		return this;
	}
	,keyDown: function(keyCode) {
		return this;
	}
	,keyUp: function(keyCode) {
		return this;
	}
	,move: function(x,y,delta) {
		if(delta == null) {
			delta = 9;
		}
		return this;
	}
	,up: function(x,y) {
		return this;
	}
	,sleep: function(frames) {
		return this;
	}
	,done: function() {
		return this.mini;
	}
	,frame: function(callback) {
		callback(this.mini);
		return this;
	}
	,__class__: minicanvas_Interaction
};
var minicanvas_CanvasInteraction = function(mini,x,y,done) {
	minicanvas_Interaction.call(this,mini);
	this.x = x;
	this.y = y;
	this.stack = [];
	this._done = done;
};
minicanvas_CanvasInteraction.__name__ = ["minicanvas","CanvasInteraction"];
minicanvas_CanvasInteraction.__super__ = minicanvas_Interaction;
minicanvas_CanvasInteraction.prototype = $extend(minicanvas_Interaction.prototype,{
	x: null
	,y: null
	,stack: null
	,_done: null
	,click: function(x,y) {
		if(this.x != x || this.y != y) {
			this.move(x,y);
		}
		var f = ($_=this.mini,$bind($_,$_.click));
		var x1 = x;
		var y1 = y;
		var tmp = function() {
			return f(x1,y1);
		};
		this.stack.push(tmp);
		return this;
	}
	,down: function(x,y) {
		if(this.x != x || this.y != y) {
			this.move(x,y);
		}
		var f = ($_=this.mini,$bind($_,$_.down));
		var x1 = x;
		var y1 = y;
		var tmp = function() {
			return f(x1,y1);
		};
		this.stack.push(tmp);
		return this;
	}
	,frame: function(callback) {
		var f = callback;
		var a1 = this.mini;
		var tmp = function() {
			f(a1);
		};
		this.stack.push(tmp);
		return this;
	}
	,keyDown: function(keyCode) {
		var f = ($_=this.mini,$bind($_,$_.keyDown));
		var a1 = keyCode;
		var tmp = function() {
			return f(a1);
		};
		this.stack.push(tmp);
		return this;
	}
	,keyUp: function(keyCode) {
		var f = ($_=this.mini,$bind($_,$_.keyUp));
		var a1 = keyCode;
		var tmp = function() {
			return f(a1);
		};
		this.stack.push(tmp);
		return this;
	}
	,move: function(x,y,delta) {
		if(delta == null) {
			delta = 9;
		}
		var dist = Math.sqrt((x - this.x) * (x - this.x) + (y - this.y) * (y - this.y));
		var steps = Math.ceil(dist / delta);
		var dx;
		var dy;
		var step;
		var _g1 = 0;
		var _g = steps;
		while(_g1 < _g) {
			var i = _g1++;
			step = i / steps;
			dx = Math.round(thx_Floats.interpolate(step,this.x,x));
			dy = Math.round(thx_Floats.interpolate(step,this.y,y));
			this.stack.push((function(y1,x1,f) {
				return function() {
					return f[0](x1[0],y1[0]);
				};
			})([dy],[dx],[($_=this.mini,$bind($_,$_.move))]));
		}
		this.x = x;
		this.y = y;
		return this;
	}
	,up: function(x,y) {
		if(this.x != x || this.y != y) {
			this.move(x,y);
		}
		var f = ($_=this.mini,$bind($_,$_.up));
		var x1 = x;
		var y1 = y;
		var tmp = function() {
			return f(x1,y1);
		};
		this.stack.push(tmp);
		return this;
	}
	,sleep: function(frames) {
		var _g1 = 0;
		var _g = frames;
		while(_g1 < _g) {
			var i = _g1++;
			this.stack.push(function() {
			});
		}
		return this;
	}
	,done: function() {
		this._done(this.stack);
		return this.mini;
	}
	,__class__: minicanvas_CanvasInteraction
});
var minicanvas_NodeCanvas = function(width,height,scaleMode) {
	this.hasFrames = false;
	this.isNode = true;
	this.isBrowser = false;
	if(null == scaleMode) {
		scaleMode = minicanvas_NodeCanvas.defaultScaleMode;
	}
	minicanvas_MiniCanvas.call(this,width,height,scaleMode);
};
minicanvas_NodeCanvas.__name__ = ["minicanvas","NodeCanvas"];
minicanvas_NodeCanvas.create = function(width,height,scaleMode) {
	return new minicanvas_MiniCanvas(width,height,scaleMode);
};
minicanvas_NodeCanvas.__super__ = minicanvas_MiniCanvas;
minicanvas_NodeCanvas.prototype = $extend(minicanvas_MiniCanvas.prototype,{
	save: function(name) {
		var encoder = this.ensureEncoder();
		encoder.addFrame(this.ctx);
		if(null == name) {
			name = thx_Uuid.create();
		}
		encoder.save(name,function(file) {
			console.log("saved " + file);
		});
	}
	,hasFrames: null
	,storeFrame: function(times) {
		if(times == null) {
			times = 1;
		}
		this.hasFrames = true;
		if(times <= 0) {
			times = 1;
		}
		var _g1 = 0;
		var _g = times;
		while(_g1 < _g) {
			var i = _g1++;
			this.ensureEncoder().addFrame(this.ctx);
		}
		return this;
	}
	,init: function() {
		var Canvas = require("canvas");
		var _g = this.scaleMode;
		if(_g[1] == 2) {
			var v = _g[2];
			this.canvas = new Canvas(this.width * v,this.height * v);
			this.ctx = this.canvas.getContext("2d",null);
			this.ctx.scale(v,v);
		} else {
			this.canvas = new Canvas(this.width,this.height);
			this.ctx = this.canvas.getContext("2d",null);
		}
	}
	,getDevicePixelRatio: function() {
		return 1.0;
	}
	,getBackingStoreRatio: function() {
		return 1.0;
	}
	,nativeDisplay: function(name) {
		this.save(name);
	}
	,encoder: null
	,ensureEncoder: function() {
		if(null != this.encoder) {
			return this.encoder;
		}
		if(this.hasFrames) {
			return this.encoder = new minicanvas_node_GifEncoder(this.width,this.height);
		} else {
			return this.encoder = new minicanvas_node_PNGEncoder(this.canvas);
		}
	}
	,__class__: minicanvas_NodeCanvas
});
var minicanvas_node_IEncoder = function() { };
minicanvas_node_IEncoder.__name__ = ["minicanvas","node","IEncoder"];
minicanvas_node_IEncoder.prototype = {
	addFrame: null
	,save: null
	,__class__: minicanvas_node_IEncoder
};
var minicanvas_node_GifEncoder = function(width,height) {
	this.frames = 0;
	this.encoder = (function(w, h, self) {
      var GIFEncoder = require('gifencoder'),
          encoder = new GIFEncoder(w, h);
      self.stream = encoder.createReadStream();
      encoder.start();
      encoder.setRepeat(0);
      encoder.setDelay(50);
      encoder.setQuality(10);
      return encoder;
    })(width,height,this);
};
minicanvas_node_GifEncoder.__name__ = ["minicanvas","node","GifEncoder"];
minicanvas_node_GifEncoder.__interfaces__ = [minicanvas_node_IEncoder];
minicanvas_node_GifEncoder.prototype = {
	encoder: null
	,stream: null
	,frames: null
	,addFrame: function(ctx) {
		this.encoder.addFrame(ctx);
		this.frames++;
	}
	,save: function(name,callback) {
		this.stream.pipe(require("fs").createWriteStream("" + minicanvas_NodeCanvas.imagePath + "/" + name + ".gif"));
		callback("" + name + ".gif (frames " + this.frames + ")");
	}
	,__class__: minicanvas_node_GifEncoder
};
var minicanvas_node_PNGEncoder = function(canvas) {
	this.canvas = canvas;
};
minicanvas_node_PNGEncoder.__name__ = ["minicanvas","node","PNGEncoder"];
minicanvas_node_PNGEncoder.__interfaces__ = [minicanvas_node_IEncoder];
minicanvas_node_PNGEncoder.prototype = {
	canvas: null
	,addFrame: function(ctx) {
	}
	,save: function(name,callback) {
		var fs = require("fs");
		var out = fs.createWriteStream("" + minicanvas_NodeCanvas.imagePath + "/" + name + ".png");
		var stream = this.canvas.pngStream();
		stream.on("data",function(chunk) {
			out.write(chunk);
		});
		stream.on("end",function(_) {
			callback("" + name + ".png");
		});
	}
	,__class__: minicanvas_node_PNGEncoder
};
var thx_Arrays = function() { };
thx_Arrays.__name__ = ["thx","Arrays"];
thx_Arrays.append = function(array,element) {
	array.push(element);
	return array;
};
thx_Arrays.appendIf = function(array,cond,element) {
	if(cond) {
		array.push(element);
	}
	return array;
};
thx_Arrays.applyIndexes = function(array,indexes,incrementDuplicates) {
	if(incrementDuplicates == null) {
		incrementDuplicates = false;
	}
	if(indexes.length != array.length) {
		throw new thx_Error("`Arrays.applyIndexes` can only be applied to two arrays with the same length",null,{ fileName : "Arrays.hx", lineNumber : 55, className : "thx.Arrays", methodName : "applyIndexes"});
	}
	var result = [];
	if(incrementDuplicates) {
		var usedIndexes = thx__$Set_Set_$Impl_$.createInt();
		var _g1 = 0;
		var _g = array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var index = indexes[i];
			while(usedIndexes.h.hasOwnProperty(index)) ++index;
			thx__$Set_Set_$Impl_$.add(usedIndexes,index);
			result[index] = array[i];
		}
	} else {
		var _g11 = 0;
		var _g2 = array.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			result[indexes[i1]] = array[i1];
		}
	}
	return result;
};
thx_Arrays.monoid = function() {
	return { zero : [], append : function(a,b) {
		return a.concat(b);
	}};
};
thx_Arrays.after = function(array,element) {
	return array.slice(thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) + 1);
};
thx_Arrays.atIndex = function(array,i) {
	if(i >= 0 && i < array.length) {
		return haxe_ds_Option.Some(array[i]);
	} else {
		return haxe_ds_Option.None;
	}
};
thx_Arrays.getOption = function(array,i) {
	var value = array[i];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.each = function(arr,effect) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		effect(arr[i]);
	}
};
thx_Arrays.eachi = function(arr,effect) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		effect(arr[i],i);
	}
};
thx_Arrays.all = function(arr,predicate) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(!predicate(arr[i])) {
			return false;
		}
	}
	return true;
};
thx_Arrays.any = function(arr,predicate) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(arr[i])) {
			return true;
		}
	}
	return false;
};
thx_Arrays.at = function(arr,indexes) {
	return indexes.map(function(i) {
		return arr[i];
	});
};
thx_Arrays.before = function(array,element) {
	return array.slice(0,thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element));
};
thx_Arrays.commonsFromStart = function(self,other,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var count = 0;
	var _g = 0;
	var _g1 = thx_Arrays.zip(self,other);
	while(_g < _g1.length) {
		var pair = _g1[_g];
		++_g;
		if(equality(pair._0,pair._1)) {
			++count;
		} else {
			break;
		}
	}
	return self.slice(0,count);
};
thx_Arrays.compact = function(arr) {
	return arr.filter(function(v) {
		return null != v;
	});
};
thx_Arrays.compare = function(a,b) {
	var v = thx_Ints.compare(a.length,b.length);
	if(v != 0) {
		return v;
	}
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		v = thx_Dynamics.compare(a[i],b[i]);
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Arrays.contains = function(array,element,eq) {
	if(null == eq) {
		return thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) >= 0;
	} else {
		var _g1 = 0;
		var _g = array.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(eq(array[i],element)) {
				return true;
			}
		}
		return false;
	}
};
thx_Arrays.containsAll = function(array,elements,eq) {
	var el = $iterator(elements)();
	while(el.hasNext()) {
		var el1 = el.next();
		if(!thx_Arrays.contains(array,el1,eq)) {
			return false;
		}
	}
	return true;
};
thx_Arrays.containsAny = function(array,elements,eq) {
	var el = $iterator(elements)();
	while(el.hasNext()) {
		var el1 = el.next();
		if(thx_Arrays.contains(array,el1,eq)) {
			return true;
		}
	}
	return false;
};
thx_Arrays.create = function(length,fillWith) {
	var arr = length > 0 ? new Array(length) : [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		arr[i] = fillWith;
	}
	return arr;
};
thx_Arrays.fromItem = function(t) {
	return [t];
};
thx_Arrays.cross = function(a,b) {
	var r = [];
	var _g = 0;
	while(_g < a.length) {
		var va = a[_g];
		++_g;
		var _g1 = 0;
		while(_g1 < b.length) {
			var vb = b[_g1];
			++_g1;
			r.push([va,vb]);
		}
	}
	return r;
};
thx_Arrays.crossMulti = function(array) {
	var acopy = array.slice();
	var result = acopy.shift().map(function(v) {
		return [v];
	});
	while(acopy.length > 0) {
		var array1 = acopy.shift();
		var tresult = result;
		result = [];
		var _g = 0;
		while(_g < array1.length) {
			var v1 = array1[_g];
			++_g;
			var _g1 = 0;
			while(_g1 < tresult.length) {
				var ar = tresult[_g1];
				++_g1;
				var t = ar.slice();
				t.push(v1);
				result.push(t);
			}
		}
	}
	return result;
};
thx_Arrays.distinct = function(array,predicate) {
	var result = [];
	if(array.length <= 1) {
		return array.slice();
	}
	if(null == predicate) {
		predicate = thx_Functions.equality;
	}
	var _g = 0;
	while(_g < array.length) {
		var v = [array[_g]];
		++_g;
		var keep = !thx_Arrays.any(result,(function(v1) {
			return function(r) {
				return predicate(r,v1[0]);
			};
		})(v));
		if(keep) {
			result.push(v[0]);
		}
	}
	return result;
};
thx_Arrays.eachPair = function(array,callback) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _g3 = i;
		var _g2 = array.length;
		while(_g3 < _g2) {
			var j = _g3++;
			if(!callback(array[i],array[j])) {
				return;
			}
		}
	}
};
thx_Arrays.equals = function(a,b,equality) {
	if(a == null || b == null || a.length != b.length) {
		return false;
	}
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(!equality(a[i],b[i])) {
			return false;
		}
	}
	return true;
};
thx_Arrays.extract = function(a,predicate) {
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(a[i])) {
			return a.splice(i,1)[0];
		}
	}
	return null;
};
thx_Arrays.filterNull = function(a) {
	var arr = [];
	var _g = 0;
	while(_g < a.length) {
		var v = a[_g];
		++_g;
		if(null != v) {
			arr.push(v);
		}
	}
	return arr;
};
thx_Arrays.filterOption = function(a) {
	return thx_Arrays.reduce(a,function(acc,maybeV) {
		switch(maybeV[1]) {
		case 0:
			var v = maybeV[2];
			acc.push(v);
			break;
		case 1:
			break;
		}
		return acc;
	},[]);
};
thx_Arrays.flattenOptions = function(a) {
	var acc = [];
	var _g = 0;
	while(_g < a.length) {
		var e = a[_g];
		++_g;
		switch(e[1]) {
		case 0:
			var v = e[2];
			acc.push(v);
			break;
		case 1:
			return haxe_ds_Option.None;
		}
	}
	return haxe_ds_Option.Some(acc);
};
thx_Arrays.find = function(array,predicate) {
	var _g = 0;
	while(_g < array.length) {
		var element = array[_g];
		++_g;
		if(predicate(element)) {
			return element;
		}
	}
	return null;
};
thx_Arrays.findi = function(array,predicate) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(array[i],i)) {
			return array[i];
		}
	}
	return null;
};
thx_Arrays.findiOption = function(array,predicate) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(array[i],i)) {
			return haxe_ds_Option.Some(array[i]);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findOption = function(array,predicate) {
	var _g = 0;
	while(_g < array.length) {
		var element = array[_g];
		++_g;
		if(predicate(element)) {
			return haxe_ds_Option.Some(element);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findMap = function(values,f) {
	var _g = 0;
	while(_g < values.length) {
		var value = values[_g];
		++_g;
		var opt = f(value);
		if(!thx_Options.isNone(opt)) {
			return opt;
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.filterMap = function(values,f) {
	var acc = [];
	var _g = 0;
	while(_g < values.length) {
		var value = values[_g];
		++_g;
		var _g1 = f(value);
		switch(_g1[1]) {
		case 0:
			var v = _g1[2];
			acc.push(v);
			break;
		case 1:
			break;
		}
	}
	return acc;
};
thx_Arrays.findSome = function(options) {
	var _g = 0;
	while(_g < options.length) {
		var option = options[_g];
		++_g;
		if(!thx_Options.isNone(option)) {
			return option;
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findIndex = function(array,predicate) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(array[i])) {
			return i;
		}
	}
	return -1;
};
thx_Arrays.findLast = function(array,predicate) {
	var len = array.length;
	var j;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i = _g1++;
		j = len - i - 1;
		if(predicate(array[j])) {
			return array[j];
		}
	}
	return null;
};
thx_Arrays.first = function(array) {
	return array[0];
};
thx_Arrays.firstOption = function(array) {
	var value = array[0];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.flatMap = function(array,callback) {
	var array1 = array.map(callback);
	return Array.prototype.concat.apply([],array1);
};
thx_Arrays.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx_Arrays.from = function(array,element) {
	return array.slice(thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element));
};
thx_Arrays.groupByAppend = function(arr,resolver,map) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var v = arr[i];
		var key = resolver(v);
		var acc = map.get(key);
		if(null == acc) {
			map.set(key,[v]);
		} else {
			acc.push(v);
		}
	}
	return map;
};
thx_Arrays.spanByIndex = function(arr,spanKey) {
	var acc = [];
	var cur = null;
	var j = -1;
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var k = spanKey(i);
		if(k == null) {
			throw new thx_Error("spanKey function returned null for index " + i,null,{ fileName : "Arrays.hx", lineNumber : 633, className : "thx.Arrays", methodName : "spanByIndex"});
		}
		if(cur == k) {
			acc[j].push(arr[i]);
		} else {
			cur = k;
			++j;
			acc.push([arr[i]]);
		}
	}
	return acc;
};
thx_Arrays.hasElements = function(array) {
	if(null != array) {
		return array.length > 0;
	} else {
		return false;
	}
};
thx_Arrays.head = function(array) {
	return array[0];
};
thx_Arrays.ifEmpty = function(array,alt) {
	if(null != array && 0 != array.length) {
		return array;
	} else {
		return alt;
	}
};
thx_Arrays.initial = function(array) {
	return array.slice(0,array.length - 1);
};
thx_Arrays.intersperse = function(array,value) {
	return thx_Arrays.reducei(array,function(acc,v,i) {
		acc[i * 2] = v;
		return acc;
	},thx_Arrays.create(array.length * 2 - 1,value));
};
thx_Arrays.interspersef = function(array,f) {
	if(array.length == 0) {
		return [];
	}
	var acc = [array[0]];
	var _g1 = 1;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		acc.push(f());
		acc.push(array[i]);
	}
	return acc;
};
thx_Arrays.isEmpty = function(array) {
	if(null != array) {
		return array.length == 0;
	} else {
		return true;
	}
};
thx_Arrays.last = function(array) {
	return array[array.length - 1];
};
thx_Arrays.lastOption = function(array) {
	var value = array[array.length - 1];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.map = function(array,callback) {
	var r = [];
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		r.push(callback(array[i]));
	}
	return r;
};
thx_Arrays.mapi = function(array,callback) {
	var r = [];
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		r.push(callback(array[i],i));
	}
	return r;
};
thx_Arrays.mapRight = function(array,callback) {
	var i = array.length;
	var result = [];
	while(--i >= 0) result.push(callback(array[i]));
	return result;
};
thx_Arrays.order = function(array,sort) {
	var n = array.slice();
	n.sort(sort);
	return n;
};
thx_Arrays.pull = function(array,toRemove,equality) {
	var _g = 0;
	while(_g < toRemove.length) {
		var element = toRemove[_g];
		++_g;
		thx_Arrays.removeAll(array,element,equality);
	}
};
thx_Arrays.pushIf = function(array,condition,value) {
	if(condition) {
		array.push(value);
	}
	return array;
};
thx_Arrays.rank = function(array,compare,incrementDuplicates) {
	if(incrementDuplicates == null) {
		incrementDuplicates = true;
	}
	var r = [];
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = { _0 : array[i], _1 : i};
		r.push(this1);
	}
	var arr = r;
	arr.sort(function(a,b) {
		return compare(a._0,b._0);
	});
	if(incrementDuplicates) {
		var usedIndexes = thx__$Set_Set_$Impl_$.createInt();
		return thx_Arrays.reducei(arr,function(acc,x,i1) {
			var index = i1 > 0 && compare(arr[i1 - 1]._0,x._0) == 0 ? acc[arr[i1 - 1]._1] : i1;
			while(usedIndexes.h.hasOwnProperty(index)) ++index;
			thx__$Set_Set_$Impl_$.add(usedIndexes,index);
			acc[x._1] = index;
			return acc;
		},[]);
	} else {
		return thx_Arrays.reducei(arr,function(acc1,x1,i2) {
			acc1[x1._1] = i2 > 0 && compare(arr[i2 - 1]._0,x1._0) == 0 ? acc1[arr[i2 - 1]._1] : i2;
			return acc1;
		},[]);
	}
};
thx_Arrays.reduce = function(array,f,initial) {
	var _g = 0;
	while(_g < array.length) {
		var v = array[_g];
		++_g;
		initial = f(initial,v);
	}
	return initial;
};
thx_Arrays.foldLeft = function(array,init,f) {
	return thx_Arrays.reduce(array,f,init);
};
thx_Arrays.foldLeft1 = function(array,f) {
	var tail = thx_Arrays.dropLeft(array,1);
	var head = array[0];
	if(head == null) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(thx_Arrays.reduce(tail,f,head));
	}
};
thx_Arrays.foldLeftEither = function(array,init,f) {
	var acc = thx_Either.Right(init);
	var _g = 0;
	while(_g < array.length) {
		var a = array[_g];
		++_g;
		switch(acc[1]) {
		case 0:
			var error = acc[2];
			return acc;
		case 1:
			var b = acc[2];
			acc = f(b,a);
			break;
		}
	}
	return acc;
};
thx_Arrays.foldMap = function(array,f,m) {
	var _e = m;
	return thx_Arrays.reduce(array.map(f),function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	},thx__$Monoid_Monoid_$Impl_$.get_zero(m));
};
thx_Arrays.fold = function(array,m) {
	return thx_Arrays.foldMap(array,thx_Functions.identity,m);
};
thx_Arrays.nel = function(array) {
	return thx__$Nel_Nel_$Impl_$.fromArray(array);
};
thx_Arrays.foldS = function(array,s) {
	return thx_Options.map(thx_Arrays.nel(array),function(x) {
		return thx__$Nel_Nel_$Impl_$.fold(x,s);
	});
};
thx_Arrays.resize = function(array,length,fill) {
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_Arrays.resized = function(array,length,fill) {
	array = array.slice();
	return thx_Arrays.resize(array,length,fill);
};
thx_Arrays.reducei = function(array,f,initial) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		initial = f(initial,array[i],i);
	}
	return initial;
};
thx_Arrays.reduceRight = function(array,f,initial) {
	var i = array.length;
	while(--i >= 0) initial = f(initial,array[i]);
	return initial;
};
thx_Arrays.removeAll = function(array,element,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var i = array.length;
	while(--i >= 0) if(equality(array[i],element)) {
		array.splice(i,1);
	}
};
thx_Arrays.rest = function(array) {
	return array.slice(1);
};
thx_Arrays.reversed = function(array) {
	var result = array.slice();
	result.reverse();
	return result;
};
thx_Arrays.sample = function(array,n) {
	var b = array.length;
	if(n < b) {
		n = n;
	} else {
		n = b;
	}
	var copy = array.slice();
	var result = [];
	var _g1 = 0;
	var _g = n;
	while(_g1 < _g) {
		var i = _g1++;
		result.push(copy.splice(Std.random(copy.length),1)[0]);
	}
	return result;
};
thx_Arrays.sampleOne = function(array) {
	return array[Std.random(array.length)];
};
thx_Arrays.string = function(arr) {
	var strings = arr.map(thx_Dynamics.string);
	return "[" + strings.join(", ") + "]";
};
thx_Arrays.shuffle = function(a) {
	var t = thx_Ints.range(a.length);
	var array = [];
	while(t.length > 0) {
		var pos = Std.random(t.length);
		var index = t[pos];
		t.splice(pos,1);
		array.push(a[index]);
	}
	return array;
};
thx_Arrays.split = function(array,parts) {
	var len = Math.ceil(array.length / parts);
	return thx_Arrays.splitBy(array,len);
};
thx_Arrays.splitBy = function(array,len) {
	var res = [];
	var b = array.length;
	if(len < b) {
		len = len;
	} else {
		len = b;
	}
	var _g1 = 0;
	var _g = Math.ceil(array.length / len);
	while(_g1 < _g) {
		var p = _g1++;
		res.push(array.slice(p * len,(p + 1) * len));
	}
	return res;
};
thx_Arrays.splitByPad = function(arr,len,pad) {
	var res = thx_Arrays.splitBy(arr,len);
	while(res[res.length - 1].length < len) res[res.length - 1].push(pad);
	return res;
};
thx_Arrays.tail = function(array) {
	return array.slice(1);
};
thx_Arrays.take = function(arr,n) {
	return arr.slice(0,n);
};
thx_Arrays.takeLast = function(arr,n) {
	return arr.slice(arr.length - n);
};
thx_Arrays.traverseOption = function(arr,f) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx_Options.ap(f(t),thx_Options.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}));
	},haxe_ds_Option.Some([]));
};
thx_Arrays.traverseValidation = function(arr,f,s) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx__$Validation_Validation_$Impl_$.ap(f(t),thx__$Validation_Validation_$Impl_$.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),s);
	},thx_Either.Right([]));
};
thx_Arrays.traverseValidationIndexed = function(arr,f,s) {
	return thx_Arrays.reducei(arr,function(acc,t,i) {
		return thx__$Validation_Validation_$Impl_$.ap(f(t,i),thx__$Validation_Validation_$Impl_$.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),s);
	},thx_Either.Right([]));
};
thx_Arrays.rotate = function(arr) {
	var result = [];
	var _g1 = 0;
	var _g = arr[0].length;
	while(_g1 < _g) {
		var i = _g1++;
		var row = [];
		result.push(row);
		var _g3 = 0;
		var _g2 = arr.length;
		while(_g3 < _g2) {
			var j = _g3++;
			row.push(arr[j][i]);
		}
	}
	return result;
};
thx_Arrays.sliding2 = function(arr,f) {
	if(arr.length < 2) {
		return [];
	} else {
		var result = [];
		var _g1 = 0;
		var _g = arr.length - 1;
		while(_g1 < _g) {
			var i = _g1++;
			result.push(f(arr[i],arr[i + 1]));
		}
		return result;
	}
};
thx_Arrays.unzip = function(array) {
	var a1 = [];
	var a2 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
	});
	var this1 = { _0 : a1, _1 : a2};
	return this1;
};
thx_Arrays.unzip3 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3};
	return this1;
};
thx_Arrays.unzip4 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
	return this1;
};
thx_Arrays.unzip5 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
	return this1;
};
thx_Arrays.zip = function(array1,array2) {
	var a = array1.length;
	var b = array2.length;
	var length = a < b ? a : b;
	var array = [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = { _0 : array1[i], _1 : array2[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip3 = function(array1,array2,array3) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length]);
	var array = [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip4 = function(array1,array2,array3,array4) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length]);
	var array = [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip5 = function(array1,array2,array3,array4,array5) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length,array5.length]);
	var array = [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i], _4 : array5[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zipAp = function(ax,fx) {
	var result = [];
	var _g1 = 0;
	var a = ax.length;
	var b = fx.length;
	var _g = a < b ? a : b;
	while(_g1 < _g) {
		var i = _g1++;
		result.push(fx[i](ax[i]));
	}
	return result;
};
thx_Arrays.zip2Ap = function(f,ax,bx) {
	return thx_Arrays.zipAp(bx,ax.map(thx_Functions2.curry(f)));
};
thx_Arrays.zip3Ap = function(f,ax,bx,cx) {
	var f1 = f;
	return thx_Arrays.zipAp(cx,thx_Arrays.zip2Ap(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	},ax,bx));
};
thx_Arrays.zip4Ap = function(f,ax,bx,cx,dx) {
	var f1 = f;
	return thx_Arrays.zipAp(dx,thx_Arrays.zip3Ap(function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	},ax,bx,cx));
};
thx_Arrays.zip5Ap = function(f,ax,bx,cx,dx,ex) {
	var f1 = f;
	return thx_Arrays.zipAp(ex,thx_Arrays.zip4Ap(function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	},ax,bx,cx,dx));
};
thx_Arrays.withPrepend = function(arr,el) {
	return [el].concat(arr);
};
thx_Arrays["with"] = function(arr,el) {
	return arr.concat([el]);
};
thx_Arrays.withSlice = function(arr,other,start,length) {
	if(length == null) {
		length = 0;
	}
	return arr.slice(0,start).concat(other).concat(arr.slice(start + length));
};
thx_Arrays.withInsert = function(arr,el,pos) {
	return arr.slice(0,pos).concat([el]).concat(arr.slice(pos));
};
thx_Arrays.maxBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(thx_Arrays.reduce(arr,function(a0,a1) {
			return thx__$Ord_Ord_$Impl_$.max(_e,a0,a1);
		},arr[0]));
	}
};
thx_Arrays.minBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(thx_Arrays.reduce(arr,function(a0,a1) {
			return thx__$Ord_Ord_$Impl_$.min(_e,a0,a1);
		},arr[0]));
	}
};
thx_Arrays.toMap = function(arr,keyOrder) {
	var m = thx_fp_MapImpl.Tip;
	var collisions = [];
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var tuple = arr[i];
		if(thx_Options.isNone(thx_fp__$Map_Map_$Impl_$.lookup(m,tuple._0,keyOrder))) {
			m = thx_fp__$Map_Map_$Impl_$.insert(m,tuple._0,tuple._1,keyOrder);
		} else {
			collisions.push(tuple._0);
		}
	}
	return thx_Options.toFailure(thx__$Nel_Nel_$Impl_$.fromArray(collisions),m);
};
thx_Arrays.toStringMap = function(arr) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		var key = t._0;
		var value = t._1;
		if(__map_reserved[key] != null) {
			acc.setReserved(key,value);
		} else {
			acc.h[key] = value;
		}
		return acc;
	},new haxe_ds_StringMap());
};
thx_Arrays.partition = function(arr,f) {
	var this1 = { _0 : [], _1 : []};
	return thx_Arrays.reduce(arr,function(a,b) {
		if(f(b)) {
			a._0.push(b);
		} else {
			a._1.push(b);
		}
		return a;
	},this1);
};
thx_Arrays.partitionWhile = function(arr,f) {
	var partitioning = true;
	var this1 = { _0 : [], _1 : []};
	return thx_Arrays.reduce(arr,function(a,b) {
		if(partitioning) {
			if(f(b)) {
				a._0.push(b);
			} else {
				partitioning = false;
				a._1.push(b);
			}
		} else {
			a._1.push(b);
		}
		return a;
	},this1);
};
thx_Arrays.dropLeft = function(a,n) {
	if(n >= a.length) {
		return [];
	} else {
		return a.slice(n);
	}
};
thx_Arrays.dropRight = function(a,n) {
	if(n >= a.length) {
		return [];
	} else {
		return a.slice(0,a.length - n);
	}
};
thx_Arrays.dropWhile = function(a,p) {
	var r = [].concat(a);
	var _g = 0;
	while(_g < a.length) {
		var e = a[_g];
		++_g;
		if(p(e)) {
			r.shift();
		} else {
			break;
		}
	}
	return r;
};
thx_Arrays.pad = function(arr,len,def) {
	var len0 = len - arr.length;
	var arr0 = [];
	var _g1 = 0;
	var _g = len0;
	while(_g1 < _g) {
		var i = _g1++;
		arr0.push(def);
	}
	return arr.concat(arr0);
};
thx_Arrays.fill = function(arr,def) {
	return arr.map(function(x) {
		if(x == null) {
			return def;
		} else {
			return x;
		}
	});
};
var thx_ArrayFloats = function() { };
thx_ArrayFloats.__name__ = ["thx","ArrayFloats"];
thx_ArrayFloats.average = function(arr) {
	return thx_ArrayFloats.sum(arr) / arr.length;
};
thx_ArrayFloats.compact = function(arr) {
	return arr.filter(function(v) {
		if(null != v) {
			return isFinite(v);
		} else {
			return false;
		}
	});
};
thx_ArrayFloats.max = function(arr) {
	return thx_Options.get(thx_Arrays.maxBy(arr,thx_Floats.order));
};
thx_ArrayFloats.min = function(arr) {
	return thx_Options.get(thx_Arrays.minBy(arr,thx_Floats.order));
};
thx_ArrayFloats.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0.0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayFloats.resized = function(array,length,fill) {
	if(fill == null) {
		fill = 0.0;
	}
	array = array.slice();
	return thx_ArrayFloats.resize(array,length,fill);
};
thx_ArrayFloats.standardDeviation = function(array) {
	if(array.length < 2) {
		return 0.0;
	}
	var mean = thx_ArrayFloats.average(array);
	var variance = thx_Arrays.reduce(array,function(acc,val) {
		return acc + Math.pow(val - mean,2);
	},0) / (array.length - 1);
	return Math.sqrt(variance);
};
thx_ArrayFloats.sum = function(arr) {
	return thx_Arrays.reduce(arr,function(tot,v) {
		return tot + v;
	},0.0);
};
var thx_ArrayInts = function() { };
thx_ArrayInts.__name__ = ["thx","ArrayInts"];
thx_ArrayInts.average = function(arr) {
	return thx_ArrayInts.sum(arr) / arr.length;
};
thx_ArrayInts.max = function(arr) {
	return thx_Options.get(thx_Arrays.maxBy(arr,thx_Ints.order));
};
thx_ArrayInts.min = function(arr) {
	return thx_Options.get(thx_Arrays.minBy(arr,thx_Ints.order));
};
thx_ArrayInts.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayInts.resized = function(array,length,fill) {
	if(fill == null) {
		fill = 0;
	}
	array = array.slice();
	return thx_ArrayInts.resize(array,length,fill);
};
thx_ArrayInts.sum = function(arr) {
	return thx_Arrays.reduce(arr,function(tot,v) {
		return tot + v;
	},0);
};
var thx_ArrayStrings = function() { };
thx_ArrayStrings.__name__ = ["thx","ArrayStrings"];
thx_ArrayStrings.compact = function(arr) {
	return arr.filter(function(v) {
		return !thx_Strings.isEmpty(v);
	});
};
thx_ArrayStrings.max = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.maxBy(arr,thx_Strings.order),null);
};
thx_ArrayStrings.min = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.minBy(arr,thx_Strings.order),null);
};
var thx_Bools = function() { };
thx_Bools.__name__ = ["thx","Bools"];
thx_Bools.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a) {
		return -1;
	} else {
		return 1;
	}
};
thx_Bools.toInt = function(v) {
	if(v) {
		return 1;
	} else {
		return 0;
	}
};
thx_Bools.canParse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return true;
	} else {
		switch(_g) {
		case "0":case "1":case "false":case "off":case "on":case "true":
			return true;
		default:
			return false;
		}
	}
};
thx_Bools.parse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return false;
	} else {
		switch(_g) {
		case "1":case "on":case "true":
			return true;
		case "0":case "false":case "off":
			return false;
		default:
			var v1 = _g;
			throw new js__$Boot_HaxeError("unable to parse \"" + v1 + "\"");
		}
	}
};
thx_Bools.xor = function(a,b) {
	return a != b;
};
thx_Bools.option = function(cond,a) {
	if(cond) {
		return haxe_ds_Option.Some(a);
	} else {
		return haxe_ds_Option.None;
	}
};
var thx__$Ord_Ord_$Impl_$ = {};
thx__$Ord_Ord_$Impl_$.__name__ = ["thx","_Ord","Ord_Impl_"];
thx__$Ord_Ord_$Impl_$.order = function(this1,a0,a1) {
	return this1(a0,a1);
};
thx__$Ord_Ord_$Impl_$.max = function(this1,a0,a1) {
	var _g = this1(a0,a1);
	switch(_g[1]) {
	case 1:
		return a0;
	case 0:case 2:
		return a1;
	}
};
thx__$Ord_Ord_$Impl_$.min = function(this1,a0,a1) {
	var _g = this1(a0,a1);
	switch(_g[1]) {
	case 1:
		return a1;
	case 0:case 2:
		return a0;
	}
};
thx__$Ord_Ord_$Impl_$.equal = function(this1,a0,a1) {
	return this1(a0,a1) == thx_OrderingImpl.EQ;
};
thx__$Ord_Ord_$Impl_$.contramap = function(this1,f) {
	return function(b0,b1) {
		var tmp = f(b0);
		var tmp1 = f(b1);
		return this1(tmp,tmp1);
	};
};
thx__$Ord_Ord_$Impl_$.inverse = function(this1) {
	return function(a0,a1) {
		return this1(a1,a0);
	};
};
thx__$Ord_Ord_$Impl_$.intComparison = function(this1,a0,a1) {
	var _g = this1(a0,a1);
	switch(_g[1]) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
thx__$Ord_Ord_$Impl_$.fromIntComparison = function(f) {
	return function(a,b) {
		return thx__$Ord_Ordering_$Impl_$.fromInt(f(a,b));
	};
};
thx__$Ord_Ord_$Impl_$.forComparable = function() {
	return function(a,b) {
		return thx__$Ord_Ordering_$Impl_$.fromInt(a.compareTo(b));
	};
};
thx__$Ord_Ord_$Impl_$.forComparableOrd = function() {
	return function(a,b) {
		return a.compareTo(b);
	};
};
var thx__$Ord_Ordering_$Impl_$ = {};
thx__$Ord_Ordering_$Impl_$.__name__ = ["thx","_Ord","Ordering_Impl_"];
thx__$Ord_Ordering_$Impl_$.fromInt = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx__$Ord_Ordering_$Impl_$.fromFloat = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx__$Ord_Ordering_$Impl_$.toInt = function(this1) {
	switch(this1[1]) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
var thx_OrderingImpl = { __ename__ : ["thx","OrderingImpl"], __constructs__ : ["LT","GT","EQ"] };
thx_OrderingImpl.LT = ["LT",0];
thx_OrderingImpl.LT.__enum__ = thx_OrderingImpl;
thx_OrderingImpl.GT = ["GT",1];
thx_OrderingImpl.GT.__enum__ = thx_OrderingImpl;
thx_OrderingImpl.EQ = ["EQ",2];
thx_OrderingImpl.EQ.__enum__ = thx_OrderingImpl;
var thx_Dates = function() { };
thx_Dates.__name__ = ["thx","Dates"];
thx_Dates.compare = function(a,b) {
	var a1 = a.getTime();
	var b1 = b.getTime();
	if(a1 < b1) {
		return -1;
	} else if(a1 > b1) {
		return 1;
	} else {
		return 0;
	}
};
thx_Dates.create = function(year,month,day,hour,minute,second) {
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	if(day == null) {
		day = 1;
	}
	if(month == null) {
		month = 0;
	}
	minute += Math.floor(second / 60);
	second %= 60;
	if(second < 0) {
		second += 60;
	}
	hour += Math.floor(minute / 60);
	minute %= 60;
	if(minute < 0) {
		minute += 60;
	}
	day += Math.floor(hour / 24);
	hour %= 24;
	if(hour < 0) {
		hour += 24;
	}
	if(day == 0) {
		--month;
		if(month < 0) {
			month = 11;
			--year;
		}
		day = thx_Dates.daysInMonth(year,month);
	}
	year += Math.floor(month / 12);
	month %= 12;
	if(month < 0) {
		month += 12;
	}
	var days = thx_Dates.daysInMonth(year,month);
	while(day > days) {
		if(day > days) {
			day -= days;
			++month;
		}
		if(month > 11) {
			month -= 12;
			++year;
		}
		days = thx_Dates.daysInMonth(year,month);
	}
	return new Date(year,month,day,hour,minute,second);
};
thx_Dates.daysRange = function(start,end) {
	if(thx_Dates.compare(end,start) < 0) {
		return [];
	}
	var days = [];
	while(!thx_Dates.sameDay(start,end)) {
		days.push(start);
		start = thx_Dates.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx_Dates.equals = function(self,other) {
	return self.getTime() == other.getTime();
};
thx_Dates.nearEquals = function(self,other,units,period) {
	if(units == null) {
		units = 1;
	}
	if(null == period) {
		period = thx_TimePeriod.Second;
	}
	if(units < 0) {
		units = -units;
	}
	var min = thx_Dates.jump(self,period,-units);
	var max = thx_Dates.jump(self,period,units);
	if(thx_Dates.compare(min,other) <= 0) {
		return thx_Dates.compare(max,other) >= 0;
	} else {
		return false;
	}
};
thx_Dates.greater = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.more = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.less = function(self,other) {
	return thx_Dates.compare(self,other) < 0;
};
thx_Dates.greaterEquals = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.moreEqual = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.lessEquals = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.lessEqual = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.isLeapYear = function(year) {
	if(year % 4 != 0) {
		return false;
	}
	if(year % 100 == 0) {
		return year % 400 == 0;
	}
	return true;
};
thx_Dates.isInLeapYear = function(d) {
	return thx_Dates.isLeapYear(d.getFullYear());
};
thx_Dates.daysInMonth = function(year,month) {
	switch(month) {
	case 1:
		if(thx_Dates.isLeapYear(year)) {
			return 29;
		} else {
			return 28;
		}
		break;
	case 0:case 2:case 4:case 6:case 7:case 9:case 11:
		return 31;
	case 3:case 5:case 8:case 10:
		return 30;
	default:
		throw new js__$Boot_HaxeError("Invalid month \"" + month + "\".  Month should be a number, Jan=0, Dec=11");
	}
};
thx_Dates.numDaysInMonth = function(month,year) {
	return thx_Dates.daysInMonth(year,month);
};
thx_Dates.daysInThisMonth = function(d) {
	return thx_Dates.daysInMonth(d.getFullYear(),d.getMonth());
};
thx_Dates.numDaysInThisMonth = function(d) {
	return thx_Dates.daysInThisMonth(d);
};
thx_Dates.sameYear = function(self,other) {
	return self.getFullYear() == other.getFullYear();
};
thx_Dates.sameMonth = function(self,other) {
	if(thx_Dates.sameYear(self,other)) {
		return self.getMonth() == other.getMonth();
	} else {
		return false;
	}
};
thx_Dates.sameDay = function(self,other) {
	if(thx_Dates.sameMonth(self,other)) {
		return self.getDate() == other.getDate();
	} else {
		return false;
	}
};
thx_Dates.sameHour = function(self,other) {
	if(thx_Dates.sameDay(self,other)) {
		return self.getHours() == other.getHours();
	} else {
		return false;
	}
};
thx_Dates.sameMinute = function(self,other) {
	if(thx_Dates.sameHour(self,other)) {
		return self.getMinutes() == other.getMinutes();
	} else {
		return false;
	}
};
thx_Dates.snapNext = function(date,period) {
	var this1 = thx__$Timestamp_Timestamp_$Impl_$.snapNext(date.getTime(),period);
	return new Date(this1);
};
thx_Dates.snapPrev = function(date,period) {
	var this1 = thx__$Timestamp_Timestamp_$Impl_$.snapPrev(date.getTime(),period);
	return new Date(this1);
};
thx_Dates.snapTo = function(date,period) {
	var this1 = thx__$Timestamp_Timestamp_$Impl_$.snapTo(date.getTime(),period);
	return new Date(this1);
};
thx_Dates.jump = function(date,period,amount) {
	var sec = date.getSeconds();
	var min = date.getMinutes();
	var hour = date.getHours();
	var day = date.getDate();
	var month = date.getMonth();
	var year = date.getFullYear();
	switch(period[1]) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hour += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		month += amount;
		break;
	case 6:
		year += amount;
		break;
	}
	return thx_Dates.create(year,month,day,hour,min,sec);
};
thx_Dates.max = function(self,other) {
	if(self.getTime() > other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.min = function(self,other) {
	if(self.getTime() < other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.snapToWeekDay = function(date,day,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var d = date.getDay();
	var s = day;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapNextWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s < d) {
		s += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapPrevWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s > d) {
		s -= 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.prevYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,-1);
};
thx_Dates.nextYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,1);
};
thx_Dates.prevMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,-1);
};
thx_Dates.nextMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,1);
};
thx_Dates.prevWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,-1);
};
thx_Dates.nextWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,1);
};
thx_Dates.prevDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,-1);
};
thx_Dates.nextDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,1);
};
thx_Dates.prevHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,-1);
};
thx_Dates.nextHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,1);
};
thx_Dates.prevMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,-1);
};
thx_Dates.nextMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,1);
};
thx_Dates.prevSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,-1);
};
thx_Dates.nextSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,1);
};
thx_Dates.withYear = function(date,year) {
	return thx_Dates.create(year,date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withMonth = function(date,month) {
	return thx_Dates.create(date.getFullYear(),month,date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withDay = function(date,day) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),day,date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withHour = function(date,hour) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),hour,date.getMinutes(),date.getSeconds());
};
thx_Dates.withMinute = function(date,minute) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),minute,date.getSeconds());
};
thx_Dates.withSecond = function(date,second) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),second);
};
thx_Dates.parseDate = function(s) {
	try {
		return thx_Either.Right(HxOverrides.strDate(s));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return thx_Either.Left("" + s + " could not be parsed to a valid Date value.");
	}
};
var thx_Dynamics = function() { };
thx_Dynamics.__name__ = ["thx","Dynamics"];
thx_Dynamics.equals = function(a,b) {
	if(!thx_Types.sameType(a,b)) {
		return false;
	}
	if(a == b) {
		return true;
	}
	var _g = Type["typeof"](a);
	switch(_g[1]) {
	case 0:case 1:case 2:case 3:
		return false;
	case 4:
		var fa = Reflect.fields(a);
		var fb = Reflect.fields(b);
		var _g1 = 0;
		while(_g1 < fa.length) {
			var field = fa[_g1];
			++_g1;
			HxOverrides.remove(fb,field);
			if(!Object.prototype.hasOwnProperty.call(b,field)) {
				return false;
			}
			var va = Reflect.field(a,field);
			if(Reflect.isFunction(va)) {
				continue;
			}
			var vb = Reflect.field(b,field);
			if(!thx_Dynamics.equals(va,vb)) {
				return false;
			}
		}
		if(fb.length > 0) {
			return false;
		}
		var t = false;
		var tmp;
		t = thx_Iterators.isIterator(a);
		if(!t) {
			tmp = thx_Iterables.isIterable(a);
		} else {
			tmp = true;
		}
		if(tmp) {
			if(t && !thx_Iterators.isIterator(b)) {
				return false;
			}
			if(!t && !thx_Iterables.isIterable(b)) {
				return false;
			}
			var aa = t ? thx_Iterators.toArray(a) : thx_Iterators.toArray($iterator(a)());
			var ab = t ? thx_Iterators.toArray(b) : thx_Iterators.toArray($iterator(b)());
			if(aa.length != ab.length) {
				return false;
			}
			var _g11 = 0;
			var _g2 = aa.length;
			while(_g11 < _g2) {
				var i = _g11++;
				if(!thx_Dynamics.equals(aa[i],ab[i])) {
					return false;
				}
			}
			return true;
		}
		return true;
	case 5:
		return Reflect.compareMethods(a,b);
	case 6:
		var c = _g[2];
		var ca = Type.getClassName(c);
		var cb = Type.getClassName(b == null ? null : js_Boot.getClass(b));
		if(ca != cb) {
			return false;
		}
		if(typeof(a) == "string") {
			return false;
		}
		if((a instanceof Array) && a.__enum__ == null) {
			var aa1 = a;
			var ab1 = b;
			if(aa1.length != ab1.length) {
				return false;
			}
			var _g12 = 0;
			var _g3 = aa1.length;
			while(_g12 < _g3) {
				var i1 = _g12++;
				if(!thx_Dynamics.equals(aa1[i1],ab1[i1])) {
					return false;
				}
			}
			return true;
		}
		if(js_Boot.__instanceof(a,Date)) {
			return a.getTime() == b.getTime();
		}
		if(js_Boot.__instanceof(a,haxe_IMap)) {
			var ha = a;
			var hb = b;
			var ka = thx_Iterators.toArray(ha.keys());
			var kb = thx_Iterators.toArray(hb.keys());
			if(ka.length != kb.length) {
				return false;
			}
			var _g4 = 0;
			while(_g4 < ka.length) {
				var key = ka[_g4];
				++_g4;
				if(!hb.exists(key) || !thx_Dynamics.equals(ha.get(key),hb.get(key))) {
					return false;
				}
			}
			return true;
		}
		var t1 = false;
		var tmp1;
		t1 = thx_Iterators.isIterator(a);
		if(!t1) {
			tmp1 = thx_Iterables.isIterable(a);
		} else {
			tmp1 = true;
		}
		if(tmp1) {
			var va1 = t1 ? thx_Iterators.toArray(a) : thx_Iterators.toArray($iterator(a)());
			var vb1 = t1 ? thx_Iterators.toArray(b) : thx_Iterators.toArray($iterator(b)());
			if(va1.length != vb1.length) {
				return false;
			}
			var _g13 = 0;
			var _g5 = va1.length;
			while(_g13 < _g5) {
				var i2 = _g13++;
				if(!thx_Dynamics.equals(va1[i2],vb1[i2])) {
					return false;
				}
			}
			return true;
		}
		var f = null;
		var tmp2;
		if(Object.prototype.hasOwnProperty.call(a,"equals")) {
			f = Reflect.field(a,"equals");
			tmp2 = Reflect.isFunction(f);
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			return f.apply(a,[b]);
		}
		var fields = Type.getInstanceFields(a == null ? null : js_Boot.getClass(a));
		var _g6 = 0;
		while(_g6 < fields.length) {
			var field1 = fields[_g6];
			++_g6;
			var va2 = Reflect.field(a,field1);
			if(Reflect.isFunction(va2)) {
				continue;
			}
			var vb2 = Reflect.field(b,field1);
			if(!thx_Dynamics.equals(va2,vb2)) {
				return false;
			}
		}
		return true;
	case 7:
		var e = _g[2];
		var ea = Type.getEnumName(e);
		var teb = Type.getEnum(b);
		var eb = Type.getEnumName(teb);
		if(ea != eb) {
			return false;
		}
		if(a[1] != b[1]) {
			return false;
		}
		var pa = a.slice(2);
		var pb = b.slice(2);
		var _g14 = 0;
		var _g7 = pa.length;
		while(_g14 < _g7) {
			var i3 = _g14++;
			if(!thx_Dynamics.equals(pa[i3],pb[i3])) {
				return false;
			}
		}
		return true;
	case 8:
		throw new js__$Boot_HaxeError("Unable to compare two unknown types");
		break;
	}
};
thx_Dynamics.clone = function(v,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = Type["typeof"](v);
	switch(_g[1]) {
	case 0:
		return null;
	case 1:case 2:case 3:case 5:case 7:case 8:
		return v;
	case 4:
		return thx_Objects.copyTo(v,{ });
	case 6:
		var c = _g[2];
		var name = Type.getClassName(c);
		switch(name) {
		case "Array":
			return v.map(function(v1) {
				return thx_Dynamics.clone(v1,cloneInstances);
			});
		case "Date":case "String":
			return v;
		default:
			if(cloneInstances) {
				var o = Type.createEmptyInstance(c);
				var _g1 = 0;
				var _g11 = Type.getInstanceFields(c);
				while(_g1 < _g11.length) {
					var field = _g11[_g1];
					++_g1;
					o[field] = thx_Dynamics.clone(Reflect.field(v,field),cloneInstances);
				}
				return o;
			} else {
				return v;
			}
		}
		break;
	}
};
thx_Dynamics.compare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	}
	if(null == b) {
		return 1;
	}
	if(!thx_Types.sameType(a,b)) {
		return haxe_Utf8.compare(thx_Types.toString(Type["typeof"](a)),thx_Types.toString(Type["typeof"](b)));
	}
	var _g = Type["typeof"](a);
	switch(_g[1]) {
	case 1:
		return thx_Ints.compare(a,b);
	case 2:
		var a1 = a;
		var b1 = b;
		if(a1 < b1) {
			return -1;
		} else if(a1 > b1) {
			return 1;
		} else {
			return 0;
		}
		break;
	case 3:
		return thx_Bools.compare(a,b);
	case 4:
		return thx_Objects.compare(a,b);
	case 6:
		var c = _g[2];
		var name = Type.getClassName(c);
		switch(name) {
		case "Array":
			return thx_Arrays.compare(a,b);
		case "Date":
			return thx_Dates.compare(a,b);
		case "String":
			return haxe_Utf8.compare(a,b);
		default:
			if(Object.prototype.hasOwnProperty.call(a,"compare")) {
				return Reflect.field(a,"compare").apply(a,[b]);
			} else {
				return haxe_Utf8.compare(Std.string(a),Std.string(b));
			}
		}
		break;
	case 7:
		var e = _g[2];
		return thx_Enums.compare(a,b);
	default:
		return 0;
	}
};
thx_Dynamics.string = function(v) {
	var _g = Type["typeof"](v);
	switch(_g[1]) {
	case 0:
		return "null";
	case 1:case 2:case 3:
		return "" + Std.string(v);
	case 4:
		return thx_Objects.string(v);
	case 5:
		return "<function>";
	case 6:
		var c = _g[2];
		var _g1 = Type.getClassName(c);
		switch(_g1) {
		case "Array":
			return thx_Arrays.string(v);
		case "Date":
			return HxOverrides.dateStr(v);
		case "String":
			return v;
		default:
			if(js_Boot.__instanceof(v,haxe_IMap)) {
				return thx_Maps.string(v);
			} else {
				return Std.string(v);
			}
		}
		break;
	case 7:
		var e = _g[2];
		return thx_Enums.string(v);
	case 8:
		return "<unknown>";
	}
};
var thx_DynamicsT = function() { };
thx_DynamicsT.__name__ = ["thx","DynamicsT"];
thx_DynamicsT.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_DynamicsT.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_DynamicsT.fields = function(o) {
	return Reflect.fields(o);
};
thx_DynamicsT.merge = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field1 = _g1[_g];
		++_g;
		var newv1 = Reflect.field(from,field1);
		if(Object.prototype.hasOwnProperty.call(to,field1)) {
			to[field1] = replacef(field1,Reflect.field(to,field1),newv1);
		} else {
			to[field1] = newv1;
		}
	}
	return to;
};
thx_DynamicsT.size = function(o) {
	return Reflect.fields(o).length;
};
thx_DynamicsT.values = function(o) {
	return Reflect.fields(o).map(function(key) {
		return Reflect.field(o,key);
	});
};
thx_DynamicsT.tuples = function(o) {
	return Reflect.fields(o).map(function(key) {
		var this1 = { _0 : key, _1 : Reflect.field(o,key)};
		return this1;
	});
};
var thx_Either = { __ename__ : ["thx","Either"], __constructs__ : ["Left","Right"] };
thx_Either.Left = function(value) { var $x = ["Left",0,value]; $x.__enum__ = thx_Either; return $x; };
thx_Either.Right = function(value) { var $x = ["Right",1,value]; $x.__enum__ = thx_Either; return $x; };
var thx_Eithers = function() { };
thx_Eithers.__name__ = ["thx","Eithers"];
thx_Eithers.isLeft = function(either) {
	switch(either[1]) {
	case 0:
		return true;
	case 1:
		return false;
	}
};
thx_Eithers.isRight = function(either) {
	switch(either[1]) {
	case 0:
		return false;
	case 1:
		return true;
	}
};
thx_Eithers.toLeft = function(either) {
	switch(either[1]) {
	case 0:
		var v = either[2];
		return haxe_ds_Option.Some(v);
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Eithers.toRight = function(either) {
	switch(either[1]) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var v = either[2];
		return haxe_ds_Option.Some(v);
	}
};
thx_Eithers.toLeftUnsafe = function(either) {
	switch(either[1]) {
	case 0:
		var v = either[2];
		return v;
	case 1:
		return null;
	}
};
thx_Eithers.toRightUnsafe = function(either) {
	switch(either[1]) {
	case 0:
		return null;
	case 1:
		var v = either[2];
		return v;
	}
};
thx_Eithers.map = function(either,f) {
	switch(either[1]) {
	case 0:
		var v = either[2];
		return thx_Either.Left(v);
	case 1:
		var v1 = either[2];
		return thx_Either.Right(f(v1));
	}
};
thx_Eithers.flatMap = function(either,f) {
	switch(either[1]) {
	case 0:
		var v = either[2];
		return thx_Either.Left(v);
	case 1:
		var v1 = either[2];
		return f(v1);
	}
};
thx_Eithers.leftMap = function(either,f) {
	switch(either[1]) {
	case 0:
		var v = either[2];
		return thx_Either.Left(f(v));
	case 1:
		var v1 = either[2];
		return thx_Either.Right(v1);
	}
};
thx_Eithers.orThrow = function(either,message) {
	switch(either[1]) {
	case 0:
		var v = either[2];
		throw new thx_Error("" + message + ": " + Std.string(v),null,{ fileName : "Eithers.hx", lineNumber : 93, className : "thx.Eithers", methodName : "orThrow"});
		break;
	case 1:
		var v1 = either[2];
		return v1;
	}
};
thx_Eithers.toVNel = function(either) {
	switch(either[1]) {
	case 0:
		var e = either[2];
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
	case 1:
		var v = either[2];
		return thx_Either.Right(v);
	}
};
thx_Eithers.cata = function(either,l,r) {
	switch(either[1]) {
	case 0:
		var l0 = either[2];
		return l(l0);
	case 1:
		var r0 = either[2];
		return r(r0);
	}
};
thx_Eithers.orElse = function(e0,e1) {
	if(e0[1] == 0) {
		var e = e0[2];
		return e1;
	} else {
		var right = e0;
		return right;
	}
};
var thx_Enums = function() { };
thx_Enums.__name__ = ["thx","Enums"];
thx_Enums.string = function(e) {
	var cons = e[0];
	var params = [];
	var _g = 0;
	var _g1 = e.slice(2);
	while(_g < _g1.length) {
		var param = _g1[_g];
		++_g;
		params.push(thx_Dynamics.string(param));
	}
	return cons + (params.length == 0 ? "" : "(" + params.join(", ") + ")");
};
thx_Enums.compare = function(a,b) {
	var v = thx_Ints.compare(a[1],b[1]);
	if(v != 0) {
		return v;
	}
	return thx_Arrays.compare(a.slice(2),b.slice(2));
};
thx_Enums.sameConstructor = function(a,b) {
	return a[1] == b[1];
};
thx_Enums.min = function(a,b) {
	if(thx_Enums.compare(a,b) < 0) {
		return a;
	} else {
		return b;
	}
};
thx_Enums.max = function(a,b) {
	if(thx_Enums.compare(a,b) > 0) {
		return a;
	} else {
		return b;
	}
};
var thx_Error = function(message,stack,pos) {
	Error.call(this,message);
	this.message = message;
	if(null == stack) {
		try {
			stack = haxe_CallStack.exceptionStack();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			stack = [];
		}
		if(stack.length == 0) {
			try {
				stack = haxe_CallStack.callStack();
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				stack = [];
			}
		}
	}
	this.stackItems = stack;
	this.pos = pos;
};
thx_Error.__name__ = ["thx","Error"];
thx_Error.fromDynamic = function(err,pos) {
	if(js_Boot.__instanceof(err,thx_Error)) {
		return err;
	}
	return new thx_error_ErrorWrapper("" + Std.string(err),err,null,pos);
};
thx_Error.__super__ = Error;
thx_Error.prototype = $extend(Error.prototype,{
	pos: null
	,stackItems: null
	,toString: function() {
		return this.message + "\nfrom: " + this.getPosition() + "\n\n" + this.stackToString();
	}
	,getPosition: function() {
		return this.pos.className + "." + this.pos.methodName + "() at " + this.pos.lineNumber;
	}
	,stackToString: function() {
		return haxe_CallStack.toString(this.stackItems);
	}
	,__class__: thx_Error
});
var thx_Floats = function() { };
thx_Floats.__name__ = ["thx","Floats"];
thx_Floats.angleDifference = function(a,b,turn) {
	if(turn == null) {
		turn = 360.0;
	}
	var r = (b - a) % turn;
	if(r < 0) {
		r += turn;
	}
	if(r > turn / 2) {
		r -= turn;
	}
	return r;
};
thx_Floats.ceilTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.ceil(f * p) / p;
};
thx_Floats.canParse = function(s) {
	return thx_Floats.pattern_parse.match(s);
};
thx_Floats.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.compare = function(a,b) {
	if(a < b) {
		return -1;
	} else if(a > b) {
		return 1;
	} else {
		return 0;
	}
};
thx_Floats.floorTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.floor(f * p) / p;
};
thx_Floats.interpolate = function(f,a,b) {
	return (b - a) * f + a;
};
thx_Floats.interpolateAngle = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,a + thx_Floats.angleDifference(a,b,turn)),turn);
};
thx_Floats.interpolateAngleWidest = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolateAngle(f,a,b,turn) - turn / 2,turn);
};
thx_Floats.interpolateAngleCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b < a) {
		b += turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.interpolateAngleCCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b > a) {
		b -= turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.nearEquals = function(a,b,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(isFinite(a)) {
		return Math.abs(a - b) <= tollerance;
	}
	if(isNaN(a)) {
		return isNaN(b);
	}
	if(isNaN(b)) {
		return false;
	}
	if(!isFinite(b)) {
		return a > 0 == b > 0;
	}
	return false;
};
thx_Floats.nearEqualAngles = function(a,b,turn,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(turn == null) {
		turn = 360.0;
	}
	return Math.abs(thx_Floats.angleDifference(a,b,turn)) <= tollerance;
};
thx_Floats.nearZero = function(n,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	return Math.abs(n) <= tollerance;
};
thx_Floats.normalize = function(v) {
	if(v < 0) {
		return 0;
	} else if(v > 1) {
		return 1;
	} else {
		return v;
	}
};
thx_Floats.parse = function(s) {
	if(s.substring(0,1) == "+") {
		s = s.substring(1);
	}
	return parseFloat(s);
};
thx_Floats.root = function(base,index) {
	return Math.pow(base,1 / index);
};
thx_Floats.roundTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.round(f * p) / p;
};
thx_Floats.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Floats.toString = function(v) {
	return "" + v;
};
thx_Floats.toFloat = function(s) {
	return thx_Floats.parse(s);
};
thx_Floats.trunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.ftrunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.wrap = function(v,min,max) {
	var range = max - min + 1;
	if(v < min) {
		v += range * ((min - v) / range + 1);
	}
	return min + (v - min) % range;
};
thx_Floats.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_Functions0 = function() { };
thx_Functions0.__name__ = ["thx","Functions0"];
thx_Functions0.after = function(callback,n) {
	return function() {
		if((n -= 1) == 0) {
			callback();
		}
	};
};
thx_Functions0.join = function(fa,fb) {
	return function() {
		fa();
		fb();
	};
};
thx_Functions0.once = function(f) {
	return function() {
		var t = f;
		f = thx_Functions.noop;
		t();
	};
};
thx_Functions0.negate = function(callback) {
	return function() {
		return !callback();
	};
};
thx_Functions0.times = function(n,callback) {
	return function() {
		return thx_Ints.range(n).map(function(_) {
			return callback();
		});
	};
};
thx_Functions0.timesi = function(n,callback) {
	return function() {
		return thx_Ints.range(n).map(function(i) {
			return callback(i);
		});
	};
};
var thx_Functions1 = function() { };
thx_Functions1.__name__ = ["thx","Functions1"];
thx_Functions1.compose = function(fa,fb) {
	return function(v) {
		var tmp = fb(v);
		return fa(tmp);
	};
};
thx_Functions1.map = function(fab,fbc) {
	return function(a) {
		var tmp = fab(a);
		return fbc(tmp);
	};
};
thx_Functions1.contramap = function(fbc,fab) {
	return function(a) {
		var tmp = fab(a);
		return fbc(tmp);
	};
};
thx_Functions1.join = function(fa,fb) {
	return function(v) {
		fa(v);
		fb(v);
	};
};
thx_Functions1.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v) {
			return "" + Std.string(v);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v1) {
		var key = resolver(v1);
		if(__map_reserved[key] != null ? map.existsReserved(key) : map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? map.getReserved(key) : map.h[key];
		}
		var result = callback(v1);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions1.negate = function(callback) {
	return function(v) {
		return !callback(v);
	};
};
thx_Functions1.noop = function(_) {
};
thx_Functions1.times = function(n,callback) {
	return function(value) {
		return thx_Ints.range(n).map(function(_) {
			return callback(value);
		});
	};
};
thx_Functions1.timesi = function(n,callback) {
	return function(value) {
		return thx_Ints.range(n).map(function(i) {
			return callback(value,i);
		});
	};
};
thx_Functions1.swapArguments = function(callback) {
	return function(a2,a1) {
		return callback(a1,a2);
	};
};
var thx_Functions2 = function() { };
thx_Functions2.__name__ = ["thx","Functions2"];
thx_Functions2.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2) {
			return "" + Std.string(v1) + ":" + Std.string(v2);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v11,v21) {
		var key = resolver(v11,v21);
		if(__map_reserved[key] != null ? map.existsReserved(key) : map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? map.getReserved(key) : map.h[key];
		}
		var result = callback(v11,v21);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions2.curry = function(f) {
	return function(a) {
		return function(b) {
			return f(a,b);
		};
	};
};
thx_Functions2.join = function(fa,fb) {
	return function(v1,v2) {
		fa(v1,v2);
		fb(v1,v2);
	};
};
thx_Functions2.negate = function(callback) {
	return function(v1,v2) {
		return !callback(v1,v2);
	};
};
var thx_Functions3 = function() { };
thx_Functions3.__name__ = ["thx","Functions3"];
thx_Functions3.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2,v3) {
			return "" + Std.string(v1) + ":" + Std.string(v2) + ":" + Std.string(v3);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v11,v21,v31) {
		var key = resolver(v11,v21,v31);
		if(__map_reserved[key] != null ? map.existsReserved(key) : map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? map.getReserved(key) : map.h[key];
		}
		var result = callback(v11,v21,v31);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions3.negate = function(callback) {
	return function(v1,v2,v3) {
		return !callback(v1,v2,v3);
	};
};
thx_Functions3.curry = function(f) {
	return function(a,b) {
		return function(c) {
			return f(a,b,c);
		};
	};
};
var thx_Functions4 = function() { };
thx_Functions4.__name__ = ["thx","Functions4"];
thx_Functions4.curry = function(f) {
	return function(a,b,c) {
		return function(d) {
			return f(a,b,c,d);
		};
	};
};
var thx_Functions5 = function() { };
thx_Functions5.__name__ = ["thx","Functions5"];
thx_Functions5.curry = function(f) {
	return function(a,b,c,d) {
		return function(e) {
			return f(a,b,c,d,e);
		};
	};
};
var thx_Functions6 = function() { };
thx_Functions6.__name__ = ["thx","Functions6"];
thx_Functions6.curry = function(f) {
	return function(a,b,c,d,e) {
		return function(f0) {
			return f(a,b,c,d,e,f0);
		};
	};
};
var thx_Functions7 = function() { };
thx_Functions7.__name__ = ["thx","Functions7"];
thx_Functions7.curry = function(f) {
	return function(a,b,c,d,e,f0) {
		return function(g) {
			return f(a,b,c,d,e,f0,g);
		};
	};
};
var thx_Functions8 = function() { };
thx_Functions8.__name__ = ["thx","Functions8"];
thx_Functions8.curry = function(f) {
	return function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f(a,b,c,d,e,f0,g,h);
		};
	};
};
var thx_Functions9 = function() { };
thx_Functions9.__name__ = ["thx","Functions9"];
thx_Functions9.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f(a,b,c,d,e,f0,g,h,i);
		};
	};
};
var thx_Functions10 = function() { };
thx_Functions10.__name__ = ["thx","Functions10"];
thx_Functions10.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f(a,b,c,d,e,f0,g,h,i,j);
		};
	};
};
var thx_Functions11 = function() { };
thx_Functions11.__name__ = ["thx","Functions11"];
thx_Functions11.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
};
var thx_Functions12 = function() { };
thx_Functions12.__name__ = ["thx","Functions12"];
thx_Functions12.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
};
var thx__$Functions_Reader_$Impl_$ = {};
thx__$Functions_Reader_$Impl_$.__name__ = ["thx","_Functions","Reader_Impl_"];
thx__$Functions_Reader_$Impl_$.flatMap = function(this1,f) {
	return function(a) {
		var tmp = this1(a);
		return (f(tmp))(a);
	};
};
var thx_Functions = function() { };
thx_Functions.__name__ = ["thx","Functions"];
thx_Functions.equality = function(a,b) {
	return a == b;
};
thx_Functions.identity = function(value) {
	return value;
};
thx_Functions.noop = function() {
};
thx_Functions.lift = function(t,f) {
	return f(t);
};
var thx_Ints = function() { };
thx_Ints.__name__ = ["thx","Ints"];
thx_Ints.abs = function(v) {
	if(v < 0) {
		return -v;
	} else {
		return v;
	}
};
thx_Ints.canParse = function(s) {
	return thx_Ints.pattern_parse.match(s);
};
thx_Ints.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.compare = function(a,b) {
	return a - b;
};
thx_Ints.gcd = function(m,n) {
	if(m < 0) {
		m = -m;
	} else {
		m = m;
	}
	if(n < 0) {
		n = -n;
	} else {
		n = n;
	}
	if(n == 0) {
		return m;
	}
	return thx_Ints.gcd(n,m % n);
};
thx_Ints.interpolate = function(f,a,b) {
	return Math.round(a + (b - a) * f);
};
thx_Ints.isEven = function(v) {
	return v % 2 == 0;
};
thx_Ints.isOdd = function(v) {
	return v % 2 != 0;
};
thx_Ints.lpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	var neg = false;
	if(v < 0) {
		neg = true;
		v = -v;
	}
	return (neg ? "-" : "") + StringTools.lpad("" + v,pad,len);
};
thx_Ints.lcm = function(m,n) {
	if(m < 0) {
		m = -m;
	} else {
		m = m;
	}
	if(n < 0) {
		n = -n;
	} else {
		n = n;
	}
	if(n == 0) {
		return m;
	}
	return m * (n / thx_Ints.gcd(m,n) | 0);
};
thx_Ints.rpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	return StringTools.rpad("" + v,pad,len);
};
thx_Ints.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.parse = function(s,base) {
	if(null == base) {
		if(s.substring(0,2) == "0x") {
			base = 16;
		} else {
			base = 10;
		}
	}
	var v = parseInt(s,base);
	if(isNaN(v)) {
		return null;
	} else {
		return v;
	}
};
thx_Ints.random = function(min,max) {
	if(min == null) {
		min = 0;
	}
	return Std.random(max - min + 1) + min;
};
thx_Ints.range = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	if(null == stop) {
		stop = start;
		start = 0;
	}
	if((stop - start) / step == Infinity) {
		throw new js__$Boot_HaxeError("infinite range");
	}
	var range = [];
	var i = -1;
	var j;
	if(step < 0) {
		while(true) {
			j = start + step * ++i;
			if(!(j > stop)) {
				break;
			}
			range.push(j);
		}
	} else {
		while(true) {
			j = start + step * ++i;
			if(!(j < stop)) {
				break;
			}
			range.push(j);
		}
	}
	return range;
};
thx_Ints.rangeIter = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	return new thx_RangeIterator(start,stop,step);
};
thx_Ints.toString = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBase = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBool = function(v) {
	return v != 0;
};
thx_Ints.toInt = function(s,base) {
	return thx_Ints.parse(s,base);
};
thx_Ints.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Ints.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_RangeIterator = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	this.current = start;
	this.stop = stop;
	this.step = step;
};
thx_RangeIterator.__name__ = ["thx","RangeIterator"];
thx_RangeIterator.prototype = {
	current: null
	,stop: null
	,step: null
	,hasNext: function() {
		if(!(this.stop == null || this.step >= 0 && this.current < this.stop)) {
			if(this.step < 0) {
				return this.current > this.stop;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,next: function() {
		var result = this.current;
		this.current += this.step;
		return result;
	}
	,__class__: thx_RangeIterator
};
var thx_Iterables = function() { };
thx_Iterables.__name__ = ["thx","Iterables"];
thx_Iterables.all = function(it,predicate) {
	return thx_Iterators.all($iterator(it)(),predicate);
};
thx_Iterables.any = function(it,predicate) {
	return thx_Iterators.any($iterator(it)(),predicate);
};
thx_Iterables.eachPair = function(it,handler) {
	thx_Iterators.eachPair($iterator(it)(),handler);
	return;
};
thx_Iterables.equals = function(a,b,equality) {
	return thx_Iterators.equals($iterator(a)(),$iterator(b)(),equality);
};
thx_Iterables.filter = function(it,predicate) {
	return thx_Iterators.filter($iterator(it)(),predicate);
};
thx_Iterables.find = function(it,predicate) {
	return thx_Iterators.find($iterator(it)(),predicate);
};
thx_Iterables.findOption = function(it,predicate) {
	var value = thx_Iterators.find($iterator(it)(),predicate);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterables.first = function(it) {
	return thx_Iterators.first($iterator(it)());
};
thx_Iterables.get = function(it,index) {
	return thx_Iterators.get($iterator(it)(),index);
};
thx_Iterables.getOption = function(it,index) {
	var value = thx_Iterators.get($iterator(it)(),index);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterables.last = function(it) {
	return thx_Iterators.last($iterator(it)());
};
thx_Iterables.hasElements = function(it) {
	return $iterator(it)().hasNext();
};
thx_Iterables.indexOf = function(it,element) {
	return thx_Iterators.indexOf($iterator(it)(),element);
};
thx_Iterables.isEmpty = function(it) {
	return !$iterator(it)().hasNext();
};
thx_Iterables.isIterable = function(v) {
	var fields;
	var fields1;
	if(Reflect.isObject(v)) {
		var o = v;
		fields1 = null == (o == null ? null : js_Boot.getClass(o));
	} else {
		fields1 = false;
	}
	if(fields1) {
		fields = Reflect.fields(v);
	} else {
		var o1 = v;
		fields = Type.getInstanceFields(o1 == null ? null : js_Boot.getClass(o1));
	}
	if(!Lambda.has(fields,"iterator")) {
		return false;
	}
	return Reflect.isFunction(Reflect.field(v,"iterator"));
};
thx_Iterables.map = function(it,f) {
	return thx_Iterators.map($iterator(it)(),f);
};
thx_Iterables.fmap = function(it,f) {
	return { iterator : function() {
		return thx_Iterators.fmap($iterator(it)(),f);
	}};
};
thx_Iterables.mapi = function(it,f) {
	return thx_Iterators.mapi($iterator(it)(),f);
};
thx_Iterables.fmapi = function(it,f) {
	return { iterator : function() {
		return thx_Iterators.fmapi($iterator(it)(),f);
	}};
};
thx_Iterables.order = function(it,sort) {
	return thx_Iterators.order($iterator(it)(),sort);
};
thx_Iterables.reduce = function(it,callback,initial) {
	return thx_Iterators.reduce($iterator(it)(),callback,initial);
};
thx_Iterables.reducei = function(it,callback,initial) {
	return thx_Iterators.reducei($iterator(it)(),callback,initial);
};
thx_Iterables.toArray = function(it) {
	return thx_Iterators.toArray($iterator(it)());
};
thx_Iterables.minBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var a = $iterator(it)();
	while(a.hasNext()) {
		var a1 = a.next();
		var a2 = [a1];
		if(thx_Options.any(found,(function(a3) {
			return function(a0) {
				var found1 = f(a0);
				var found2 = f(a3[0]);
				return ord(found1,found2) == thx_OrderingImpl.LT;
			};
		})(a2))) {
			found = found;
		} else {
			found = haxe_ds_Option.Some(a2[0]);
		}
	}
	return found;
};
thx_Iterables.maxBy = function(it,f,ord) {
	return thx_Iterables.minBy(it,f,thx__$Ord_Ord_$Impl_$.inverse(ord));
};
thx_Iterables.min = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,ord);
};
thx_Iterables.max = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,thx__$Ord_Ord_$Impl_$.inverse(ord));
};
thx_Iterables.extremaBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var a = $iterator(it)();
	while(a.hasNext()) {
		var a1 = a.next();
		switch(found[1]) {
		case 0:
			var t = found[2];
			if(ord(f(a1),f(t._0)) == thx_OrderingImpl.LT) {
				var this1 = { _0 : a1, _1 : t._1};
				found = haxe_ds_Option.Some(this1);
			} else {
				var t1 = found[2];
				if(ord(f(a1),f(t1._1)) == thx_OrderingImpl.GT) {
					var this2 = { _0 : t1._0, _1 : a1};
					found = haxe_ds_Option.Some(this2);
				} else {
					found = found;
				}
			}
			break;
		case 1:
			var this3 = { _0 : a1, _1 : a1};
			found = haxe_ds_Option.Some(this3);
			break;
		default:
			found = found;
		}
	}
	return found;
};
thx_Iterables.extrema = function(it,ord) {
	return thx_Iterables.extremaBy(it,thx_Functions.identity,ord);
};
thx_Iterables.takeUntil = function(it,fn) {
	return thx_Iterators.takeUntil($iterator(it)(),fn);
};
thx_Iterables.dropLeft = function(itr,n) {
	return { iterator : function() {
		var itr1 = $iterator(itr)();
		var count = n;
		while(count > 0) if(itr1.hasNext()) {
			itr1.next();
		}
		return { next : $bind(itr1,itr1.next), hasNext : $bind(itr1,itr1.hasNext)};
	}};
};
thx_Iterables.dropUntil = function(it,fn) {
	return thx_Iterators.dropUntil($iterator(it)(),fn);
};
thx_Iterables.unionBy = function(a,b,eq) {
	var res = [];
	var e = $iterator(a)();
	while(e.hasNext()) {
		var e1 = e.next();
		res.push(e1);
	}
	var e2 = $iterator(b)();
	while(e2.hasNext()) {
		var e3 = e2.next();
		var e4 = [e3];
		if(!thx_Iterables.any(res,(function(e5) {
			return function(x) {
				return eq(x,e5[0]);
			};
		})(e4))) {
			res.push(e4[0]);
		}
	}
	return res;
};
thx_Iterables.differenceBy = function(a,b,eq) {
	var res = [];
	var e = $iterator(a)();
	while(e.hasNext()) {
		var e1 = e.next();
		var e2 = [e1];
		if(!thx_Iterables.any(b,(function(e3) {
			return function(x) {
				return eq(x,e3[0]);
			};
		})(e2))) {
			res.push(e2[0]);
		}
	}
	return res;
};
thx_Iterables.unzip = function(it) {
	return thx_Iterators.unzip($iterator(it)());
};
thx_Iterables.unzip3 = function(it) {
	return thx_Iterators.unzip3($iterator(it)());
};
thx_Iterables.unzip4 = function(it) {
	return thx_Iterators.unzip4($iterator(it)());
};
thx_Iterables.unzip5 = function(it) {
	return thx_Iterators.unzip5($iterator(it)());
};
thx_Iterables.zip = function(it1,it2) {
	return thx_Iterators.zip($iterator(it1)(),$iterator(it2)());
};
thx_Iterables.zip3 = function(it1,it2,it3) {
	return thx_Iterators.zip3($iterator(it1)(),$iterator(it2)(),$iterator(it3)());
};
thx_Iterables.zip4 = function(it1,it2,it3,it4) {
	return thx_Iterators.zip4($iterator(it1)(),$iterator(it2)(),$iterator(it3)(),$iterator(it4)());
};
thx_Iterables.zip5 = function(it1,it2,it3,it4,it5) {
	return thx_Iterators.zip5($iterator(it1)(),$iterator(it2)(),$iterator(it3)(),$iterator(it4)(),$iterator(it5)());
};
var thx_Iterators = function() { };
thx_Iterators.__name__ = ["thx","Iterators"];
thx_Iterators.all = function(it,predicate) {
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		if(!predicate(element1)) {
			return false;
		}
	}
	return true;
};
thx_Iterators.any = function(it,predicate) {
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		if(predicate(element1)) {
			return true;
		}
	}
	return false;
};
thx_Iterators.equals = function(a,b,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var ae;
	var be;
	var an;
	var bn;
	while(true) {
		an = a.hasNext();
		bn = b.hasNext();
		if(!an && !bn) {
			return true;
		}
		if(!an || !bn) {
			return false;
		}
		if(!equality(a.next(),b.next())) {
			return false;
		}
	}
};
thx_Iterators.get = function(it,index) {
	var pos = 0;
	var i = it;
	while(i.hasNext()) {
		var i1 = i.next();
		if(pos++ == index) {
			return i1;
		}
	}
	return null;
};
thx_Iterators.getOption = function(it,index) {
	var value = thx_Iterators.get(it,index);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterators.eachPair = function(it,handler) {
	thx_Arrays.eachPair(thx_Iterators.toArray(it),handler);
};
thx_Iterators.filter = function(it,predicate) {
	return thx_Iterators.reduce(it,function(acc,element) {
		if(predicate(element)) {
			acc.push(element);
		}
		return acc;
	},[]);
};
thx_Iterators.find = function(it,f) {
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		if(f(element1)) {
			return element1;
		}
	}
	return null;
};
thx_Iterators.findOption = function(it,f) {
	var value = thx_Iterators.find(it,f);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterators.first = function(it) {
	if(it.hasNext()) {
		return it.next();
	} else {
		return null;
	}
};
thx_Iterators.hasElements = function(it) {
	return it.hasNext();
};
thx_Iterators.indexOf = function(it,element) {
	var pos = 0;
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		if(element == v1) {
			return pos;
		}
		++pos;
	}
	return -1;
};
thx_Iterators.isEmpty = function(it) {
	return !it.hasNext();
};
thx_Iterators.isIterator = function(v) {
	var fields;
	var fields1;
	if(Reflect.isObject(v)) {
		var o = v;
		fields1 = null == (o == null ? null : js_Boot.getClass(o));
	} else {
		fields1 = false;
	}
	if(fields1) {
		fields = Reflect.fields(v);
	} else {
		var o1 = v;
		fields = Type.getInstanceFields(o1 == null ? null : js_Boot.getClass(o1));
	}
	if(!Lambda.has(fields,"next") || !Lambda.has(fields,"hasNext")) {
		return false;
	}
	if(Reflect.isFunction(Reflect.field(v,"next"))) {
		return Reflect.isFunction(Reflect.field(v,"hasNext"));
	} else {
		return false;
	}
};
thx_Iterators.last = function(it) {
	var buf = null;
	while(it.hasNext()) buf = it.next();
	return buf;
};
thx_Iterators.forEach = function(it,proc) {
	while(it.hasNext()) proc(it.next());
};
thx_Iterators.map = function(it,f) {
	var acc = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		acc.push(f(v1));
	}
	return acc;
};
thx_Iterators.fmap = function(it,f) {
	return new thx_MapIterator(it,f);
};
thx_Iterators.mapi = function(it,f) {
	var acc = [];
	var i = 0;
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		acc.push(f(v1,i++));
	}
	return acc;
};
thx_Iterators.fmapi = function(it,f) {
	return new thx_MapIIterator(it,f);
};
thx_Iterators.order = function(it,sort) {
	var n = thx_Iterators.toArray(it);
	n.sort(sort);
	return n;
};
thx_Iterators.reduce = function(it,callback,initial) {
	var result = initial;
	while(it.hasNext()) result = callback(result,it.next());
	return result;
};
thx_Iterators.reducei = function(it,callback,initial) {
	thx_Iterators.mapi(it,function(v,i) {
		initial = callback(initial,v,i);
	});
	return initial;
};
thx_Iterators.foldLeft = function(it,zero,f) {
	return thx_Iterators.reduce(it,f,zero);
};
thx_Iterators.foldMap = function(it,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	};
	return thx_Iterators.foldLeft(thx_Iterators.fmap(it,f),thx__$Monoid_Monoid_$Impl_$.get_zero(m),tmp);
};
thx_Iterators.takeUntil = function(it,f) {
	var out = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			out.push(v1);
		} else {
			break;
		}
	}
	return out;
};
thx_Iterators.dropUntil = function(it,f) {
	var done = false;
	var out = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		if(!done) {
			if(!f(v1)) {
				done = true;
				out.push(v1);
			}
		} else {
			out.push(v1);
		}
	}
	return out;
};
thx_Iterators.toArray = function(it) {
	var elements = [];
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		elements.push(element1);
	}
	return elements;
};
thx_Iterators.unzip = function(it) {
	var a1 = [];
	var a2 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
	});
	var this1 = { _0 : a1, _1 : a2};
	return this1;
};
thx_Iterators.unzip3 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3};
	return this1;
};
thx_Iterators.unzip4 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
	return this1;
};
thx_Iterators.unzip5 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
	return this1;
};
thx_Iterators.zip = function(it1,it2) {
	var array = [];
	while(it1.hasNext() && it2.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip3 = function(it1,it2,it3) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip4 = function(it1,it2,it3,it4) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip5 = function(it1,it2,it3,it4,it5) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext() && it5.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next(), _4 : it5.next()};
		array.push(this1);
	}
	return array;
};
var thx_MapIterator = function(base,f) {
	this.base = base;
	this.f = f;
};
thx_MapIterator.__name__ = ["thx","MapIterator"];
thx_MapIterator.prototype = {
	base: null
	,f: null
	,next: function() {
		return this.f(this.base.next());
	}
	,hasNext: function() {
		return this.base.hasNext();
	}
	,__class__: thx_MapIterator
};
var thx_MapIIterator = function(base,f) {
	this.i = 0;
	this.base = base;
	this.f = f;
};
thx_MapIIterator.__name__ = ["thx","MapIIterator"];
thx_MapIIterator.prototype = {
	base: null
	,f: null
	,i: null
	,next: function() {
		var result = this.f(this.base.next(),this.i);
		this.i++;
		return result;
	}
	,hasNext: function() {
		return this.base.hasNext();
	}
	,__class__: thx_MapIIterator
};
var thx_Maps = function() { };
thx_Maps.__name__ = ["thx","Maps"];
thx_Maps.copyTo = function(src,dst) {
	var key = src.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		dst.set(key1,src.get(key1));
	}
	return dst;
};
thx_Maps.tuples = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		var this1 = { _0 : key, _1 : map.get(key)};
		return this1;
	});
};
thx_Maps.mapValues = function(map,f,acc) {
	return thx_Maps.reduce(map,function(m,t) {
		m.set(t._0,f(t._1));
		return m;
	},acc);
};
thx_Maps.reduce = function(map,f,acc) {
	return thx_Arrays.reduce(thx_Maps.tuples(map),f,acc);
};
thx_Maps.values = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		return map.get(key);
	});
};
thx_Maps.foldLeftWithKeys = function(map,f,acc) {
	return thx_Iterators.reduce(map.keys(),function(acc1,k) {
		return f(acc1,k,map.get(k));
	},acc);
};
thx_Maps.getOption = function(map,key) {
	var value = map.get(key);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Maps.toObject = function(map) {
	return thx_Arrays.reduce(thx_Maps.tuples(map),function(o,t) {
		o[t._0] = t._1;
		return o;
	},{ });
};
thx_Maps.getAlt = function(map,key,alt) {
	var v = map.get(key);
	if(null == v) {
		return alt;
	} else {
		return v;
	}
};
thx_Maps.isMap = function(v) {
	return js_Boot.__instanceof(v,haxe_IMap);
};
thx_Maps.string = function(m) {
	return "[" + thx_Maps.tuples(m).map(function(t) {
		return thx_Dynamics.string(t._0) + " => " + thx_Dynamics.string(t._1);
	}).join(", ") + "]";
};
thx_Maps.merge = function(dest,sources) {
	return thx_Arrays.reduce(sources,function(result,source) {
		return thx_Iterators.reduce(source.keys(),function(result1,key) {
			result1.set(key,source.get(key));
			return result1;
		},result);
	},dest);
};
var thx__$Monoid_Monoid_$Impl_$ = {};
thx__$Monoid_Monoid_$Impl_$.__name__ = ["thx","_Monoid","Monoid_Impl_"];
thx__$Monoid_Monoid_$Impl_$.get_semigroup = function(this1) {
	return this1.append;
};
thx__$Monoid_Monoid_$Impl_$.get_zero = function(this1) {
	return this1.zero;
};
thx__$Monoid_Monoid_$Impl_$.append = function(this1,a0,a1) {
	return this1.append(a0,a1);
};
var thx__$Nel_Nel_$Impl_$ = {};
thx__$Nel_Nel_$Impl_$.__name__ = ["thx","_Nel","Nel_Impl_"];
thx__$Nel_Nel_$Impl_$.nel = function(hd,tl) {
	var _g = thx__$Nel_Nel_$Impl_$.fromArray(tl);
	switch(_g[1]) {
	case 0:
		var nel = _g[2];
		return thx__$Nel_Nel_$Impl_$.cons(hd,nel);
	case 1:
		return thx__$Nel_Nel_$Impl_$.pure(hd);
	}
};
thx__$Nel_Nel_$Impl_$.pure = function(a) {
	return thx_NonEmptyList.Single(a);
};
thx__$Nel_Nel_$Impl_$.cons = function(a,nl) {
	return thx_NonEmptyList.ConsNel(a,nl);
};
thx__$Nel_Nel_$Impl_$.fromArray = function(arr) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var res = thx_NonEmptyList.Single(arr[arr.length - 1]);
		var i = thx_Ints.rangeIter(arr.length - 2,-1,-1);
		while(i.hasNext()) {
			var i1 = i.next();
			res = thx_NonEmptyList.ConsNel(arr[i1],res);
		}
		return haxe_ds_Option.Some(res);
	}
};
thx__$Nel_Nel_$Impl_$.map = function(this1,f) {
	var fb = f;
	return thx__$Nel_Nel_$Impl_$.flatMap(this1,function(v) {
		return thx__$Nel_Nel_$Impl_$.pure(fb(v));
	});
};
thx__$Nel_Nel_$Impl_$.flatMap = function(this1,f) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return f(x);
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return thx__$Nel_Nel_$Impl_$.append(f(x1),thx__$Nel_Nel_$Impl_$.flatMap(xs,f));
	}
};
thx__$Nel_Nel_$Impl_$.fold = function(this1,f) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return x;
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return f(x1,thx__$Nel_Nel_$Impl_$.fold(xs,f));
	}
};
thx__$Nel_Nel_$Impl_$.append = function(this1,nel) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return thx_NonEmptyList.ConsNel(x,nel);
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return thx_NonEmptyList.ConsNel(x1,thx__$Nel_Nel_$Impl_$.append(xs,nel));
	}
};
thx__$Nel_Nel_$Impl_$.head = function(this1) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return x;
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return x1;
	}
};
thx__$Nel_Nel_$Impl_$.tail = function(this1) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return [];
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return thx__$Nel_Nel_$Impl_$.toArray(xs);
	}
};
thx__$Nel_Nel_$Impl_$.init = function(this1) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return [];
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return [x1].concat(thx__$Nel_Nel_$Impl_$.init(xs));
	}
};
thx__$Nel_Nel_$Impl_$.last = function(this1) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return x;
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return thx__$Nel_Nel_$Impl_$.last(xs);
	}
};
thx__$Nel_Nel_$Impl_$.push = function(this1,a) {
	return thx__$Nel_Nel_$Impl_$.append(this1,thx_NonEmptyList.Single(a));
};
thx__$Nel_Nel_$Impl_$.pop = function(this1) {
	var this2 = { _0 : thx__$Nel_Nel_$Impl_$.last(this1), _1 : thx__$Nel_Nel_$Impl_$.init(this1)};
	return this2;
};
thx__$Nel_Nel_$Impl_$.unshift = function(this1,a) {
	return thx_NonEmptyList.ConsNel(a,this1);
};
thx__$Nel_Nel_$Impl_$.shift = function(this1) {
	var this2 = { _0 : thx__$Nel_Nel_$Impl_$.head(this1), _1 : thx__$Nel_Nel_$Impl_$.tail(this1)};
	return this2;
};
thx__$Nel_Nel_$Impl_$.toArray = function(this1) {
	var go = null;
	go = function(acc,xs) {
		switch(xs[1]) {
		case 0:
			var x = xs[2];
			return thx_Arrays.append(acc,x);
		case 1:
			var xs1 = xs[3];
			var x1 = xs[2];
			var go1 = thx_Arrays.append(acc,x1);
			return go(go1,xs1);
		}
	};
	var go2 = go;
	return go2([],this1);
};
thx__$Nel_Nel_$Impl_$.semigroup = function() {
	return function(nl,nr) {
		return thx__$Nel_Nel_$Impl_$.append(nl,nr);
	};
};
var thx_NonEmptyList = { __ename__ : ["thx","NonEmptyList"], __constructs__ : ["Single","ConsNel"] };
thx_NonEmptyList.Single = function(x) { var $x = ["Single",0,x]; $x.__enum__ = thx_NonEmptyList; return $x; };
thx_NonEmptyList.ConsNel = function(x,xs) { var $x = ["ConsNel",1,x,xs]; $x.__enum__ = thx_NonEmptyList; return $x; };
var thx_Nil = { __ename__ : ["thx","Nil"], __constructs__ : ["nil"] };
thx_Nil.nil = ["nil",0];
thx_Nil.nil.__enum__ = thx_Nil;
var thx_Nulls = function() { };
thx_Nulls.__name__ = ["thx","Nulls"];
var thx_Objects = function() { };
thx_Objects.__name__ = ["thx","Objects"];
thx_Objects.compare = function(a,b) {
	var v;
	var fields = Reflect.fields(a);
	v = thx_Arrays.compare(fields,Reflect.fields(b));
	if(v != 0) {
		return v;
	}
	var _g = 0;
	while(_g < fields.length) {
		var field = fields[_g];
		++_g;
		v = thx_Dynamics.compare(Reflect.field(a,field),Reflect.field(b,field));
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Objects.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_Objects.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_Objects.fields = function(o) {
	return Reflect.fields(o);
};
thx_Objects.deflate = function(o,flattenArrays) {
	if(flattenArrays == null) {
		flattenArrays = true;
	}
	var f = null;
	f = function(v) {
		if((v instanceof Array) && v.__enum__ == null) {
			if(flattenArrays) {
				var a = v;
				return thx_Either.Right(thx_Arrays.reducei(a,function(map,value,i) {
					var _g = f(value);
					switch(_g[1]) {
					case 0:
						var v1 = _g[2];
						var key = "" + i;
						if(__map_reserved[key] != null) {
							map.setReserved(key,v1);
						} else {
							map.h[key] = v1;
						}
						break;
					case 1:
						var m = _g[2];
						var k = m.keys();
						while(k.hasNext()) {
							var k1 = k.next();
							var key1 = "" + i + "." + k1;
							var value1 = __map_reserved[k1] != null ? m.getReserved(k1) : m.h[k1];
							if(__map_reserved[key1] != null) {
								map.setReserved(key1,value1);
							} else {
								map.h[key1] = value1;
							}
						}
						break;
					}
					return map;
				},new haxe_ds_StringMap()));
			} else {
				return thx_Either.Left(v);
			}
		} else {
			var f1;
			if(Reflect.isObject(v)) {
				var o1 = v;
				f1 = null == (o1 == null ? null : js_Boot.getClass(o1));
			} else {
				f1 = false;
			}
			if(f1) {
				return thx_Either.Right(thx_Arrays.reduce(Reflect.fields(v),function(map1,key2) {
					var _g1 = Reflect.field(v,key2);
					var _g2 = f(_g1);
					switch(_g2[1]) {
					case 0:
						var v2 = _g2[2];
						var key3 = "" + key2;
						if(__map_reserved[key3] != null) {
							map1.setReserved(key3,v2);
						} else {
							map1.h[key3] = v2;
						}
						break;
					case 1:
						var m1 = _g2[2];
						var k2 = m1.keys();
						while(k2.hasNext()) {
							var k3 = k2.next();
							var key4 = "" + key2 + "." + k3;
							var value2 = __map_reserved[k3] != null ? m1.getReserved(k3) : m1.h[k3];
							if(__map_reserved[key4] != null) {
								map1.setReserved(key4,value2);
							} else {
								map1.h[key4] = value2;
							}
						}
						break;
					}
					return map1;
				},new haxe_ds_StringMap()));
			} else {
				return thx_Either.Left(v);
			}
		}
	};
	var f2 = f;
	var _g3 = f2(o);
	switch(_g3[1]) {
	case 0:
		var v3 = _g3[2];
		return v3;
	case 1:
		var m2 = _g3[2];
		return thx_Maps.toObject(m2);
	}
};
thx_Objects.inflate = function(o) {
	return thx_Arrays.reduce(Reflect.fields(o),function(acc,field) {
		return thx_Objects.setPath(acc,field,Reflect.field(o,field));
	},{ });
};
thx_Objects.combine = function(first,second) {
	return thx_Objects.shallowCombine(first,second);
};
thx_Objects.shallowCombine = function(first,second) {
	var to = { };
	var _g = 0;
	var _g1 = Reflect.fields(first);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		to[field] = Reflect.field(first,field);
	}
	var _g2 = 0;
	var _g11 = Reflect.fields(second);
	while(_g2 < _g11.length) {
		var field1 = _g11[_g2];
		++_g2;
		to[field1] = Reflect.field(second,field1);
	}
	return to;
};
thx_Objects.deepCombine = function(first,second) {
	var deflatedSecond = thx_Objects.deflate(second);
	var _g = 0;
	var _g1 = Reflect.fields(deflatedSecond);
	while(_g < _g1.length) {
		var keyPath = _g1[_g];
		++_g;
		thx_Objects.setPath(first,keyPath,Reflect.field(deflatedSecond,keyPath));
	}
	return first;
};
thx_Objects.assign = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field1 = _g1[_g];
		++_g;
		var newv1 = Reflect.field(from,field1);
		if(Object.prototype.hasOwnProperty.call(to,field1)) {
			to[field1] = replacef(field1,Reflect.field(to,field1),newv1);
		} else {
			to[field1] = newv1;
		}
	}
	return to;
};
thx_Objects.copyTo = function(src,dst,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = 0;
	var _g1 = Reflect.fields(src);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		var sv = thx_Dynamics.clone(Reflect.field(src,field),cloneInstances);
		var dv = Reflect.field(dst,field);
		var tmp;
		var tmp1;
		if(Reflect.isObject(sv)) {
			var o = sv;
			tmp1 = null == (o == null ? null : js_Boot.getClass(o));
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			if(Reflect.isObject(dv)) {
				var o1 = dv;
				tmp = null == (o1 == null ? null : js_Boot.getClass(o1));
			} else {
				tmp = false;
			}
		} else {
			tmp = false;
		}
		if(tmp) {
			thx_Objects.copyTo(sv,dv);
		} else {
			dst[field] = sv;
		}
	}
	return dst;
};
thx_Objects.clone = function(src,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	return thx_Dynamics.clone(src,cloneInstances);
};
thx_Objects.toMap = function(o) {
	return thx_Arrays.reduce(thx_Objects.tuples(o),function(map,t) {
		var key = t._0;
		var value = t._1;
		if(__map_reserved[key] != null) {
			map.setReserved(key,value);
		} else {
			map.h[key] = value;
		}
		return map;
	},new haxe_ds_StringMap());
};
thx_Objects.size = function(o) {
	return Reflect.fields(o).length;
};
thx_Objects.string = function(o) {
	return "{" + Reflect.fields(o).map(function(key) {
		var v = Reflect.field(o,key);
		var s = typeof(v) == "string" ? thx_Strings.quote(v) : thx_Dynamics.string(v);
		return "" + key + " : " + s;
	}).join(", ") + "}";
};
thx_Objects.stringImpl = function(o,cache) {
};
thx_Objects.values = function(o) {
	return Reflect.fields(o).map(function(key) {
		return Reflect.field(o,key);
	});
};
thx_Objects.tuples = function(o) {
	return Reflect.fields(o).map(function(key) {
		var this1 = { _0 : key, _1 : Reflect.field(o,key)};
		return this1;
	});
};
thx_Objects.hasPath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = (value instanceof Array) ? value : null;
			if(null == arr || arr.length <= index) {
				return false;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return false;
		}
	}
	return true;
};
thx_Objects.hasPathValue = function(o,path) {
	return thx_Objects.getPath(o,path) != null;
};
thx_Objects.getPath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(current == null) {
			return null;
		} else if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = (value instanceof Array) ? value : null;
			if(null == arr) {
				return null;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return null;
		}
	}
	return current;
};
thx_Objects.getPathOption = function(o,path) {
	var value = thx_Objects.getPath(o,path);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Objects.parsePath = function(o,path,parse) {
	var this1 = thx_Options.toSuccessNel(thx_Objects.getPathOption(o,path),"Object does not contain path " + path);
	switch(this1[1]) {
	case 0:
		var a = this1[2];
		return thx_Either.Left(a);
	case 1:
		var b = this1[2];
		return parse(b);
	}
};
thx_Objects.getPathOr = function(o,path,alt) {
	return thx_Options.getOrElse(thx_Objects.getPathOption(o,path),alt);
};
thx_Objects.setPath = function(o,path,val) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g1 = 0;
	var _g = paths.length - 1;
	while(_g1 < _g) {
		var i = _g1++;
		var currentPath = paths[i];
		var nextPath = paths[i + 1];
		if(thx_Strings.DIGITS.match(currentPath) || currentPath == "*") {
			var index = currentPath == "*" ? current.length : Std.parseInt(currentPath);
			if(current[index] == null) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[index] = [];
				} else {
					current[index] = { };
				}
			}
			current = current[index];
		} else {
			if(!Object.prototype.hasOwnProperty.call(current,currentPath)) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[currentPath] = [];
				} else {
					current[currentPath] = { };
				}
			}
			current = Reflect.field(current,currentPath);
		}
	}
	var p = paths[paths.length - 1];
	if(thx_Strings.DIGITS.match(p)) {
		var index1 = Std.parseInt(p);
		current[index1] = val;
	} else if(p == "*") {
		current.push(val);
	} else {
		current[p] = val;
	}
	return o;
};
thx_Objects.removePath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var target = paths.pop();
	try {
		var sub = thx_Arrays.reduce(paths,function(existing,nextPath) {
			if(nextPath == "*") {
				return existing.pop();
			} else if(thx_Strings.DIGITS.match(nextPath)) {
				var current = existing;
				var index = Std.parseInt(nextPath);
				return current[index];
			} else {
				return Reflect.field(existing,nextPath);
			}
		},o);
		if(null != sub) {
			Reflect.deleteField(sub,target);
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
	}
	return o;
};
thx_Objects.normalizePath = function(path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	return path.replace(_this_r,".$1");
};
var thx_Options = function() { };
thx_Options.__name__ = ["thx","Options"];
thx_Options.ofValue = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.maybe = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.equals = function(a,b,eq) {
	switch(a[1]) {
	case 0:
		if(b[1] == 0) {
			var a1 = a[2];
			var b1 = b[2];
			if(null == eq) {
				eq = function(a2,b2) {
					return a2 == b2;
				};
			}
			return eq(a1,b1);
		} else {
			return false;
		}
		break;
	case 1:
		if(b[1] == 1) {
			return true;
		} else {
			return false;
		}
		break;
	}
};
thx_Options.equalsValue = function(a,b,eq) {
	return thx_Options.equals(a,null == b ? haxe_ds_Option.None : haxe_ds_Option.Some(b),eq);
};
thx_Options.map = function(option,callback) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return haxe_ds_Option.Some(callback(v));
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.ap = function(option,fopt) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return thx_Options.map(fopt,function(f) {
			return f(v);
		});
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.flatMap = function(option,callback) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return callback(v);
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.join = function(option) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return v;
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.cata = function(option,ifNone,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(v);
	case 1:
		return ifNone;
	}
};
thx_Options.cataf = function(option,ifNone,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(v);
	case 1:
		return ifNone();
	}
};
thx_Options.foldLeft = function(option,b,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(b,v);
	case 1:
		return b;
	}
};
thx_Options.foldLeftf = function(option,b,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(b(),v);
	case 1:
		return b();
	}
};
thx_Options.foldMap = function(option,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	};
	return thx_Options.foldLeft(thx_Options.map(option,f),thx__$Monoid_Monoid_$Impl_$.get_zero(m),tmp);
};
thx_Options.filter = function(option,f) {
	if(option[1] == 0) {
		var v = option[2];
		if(f(v)) {
			return option;
		} else {
			return haxe_ds_Option.None;
		}
	} else {
		return haxe_ds_Option.None;
	}
};
thx_Options.toArray = function(option) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return [v];
	case 1:
		return [];
	}
};
thx_Options.toBool = function(option) {
	switch(option[1]) {
	case 0:
		return true;
	case 1:
		return false;
	}
};
thx_Options.isNone = function(option) {
	return !thx_Options.toBool(option);
};
thx_Options.toOption = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.get = function(option) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return v;
	case 1:
		return null;
	}
};
thx_Options.getOrElse = function(option,alt) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return v;
	case 1:
		return alt;
	}
};
thx_Options.getOrThrow = function(option,err,posInfo) {
	if(null == err) {
		err = new thx_Error("Could not extract value from option",null,posInfo);
	}
	switch(option[1]) {
	case 0:
		var v = option[2];
		return v;
	case 1:
		throw err;
		break;
	}
};
thx_Options.getOrFail = function(option,msg,posInfo) {
	return thx_Options.getOrThrow(option,new thx_Error(msg,null,posInfo),{ fileName : "Options.hx", lineNumber : 199, className : "thx.Options", methodName : "getOrFail"});
};
thx_Options.orElse = function(option,alt) {
	switch(option[1]) {
	case 0:
		return option;
	case 1:
		return alt;
	}
};
thx_Options.all = function(option,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(v);
	case 1:
		return true;
	}
};
thx_Options.any = function(option,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(v);
	case 1:
		return false;
	}
};
thx_Options.traverseValidation = function(option,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return thx__$Validation_Validation_$Impl_$.map(f(v),function(v1) {
			return haxe_ds_Option.Some(v1);
		});
	case 1:
		return thx_Either.Right(haxe_ds_Option.None);
	}
};
thx_Options.toSuccess = function(option,error) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return thx_Either.Right(v);
	case 1:
		return thx_Either.Left(error);
	}
};
thx_Options.toSuccessNel = function(option,error) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return thx_Either.Right(v);
	case 1:
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error));
	}
};
thx_Options.toFailure = function(error,value) {
	switch(error[1]) {
	case 0:
		var e = error[2];
		return thx_Either.Left(e);
	case 1:
		return thx_Either.Right(value);
	}
};
thx_Options.toFailureNel = function(error,value) {
	switch(error[1]) {
	case 0:
		var e = error[2];
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
	case 1:
		return thx_Either.Right(value);
	}
};
thx_Options.toRight = function(opt,left) {
	switch(opt[1]) {
	case 0:
		var r = opt[2];
		return thx_Either.Right(r);
	case 1:
		return thx_Either.Left(left);
	}
};
thx_Options.toLeft = function(opt,right) {
	switch(opt[1]) {
	case 0:
		var l = opt[2];
		return thx_Either.Left(l);
	case 1:
		return thx_Either.Right(right);
	}
};
thx_Options.each = function(o,f) {
	switch(o[1]) {
	case 0:
		var v = o[2];
		f(v);
		return o;
	case 1:
		return o;
	}
};
thx_Options.ap2 = function(f,v1,v2) {
	return thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(f)));
};
thx_Options.ap3 = function(f,v1,v2,v3) {
	var f1 = f;
	return thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	}))));
};
thx_Options.ap4 = function(f,v1,v2,v3,v4) {
	var f1 = f;
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f2(a1,b1,c1);
		};
	})))));
};
thx_Options.ap5 = function(f,v1,v2,v3,v4,v5) {
	var f1 = f;
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f3 = function(a1,b1,c1) {
		return function(d1) {
			return f2(a1,b1,c1,d1);
		};
	};
	return thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f3(a2,b2,c2);
		};
	}))))));
};
thx_Options.ap6 = function(f,v1,v2,v3,v4,v5,v6) {
	var f1 = f;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f2(a1,b1,c1,d1,e1);
		};
	};
	var f4 = function(a2,b2,c2) {
		return function(d2) {
			return f3(a2,b2,c2,d2);
		};
	};
	return thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f4(a3,b3,c3);
		};
	})))))));
};
thx_Options.ap7 = function(f,v1,v2,v3,v4,v5,v6,v7) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1) {
		return function(f01) {
			return f2(a1,b1,c1,d1,e1,f01);
		};
	};
	var f4 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f3(a2,b2,c2,d2,e2);
		};
	};
	var f5 = function(a3,b3,c3) {
		return function(d3) {
			return f4(a3,b3,c3,d3);
		};
	};
	return thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f5(a4,b4,c4);
		};
	}))))))));
};
thx_Options.ap8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01) {
		return function(g1) {
			return f2(a1,b1,c1,d1,e1,f01,g1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2) {
		return function(f02) {
			return f3(a2,b2,c2,d2,e2,f02);
		};
	};
	var f5 = function(a3,b3,c3,d3) {
		return function(e3) {
			return f4(a3,b3,c3,d3,e3);
		};
	};
	var f6 = function(a4,b4,c4) {
		return function(d4) {
			return f5(a4,b4,c4,d4);
		};
	};
	return thx_Options.ap(v8,thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a5,b5) {
		return function(c5) {
			return f6(a5,b5,c5);
		};
	})))))))));
};
thx_Options.combine = function(a,b) {
	return thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(thx__$Tuple_Tuple2_$Impl_$.of)));
};
thx_Options.combine2 = function(a,b) {
	return thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(thx__$Tuple_Tuple2_$Impl_$.of)));
};
thx_Options.combine3 = function(a,b,c) {
	var f = thx__$Tuple_Tuple3_$Impl_$.of;
	return thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f(a1,b1,c1);
		};
	}))));
};
thx_Options.combine4 = function(a,b,c,d) {
	var f = thx__$Tuple_Tuple4_$Impl_$.of;
	var f1 = function(a1,b1,c1) {
		return function(d1) {
			return f(a1,b1,c1,d1);
		};
	};
	return thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f1(a2,b2,c2);
		};
	})))));
};
thx_Options.combine5 = function(a,b,c,d,e) {
	var f = thx__$Tuple_Tuple5_$Impl_$.of;
	var f1 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f(a1,b1,c1,d1,e1);
		};
	};
	var f2 = function(a2,b2,c2) {
		return function(d2) {
			return f1(a2,b2,c2,d2);
		};
	};
	return thx_Options.ap(e,thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f2(a3,b3,c3);
		};
	}))))));
};
thx_Options.combine6 = function(a,b,c,d,e,f) {
	var f1 = thx__$Tuple_Tuple6_$Impl_$.of;
	var f2 = function(a1,b1,c1,d1,e1) {
		return function(f0) {
			return f1(a1,b1,c1,d1,e1,f0);
		};
	};
	var f3 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f2(a2,b2,c2,d2,e2);
		};
	};
	var f4 = function(a3,b3,c3) {
		return function(d3) {
			return f3(a3,b3,c3,d3);
		};
	};
	return thx_Options.ap(f,thx_Options.ap(e,thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f4(a4,b4,c4);
		};
	})))))));
};
thx_Options.spread2 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1);
	});
};
thx_Options.spread = function(v,f) {
	var f1 = f;
	return thx_Options.map(v,function(t) {
		return f1(t._0,t._1);
	});
};
thx_Options.spread3 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2);
	});
};
thx_Options.spread4 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3);
	});
};
thx_Options.spread5 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3,t._4);
	});
};
thx_Options.spread6 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
var thx_Orderings = function() { };
thx_Orderings.__name__ = ["thx","Orderings"];
thx_Orderings.negate = function(o) {
	switch(o[1]) {
	case 0:
		return thx_OrderingImpl.GT;
	case 1:
		return thx_OrderingImpl.LT;
	case 2:
		return thx_OrderingImpl.EQ;
	}
};
var thx__$ReadonlyArray_ReadonlyArray_$Impl_$ = {};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.__name__ = ["thx","_ReadonlyArray","ReadonlyArray_Impl_"];
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.empty = function() {
	return [];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(eq(el,this1[i])) {
			return i;
		}
	}
	return -1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.lastIndexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var len = this1.length;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i = _g1++;
		if(eq(el,this1[len - i - 1])) {
			return i;
		}
	}
	return -1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.get_length = function(this1) {
	return this1.length;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.get = function(this1,i) {
	return this1[i];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.head = function(this1) {
	return this1[0];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.tail = function(this1) {
	return this1.slice(1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reduce = function(this1,arr,f,initial) {
	var _g = 0;
	while(_g < arr.length) {
		var v = arr[_g];
		++_g;
		initial = f(initial,v);
	}
	return initial;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reducei = function(array,f,initial) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		initial = f(initial,array[i],i);
	}
	return initial;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reverse = function(this1) {
	var arr = this1.slice();
	arr.reverse();
	return arr;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.toArray = function(this1) {
	return this1.slice();
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.unsafe = function(this1) {
	return this1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.concat = function(this1,that) {
	return this1.concat(that);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertAfter = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	if(pos < 0) {
		pos = this1.length - 1;
	}
	var pos1 = pos + 1;
	return this1.slice(0,pos1).concat([el]).concat(this1.slice(pos1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertBefore = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.replace = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	if(pos < 0) {
		throw new thx_Error("unable to find reference element",null,{ fileName : "ReadonlyArray.hx", lineNumber : 94, className : "thx._ReadonlyArray.ReadonlyArray_Impl_", methodName : "replace"});
	}
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.replaceAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.remove = function(this1,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,el,eq);
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.removeAt = function(this1,pos) {
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.prepend = function(this1,el) {
	return [el].concat(this1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.append = function(this1,el) {
	return this1.concat([el]);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.unshift = function(this1,el) {
	return [el].concat(this1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.shift = function(this1) {
	if(this1.length == 0) {
		var this2 = { _0 : null, _1 : this1};
		return this2;
	}
	var value = this1[0];
	var array = this1.slice(0,0).concat(this1.slice(1));
	var this3 = { _0 : value, _1 : array};
	return this3;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.push = function(this1,el) {
	return this1.concat([el]);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.pop = function(this1) {
	if(this1.length == 0) {
		var this2 = { _0 : null, _1 : this1};
		return this2;
	}
	var value = this1[this1.length - 1];
	var pos = this1.length - 1;
	var array = this1.slice(0,pos).concat(this1.slice(pos + 1));
	var this3 = { _0 : value, _1 : array};
	return this3;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.iterator = function(this1) {
	return HxOverrides.iter(this1);
};
var thx__$Semigroup_Semigroup_$Impl_$ = {};
thx__$Semigroup_Semigroup_$Impl_$.__name__ = ["thx","_Semigroup","Semigroup_Impl_"];
thx__$Semigroup_Semigroup_$Impl_$.get_append = function(this1) {
	return this1;
};
var thx__$Set_Set_$Impl_$ = {};
thx__$Set_Set_$Impl_$.__name__ = ["thx","_Set","Set_Impl_"];
thx__$Set_Set_$Impl_$.createString = function(it) {
	var map = new haxe_ds_StringMap();
	var this1 = map;
	var set = this1;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createInt = function(it) {
	var map = new haxe_ds_IntMap();
	var this1 = map;
	var set = this1;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createObject = function(it) {
	var map = new haxe_ds_ObjectMap();
	var this1 = map;
	var set = this1;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createEnum = function(arr) {
	var map = new haxe_ds_EnumValueMap();
	var this1 = map;
	var set = this1;
	if(null != arr) {
		thx__$Set_Set_$Impl_$.pushMany(set,arr);
	}
	return set;
};
thx__$Set_Set_$Impl_$._new = function(map) {
	var this1 = map;
	return this1;
};
thx__$Set_Set_$Impl_$.add = function(this1,v) {
	if(this1.exists(v)) {
		return false;
	} else {
		this1.set(v,true);
		return true;
	}
};
thx__$Set_Set_$Impl_$.copy = function(this1) {
	var inst = thx__$Set_Set_$Impl_$.empty(this1);
	var k = this1.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		inst.set(k1,true);
	}
	return inst;
};
thx__$Set_Set_$Impl_$.empty = function(this1) {
	var inst = Type.createInstance(this1 == null ? null : js_Boot.getClass(this1),[]);
	var this2 = inst;
	return this2;
};
thx__$Set_Set_$Impl_$.difference = function(this1,set) {
	var result = thx__$Set_Set_$Impl_$.copy(this1);
	var item = $iterator(thx__$Set_Set_$Impl_$)(set);
	while(item.hasNext()) {
		var item1 = item.next();
		result.remove(item1);
	}
	return result;
};
thx__$Set_Set_$Impl_$.filter = function(this1,predicate) {
	return thx__$Set_Set_$Impl_$.reduce(this1,function(acc,v) {
		if(predicate(v)) {
			thx__$Set_Set_$Impl_$.add(acc,v);
		}
		return acc;
	},thx__$Set_Set_$Impl_$.empty(this1));
};
thx__$Set_Set_$Impl_$.map = function(this1,f) {
	return thx__$Set_Set_$Impl_$.reduce(this1,function(acc,v) {
		acc.push(f(v));
		return acc;
	},[]);
};
thx__$Set_Set_$Impl_$.exists = function(this1,v) {
	return this1.exists(v);
};
thx__$Set_Set_$Impl_$.remove = function(this1,v) {
	return this1.remove(v);
};
thx__$Set_Set_$Impl_$.intersection = function(this1,set) {
	var result = thx__$Set_Set_$Impl_$.empty(this1);
	var item = $iterator(thx__$Set_Set_$Impl_$)(this1);
	while(item.hasNext()) {
		var item1 = item.next();
		if(set.exists(item1)) {
			result.set(item1,true);
		}
	}
	return result;
};
thx__$Set_Set_$Impl_$.push = function(this1,v) {
	this1.set(v,true);
};
thx__$Set_Set_$Impl_$.pushMany = function(this1,values) {
	var value = $iterator(values)();
	while(value.hasNext()) {
		var value1 = value.next();
		this1.set(value1,true);
	}
};
thx__$Set_Set_$Impl_$.reduce = function(this1,handler,acc) {
	var v = $iterator(thx__$Set_Set_$Impl_$)(this1);
	while(v.hasNext()) {
		var v1 = v.next();
		acc = handler(acc,v1);
	}
	return acc;
};
thx__$Set_Set_$Impl_$.iterator = function(this1) {
	return this1.keys();
};
thx__$Set_Set_$Impl_$.union = function(this1,set) {
	var newset = thx__$Set_Set_$Impl_$.copy(this1);
	thx__$Set_Set_$Impl_$.pushMany(newset,thx__$Set_Set_$Impl_$.toArray(set));
	return newset;
};
thx__$Set_Set_$Impl_$.toArray = function(this1) {
	var arr = [];
	var k = this1.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		arr.push(k1);
	}
	return arr;
};
thx__$Set_Set_$Impl_$.toString = function(this1) {
	return "{" + thx__$Set_Set_$Impl_$.toArray(this1).join(", ") + "}";
};
thx__$Set_Set_$Impl_$.get_length = function(this1) {
	var l = 0;
	var i = this1.iterator();
	while(i.hasNext()) {
		var i1 = i.next();
		++l;
	}
	return l;
};
var thx_Strings = function() { };
thx_Strings.__name__ = ["thx","Strings"];
thx_Strings.after = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.afterLast = function(value,searchFor) {
	var pos = value.lastIndexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.capitalize = function(s) {
	return HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length - 1);
};
thx_Strings.capitalizeWords = function(value,whiteSpaceOnly) {
	if(whiteSpaceOnly == null) {
		whiteSpaceOnly = false;
	}
	if(whiteSpaceOnly) {
		return thx_Strings.UCWORDSWS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,value.length - 1),thx_Strings.upperMatch);
	} else {
		return thx_Strings.UCWORDS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,value.length - 1),thx_Strings.upperMatch);
	}
};
thx_Strings.canonicalizeNewlines = function(value) {
	return value.replace(thx_Strings.CANONICALIZE_LINES.r,"\n");
};
thx_Strings.caseInsensitiveCompare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	} else if(null == b) {
		return 1;
	}
	return haxe_Utf8.compare(a.toLowerCase(),b.toLowerCase());
};
thx_Strings.caseInsensitiveEndsWith = function(s,end) {
	return StringTools.endsWith(s.toLowerCase(),end.toLowerCase());
};
thx_Strings.caseInsensitiveEndsWithAny = function(s,values) {
	return thx_Strings.endsWithAny(s.toLowerCase(),values.map(function(v) {
		return v.toLowerCase();
	}));
};
thx_Strings.caseInsensitiveStartsWith = function(s,start) {
	return StringTools.startsWith(s.toLowerCase(),start.toLowerCase());
};
thx_Strings.caseInsensitiveStartsWithAny = function(s,values) {
	return thx_Strings.startsWithAny(s.toLowerCase(),values.map(function(v) {
		return v.toLowerCase();
	}));
};
thx_Strings.collapse = function(value) {
	var _this = thx_Strings.WSG;
	return StringTools.trim(value).replace(_this.r," ");
};
thx_Strings.compare = function(a,b) {
	return haxe_Utf8.compare(a,b);
};
thx_Strings.caseInsensitiveContains = function(s,test) {
	return s.toLowerCase().indexOf(test.toLowerCase()) >= 0;
};
thx_Strings.contains = function(s,test) {
	return s.indexOf(test) >= 0;
};
thx_Strings.count = function(s,test) {
	return s.split(test).length - 1;
};
thx_Strings.caseInsensitiveContainsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(a1) {
		return thx_Strings.caseInsensitiveContains(s1,a1);
	});
};
thx_Strings.containsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(a1) {
		return thx_Strings.contains(s1,a1);
	});
};
thx_Strings.dasherize = function(s) {
	return StringTools.replace(s,"_","-");
};
thx_Strings.diffAt = function(a,b) {
	var a1 = a.length;
	var b1 = b.length;
	var min = a1 < b1 ? a1 : b1;
	var _g1 = 0;
	var _g = min;
	while(_g1 < _g) {
		var i = _g1++;
		if(a.substring(i,i + 1) != b.substring(i,i + 1)) {
			return i;
		}
	}
	return min;
};
thx_Strings.ellipsis = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen < symboll) {
			return HxOverrides.substr(symbol,symboll - maxlen,maxlen);
		} else {
			return HxOverrides.substr(s,0,maxlen - symboll) + symbol;
		}
	} else {
		return s;
	}
};
thx_Strings.ellipsisMiddle = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen <= symboll) {
			return thx_Strings.ellipsis(s,maxlen,symbol);
		}
		var hll = Math.ceil((maxlen - symboll) / 2);
		var hlr = Math.floor((maxlen - symboll) / 2);
		return HxOverrides.substr(s,0,hll) + symbol + HxOverrides.substr(s,sl - hlr,hlr);
	} else {
		return s;
	}
};
thx_Strings.endsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(end) {
		return StringTools.endsWith(s,end);
	});
};
thx_Strings.filter = function(s,predicate) {
	return s.split("").filter(predicate).join("");
};
thx_Strings.filterCharcode = function(s,predicate) {
	var codes = thx_Strings.map(s,function(s1) {
		return HxOverrides.cca(s1,0);
	}).filter(predicate);
	return codes.map(function(i) {
		return String.fromCharCode(i);
	}).join("");
};
thx_Strings.from = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos);
	}
};
thx_Strings.hashCode = function(value) {
	var code = 0;
	var _g1 = 0;
	var _g = value.length;
	while(_g1 < _g) {
		var i = _g1++;
		var c = HxOverrides.cca(value,i);
		code = (haxe__$Int32_Int32_$Impl_$._mul(thx_Strings.HASCODE_MUL,code) + c | 0) % thx_Strings.HASCODE_MAX;
	}
	return code;
};
thx_Strings.hasContent = function(value) {
	if(value != null) {
		return value.length > 0;
	} else {
		return false;
	}
};
thx_Strings.humanize = function(s) {
	return StringTools.replace(thx_Strings.underscore(s),"_"," ");
};
thx_Strings.isAlpha = function(s) {
	if(s.length > 0) {
		return !thx_Strings.IS_ALPHA.match(s);
	} else {
		return false;
	}
};
thx_Strings.isAlphaNum = function(value) {
	return thx_Strings.ALPHANUM.match(value);
};
thx_Strings.isBreakingWhitespace = function(value) {
	return !thx_Strings.IS_BREAKINGWHITESPACE.match(value);
};
thx_Strings.isLowerCase = function(value) {
	return value.toLowerCase() == value;
};
thx_Strings.isUpperCase = function(value) {
	return value.toUpperCase() == value;
};
thx_Strings.ifEmpty = function(value,alt) {
	if(null != value && "" != value) {
		return value;
	} else {
		return alt;
	}
};
thx_Strings.isDigitsOnly = function(value) {
	return thx_Strings.DIGITS.match(value);
};
thx_Strings.isEmpty = function(value) {
	if(value != null) {
		return value == "";
	} else {
		return true;
	}
};
thx_Strings.lowerCaseFirst = function(value) {
	return value.substring(0,1).toLowerCase() + value.substring(1);
};
thx_Strings.random = function(value,length) {
	if(length == null) {
		length = 1;
	}
	return HxOverrides.substr(value,Math.floor((value.length - length + 1) * Math.random()),length);
};
thx_Strings.randomSequence = function(seed,length) {
	return thx_Ints.range(0,length).map(function(_) {
		return thx_Strings.random(seed);
	}).join("");
};
thx_Strings.randomSequence64 = function(length) {
	return thx_Strings.randomSequence(haxe_crypto_Base64.CHARS,length);
};
thx_Strings.iterator = function(s) {
	return HxOverrides.iter(s.split(""));
};
thx_Strings.map = function(value,callback) {
	return value.split("").map(callback);
};
thx_Strings.remove = function(value,toremove) {
	return StringTools.replace(value,toremove,"");
};
thx_Strings.removeAfter = function(value,toremove) {
	if(StringTools.endsWith(value,toremove)) {
		return value.substring(0,value.length - toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeAt = function(value,index,length) {
	return value.substring(0,index) + value.substring(index + length);
};
thx_Strings.removeBefore = function(value,toremove) {
	if(StringTools.startsWith(value,toremove)) {
		return value.substring(toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeOne = function(value,toremove) {
	var pos = value.indexOf(toremove);
	if(pos < 0) {
		return value;
	}
	return value.substring(0,pos) + value.substring(pos + toremove.length);
};
thx_Strings.repeat = function(s,times) {
	var _g = [];
	var _g2 = 0;
	var _g1 = times;
	while(_g2 < _g1) {
		var i = _g2++;
		_g.push(s);
	}
	return _g.join("");
};
thx_Strings.reverse = function(s) {
	var arr = s.split("");
	arr.reverse();
	return arr.join("");
};
thx_Strings.quote = function(s) {
	if(s.indexOf("\"") < 0) {
		return "\"" + s + "\"";
	} else if(s.indexOf("'") < 0) {
		return "'" + s + "'";
	} else {
		return "\"" + StringTools.replace(s,"\"","\\\"") + "\"";
	}
};
thx_Strings.splitOnce = function(s,separator) {
	var pos = s.indexOf(separator);
	if(pos < 0) {
		return [s];
	}
	return [s.substring(0,pos),s.substring(pos + separator.length)];
};
thx_Strings.startsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(start) {
		return StringTools.startsWith(s,start);
	});
};
thx_Strings.stripTags = function(s) {
	return s.replace(thx_Strings.STRIPTAGS.r,"");
};
thx_Strings.surround = function(s,left,right) {
	return "" + left + s + (null == right ? left : right);
};
thx_Strings.toArray = function(s) {
	return s.split("");
};
thx_Strings.toCharcodes = function(s) {
	return thx_Strings.map(s,function(s1) {
		return HxOverrides.cca(s1,0);
	});
};
thx_Strings.toChunks = function(s,len) {
	var chunks = [];
	while(s.length > 0) {
		chunks.push(HxOverrides.substr(s,0,len));
		s = HxOverrides.substr(s,len,s.length - len);
	}
	return chunks;
};
thx_Strings.toLines = function(s) {
	return thx_Strings.SPLIT_LINES.split(s);
};
thx_Strings.trimChars = function(value,charlist) {
	return thx_Strings.trimCharsRight(thx_Strings.trimCharsLeft(value,charlist),charlist);
};
thx_Strings.trimCharsLeft = function(value,charlist) {
	var pos = 0;
	var _g1 = 0;
	var _g = value.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(charlist.indexOf(value.charAt(i)) >= 0) {
			++pos;
		} else {
			break;
		}
	}
	return value.substring(pos);
};
thx_Strings.trimCharsRight = function(value,charlist) {
	var len = value.length;
	var pos = len;
	var i;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var j = _g1++;
		i = len - j - 1;
		if(charlist.indexOf(value.charAt(i)) >= 0) {
			pos = i;
		} else {
			break;
		}
	}
	return value.substring(0,pos);
};
thx_Strings.underscore = function(s) {
	var _this_r = new RegExp("::","g".split("u").join(""));
	s = s.replace(_this_r,"/");
	var _this_r1 = new RegExp("([A-Z]+)([A-Z][a-z])","g".split("u").join(""));
	s = s.replace(_this_r1,"$1_$2");
	var _this_r2 = new RegExp("([a-z\\d])([A-Z])","g".split("u").join(""));
	s = s.replace(_this_r2,"$1_$2");
	var _this_r3 = new RegExp("-","g".split("u").join(""));
	s = s.replace(_this_r3,"_");
	return s.toLowerCase();
};
thx_Strings.upperCaseFirst = function(value) {
	return value.substring(0,1).toUpperCase() + value.substring(1);
};
thx_Strings.upTo = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return value;
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.wrapColumns = function(s,columns,indent,newline) {
	if(newline == null) {
		newline = "\n";
	}
	if(indent == null) {
		indent = "";
	}
	if(columns == null) {
		columns = 78;
	}
	return thx_Strings.SPLIT_LINES.split(s).map(function(part) {
		return thx_Strings.wrapLine(StringTools.trim(part.replace(thx_Strings.WSG.r," ")),columns,indent,newline);
	}).join(newline);
};
thx_Strings.upperMatch = function(re) {
	return re.matched(0).toUpperCase();
};
thx_Strings.wrapLine = function(s,columns,indent,newline) {
	var parts = [];
	var pos = 0;
	var len = s.length;
	var ilen = indent.length;
	columns -= ilen;
	while(true) {
		if(pos + columns >= len - ilen) {
			parts.push(s.substring(pos));
			break;
		}
		var i = 0;
		while(!StringTools.isSpace(s,pos + columns - i) && i < columns) ++i;
		if(i == columns) {
			i = 0;
			while(!StringTools.isSpace(s,pos + columns + i) && pos + columns + i < len) ++i;
			parts.push(s.substring(pos,pos + columns + i));
			pos += columns + i + 1;
		} else {
			parts.push(s.substring(pos,pos + columns - i));
			pos += columns - i + 1;
		}
	}
	return indent + parts.join(newline + indent);
};
thx_Strings.lpad = function(s,$char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return thx_Strings.repeat($char,diff) + s;
	} else {
		return s;
	}
};
thx_Strings.rpad = function(s,$char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return s + thx_Strings.repeat($char,diff);
	} else {
		return s;
	}
};
var thx_TimePeriod = { __ename__ : ["thx","TimePeriod"], __constructs__ : ["Second","Minute","Hour","Day","Week","Month","Year"] };
thx_TimePeriod.Second = ["Second",0];
thx_TimePeriod.Second.__enum__ = thx_TimePeriod;
thx_TimePeriod.Minute = ["Minute",1];
thx_TimePeriod.Minute.__enum__ = thx_TimePeriod;
thx_TimePeriod.Hour = ["Hour",2];
thx_TimePeriod.Hour.__enum__ = thx_TimePeriod;
thx_TimePeriod.Day = ["Day",3];
thx_TimePeriod.Day.__enum__ = thx_TimePeriod;
thx_TimePeriod.Week = ["Week",4];
thx_TimePeriod.Week.__enum__ = thx_TimePeriod;
thx_TimePeriod.Month = ["Month",5];
thx_TimePeriod.Month.__enum__ = thx_TimePeriod;
thx_TimePeriod.Year = ["Year",6];
thx_TimePeriod.Year.__enum__ = thx_TimePeriod;
var thx_Timer = function() { };
thx_Timer.__name__ = ["thx","Timer"];
thx_Timer.debounce = function(callback,delayms,leading) {
	if(leading == null) {
		leading = false;
	}
	var cancel = thx_Functions.noop;
	var poll = function() {
		cancel();
		cancel = thx_Timer.delay(callback,delayms);
	};
	return function() {
		if(leading) {
			leading = false;
			callback();
		}
		poll();
	};
};
thx_Timer.throttle = function(callback,delayms,leading) {
	if(leading == null) {
		leading = false;
	}
	var waiting = false;
	var poll = function() {
		waiting = true;
		thx_Timer.delay(callback,delayms);
	};
	return function() {
		if(leading) {
			leading = false;
			callback();
			return;
		}
		if(waiting) {
			return;
		}
		poll();
	};
};
thx_Timer.repeat = function(callback,delayms) {
	var id = setInterval(callback,delayms);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.delay = function(callback,delayms) {
	var id = setTimeout(callback,delayms);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.frame = function(callback) {
	var cancelled = false;
	var f = thx_Functions.noop;
	var current = performance.now();
	var next;
	f = function() {
		if(cancelled) {
			return;
		}
		next = performance.now();
		callback(next - current);
		current = next;
		requestAnimationFrame(f);
	};
	requestAnimationFrame(f);
	return function() {
		cancelled = true;
	};
};
thx_Timer.nextFrame = function(callback) {
	var id = requestAnimationFrame(callback);
	return function() {
		cancelAnimationFrame(id);
	};
};
thx_Timer.immediate = function(callback) {
	var id = setImmediate(callback);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.clear = function(id) {
	clearTimeout(id);
	return;
};
thx_Timer.time = function() {
	return performance.now();
};
thx_Timer.resolution = function() {
	if(null != thx_Timer._resolution) {
		return thx_Timer._resolution;
	}
	var start = performance.now();
	var end;
	var loop = 0.0;
	while(true) {
		++loop;
		end = performance.now();
		if(!(end - start == 0)) {
			break;
		}
	}
	return thx_Timer._resolution = end - start;
};
var thx__$Timestamp_Timestamp_$Impl_$ = {};
thx__$Timestamp_Timestamp_$Impl_$.__name__ = ["thx","_Timestamp","Timestamp_Impl_"];
thx__$Timestamp_Timestamp_$Impl_$.create = function(year,month,day,hour,minute,second) {
	return thx_Dates.create(year,month,day,hour,minute,second).getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.now = function() {
	return new Date().getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.fromDate = function(d) {
	return d.getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.fromString = function(s) {
	return HxOverrides.strDate(s).getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.toDate = function(this1) {
	return new Date(this1);
};
thx__$Timestamp_Timestamp_$Impl_$.toString = function(this1) {
	return HxOverrides.dateStr(new Date(this1));
};
thx__$Timestamp_Timestamp_$Impl_$.snapNext = function(this1,period) {
	switch(period[1]) {
	case 0:
		return Math.ceil(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.ceil(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.ceil(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + 1,0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() + 7 - wd,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		return thx_Dates.create(d2.getFullYear(),d2.getMonth() + 1,1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		return thx_Dates.create(d3.getFullYear() + 1,0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.snapPrev = function(this1,period) {
	switch(period[1]) {
	case 0:
		return Math.floor(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.floor(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.floor(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate(),0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() - wd,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		return thx_Dates.create(d2.getFullYear(),d2.getMonth(),1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		return thx_Dates.create(d3.getFullYear(),0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.snapTo = function(this1,period) {
	switch(period[1]) {
	case 0:
		return Math.round(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.round(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.round(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		var mod = d.getHours() >= 12 ? 1 : 0;
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + mod,0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		var mod1 = wd < 3 ? -wd : wd > 3 ? 7 - wd : d1.getHours() < 12 ? -wd : 7 - wd;
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() + mod1,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		var mod2 = d2.getDate() > Math.round(DateTools.getMonthDays(d2) / 2) ? 1 : 0;
		return thx_Dates.create(d2.getFullYear(),d2.getMonth() + mod2,1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		var mod3 = this1 > new Date(d3.getFullYear(),6,2,0,0,0).getTime() ? 1 : 0;
		return thx_Dates.create(d3.getFullYear() + mod3,0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.r = function(t,v) {
	return Math.round(t / v) * v;
};
thx__$Timestamp_Timestamp_$Impl_$.f = function(t,v) {
	return Math.floor(t / v) * v;
};
thx__$Timestamp_Timestamp_$Impl_$.c = function(t,v) {
	return Math.ceil(t / v) * v;
};
var thx__$Tuple_Tuple0_$Impl_$ = {};
thx__$Tuple_Tuple0_$Impl_$.__name__ = ["thx","_Tuple","Tuple0_Impl_"];
thx__$Tuple_Tuple0_$Impl_$._new = function() {
	var this1 = thx_Nil.nil;
	return this1;
};
thx__$Tuple_Tuple0_$Impl_$["with"] = function(this1,v) {
	var this2 = v;
	return this2;
};
thx__$Tuple_Tuple0_$Impl_$.toString = function(this1) {
	return "Tuple0()";
};
thx__$Tuple_Tuple0_$Impl_$.toNil = function(this1) {
	return this1;
};
thx__$Tuple_Tuple0_$Impl_$.nilToTuple = function(v) {
	var this1 = thx_Nil.nil;
	return this1;
};
var thx__$Tuple_Tuple1_$Impl_$ = {};
thx__$Tuple_Tuple1_$Impl_$.__name__ = ["thx","_Tuple","Tuple1_Impl_"];
thx__$Tuple_Tuple1_$Impl_$._new = function(_0) {
	var this1 = _0;
	return this1;
};
thx__$Tuple_Tuple1_$Impl_$.get__0 = function(this1) {
	return this1;
};
thx__$Tuple_Tuple1_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1, _1 : v};
	return this2;
};
thx__$Tuple_Tuple1_$Impl_$.toString = function(this1) {
	return "Tuple1(" + Std.string(this1) + ")";
};
thx__$Tuple_Tuple1_$Impl_$.arrayToTuple = function(v) {
	var this1 = v[0];
	return this1;
};
var thx__$Tuple_Tuple2_$Impl_$ = {};
thx__$Tuple_Tuple2_$Impl_$.__name__ = ["thx","_Tuple","Tuple2_Impl_"];
thx__$Tuple_Tuple2_$Impl_$.of = function(_0,_1) {
	var this1 = { _0 : _0, _1 : _1};
	return this1;
};
thx__$Tuple_Tuple2_$Impl_$._new = function(_0,_1) {
	var this1 = { _0 : _0, _1 : _1};
	return this1;
};
thx__$Tuple_Tuple2_$Impl_$.get_left = function(this1) {
	return this1._0;
};
thx__$Tuple_Tuple2_$Impl_$.get_right = function(this1) {
	return this1._1;
};
thx__$Tuple_Tuple2_$Impl_$.flip = function(this1) {
	return { _0 : this1._1, _1 : this1._0};
};
thx__$Tuple_Tuple2_$Impl_$.dropLeft = function(this1) {
	var this2 = this1._1;
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.dropRight = function(this1) {
	var this2 = this1._0;
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : v};
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.toString = function(this1) {
	return "Tuple2(" + Std.string(this1._0) + "," + Std.string(this1._1) + ")";
};
thx__$Tuple_Tuple2_$Impl_$.map = function(this1,f) {
	var this2 = { _0 : this1._0, _1 : f(this1._1)};
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.squeeze = function(f) {
	return function(tp) {
		return f(tp._0,tp._1);
	};
};
thx__$Tuple_Tuple2_$Impl_$.arrayToTuple2 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1]};
	return this1;
};
var thx__$Tuple_Tuple3_$Impl_$ = {};
thx__$Tuple_Tuple3_$Impl_$.__name__ = ["thx","_Tuple","Tuple3_Impl_"];
thx__$Tuple_Tuple3_$Impl_$.of = function(_0,_1,_2) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$._new = function(_0,_1,_2) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$.flip = function(this1) {
	return { _0 : this1._2, _1 : this1._1, _2 : this1._0};
};
thx__$Tuple_Tuple3_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : v};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$.toString = function(this1) {
	return "Tuple3(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + ")";
};
thx__$Tuple_Tuple3_$Impl_$.arrayToTuple3 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2]};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$.map = function(this1,f) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : f(this1._2)};
	return this2;
};
var thx__$Tuple_Tuple4_$Impl_$ = {};
thx__$Tuple_Tuple4_$Impl_$.__name__ = ["thx","_Tuple","Tuple4_Impl_"];
thx__$Tuple_Tuple4_$Impl_$.of = function(_0,_1,_2,_3) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
	return this1;
};
thx__$Tuple_Tuple4_$Impl_$._new = function(_0,_1,_2,_3) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
	return this1;
};
thx__$Tuple_Tuple4_$Impl_$.flip = function(this1) {
	return { _0 : this1._3, _1 : this1._2, _2 : this1._1, _3 : this1._0};
};
thx__$Tuple_Tuple4_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : v};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$.toString = function(this1) {
	return "Tuple4(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + ")";
};
thx__$Tuple_Tuple4_$Impl_$.arrayToTuple4 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3]};
	return this1;
};
var thx__$Tuple_Tuple5_$Impl_$ = {};
thx__$Tuple_Tuple5_$Impl_$.__name__ = ["thx","_Tuple","Tuple5_Impl_"];
thx__$Tuple_Tuple5_$Impl_$.of = function(_0,_1,_2,_3,_4) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
	return this1;
};
thx__$Tuple_Tuple5_$Impl_$._new = function(_0,_1,_2,_3,_4) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
	return this1;
};
thx__$Tuple_Tuple5_$Impl_$.flip = function(this1) {
	return { _0 : this1._4, _1 : this1._3, _2 : this1._2, _3 : this1._1, _4 : this1._0};
};
thx__$Tuple_Tuple5_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4, _5 : v};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$.toString = function(this1) {
	return "Tuple5(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + ")";
};
thx__$Tuple_Tuple5_$Impl_$.arrayToTuple5 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4]};
	return this1;
};
var thx__$Tuple_Tuple6_$Impl_$ = {};
thx__$Tuple_Tuple6_$Impl_$.__name__ = ["thx","_Tuple","Tuple6_Impl_"];
thx__$Tuple_Tuple6_$Impl_$.of = function(_0,_1,_2,_3,_4,_5) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
	return this1;
};
thx__$Tuple_Tuple6_$Impl_$._new = function(_0,_1,_2,_3,_4,_5) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
	return this1;
};
thx__$Tuple_Tuple6_$Impl_$.flip = function(this1) {
	return { _0 : this1._5, _1 : this1._4, _2 : this1._3, _3 : this1._2, _4 : this1._1, _5 : this1._0};
};
thx__$Tuple_Tuple6_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4, _4 : this1._5};
	return this2;
};
thx__$Tuple_Tuple6_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4};
	return this2;
};
thx__$Tuple_Tuple6_$Impl_$.toString = function(this1) {
	return "Tuple6(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + "," + Std.string(this1._5) + ")";
};
thx__$Tuple_Tuple6_$Impl_$.arrayToTuple6 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4], _5 : v[5]};
	return this1;
};
var thx_Types = function() { };
thx_Types.__name__ = ["thx","Types"];
thx_Types.isAnonymousObject = function(v) {
	if(Reflect.isObject(v)) {
		var o = v;
		return null == (o == null ? null : js_Boot.getClass(o));
	} else {
		return false;
	}
};
thx_Types.isObject = function(v) {
	if(Reflect.isObject(v)) {
		return !thx_Types.isPrimitive(v);
	} else {
		return false;
	}
};
thx_Types.isPrimitive = function(v) {
	var _g = Type["typeof"](v);
	switch(_g[1]) {
	case 1:case 2:case 3:
		return true;
	case 0:case 4:case 5:case 7:case 8:
		return false;
	case 6:
		var c = _g[2];
		if(Type.getClassName(c) == "String") {
			return true;
		} else {
			var c1 = _g[2];
			if(Type.getClassName(c1) == "Date") {
				return true;
			} else {
				return false;
			}
		}
		break;
	}
};
thx_Types.isEnumValue = function(v) {
	var _g = Type["typeof"](v);
	if(_g[1] == 7) {
		return true;
	} else {
		return false;
	}
};
thx_Types.hasSuperClass = function(cls,sup) {
	while(null != cls) {
		if(cls == sup) {
			return true;
		}
		cls = Type.getSuperClass(cls);
	}
	return false;
};
thx_Types.sameType = function(a,b) {
	return thx_Types.toString(Type["typeof"](a)) == thx_Types.toString(Type["typeof"](b));
};
thx_Types.typeInheritance = function(type) {
	switch(type[1]) {
	case 1:
		return ["Int"];
	case 2:
		return ["Float"];
	case 3:
		return ["Bool"];
	case 4:
		return ["{}"];
	case 5:
		return ["Function"];
	case 6:
		var c = type[2];
		var classes = [];
		while(null != c) {
			classes.push(c);
			c = Type.getSuperClass(c);
		}
		return classes.map(Type.getClassName);
	case 7:
		var e = type[2];
		return [Type.getEnumName(e)];
	default:
		throw new js__$Boot_HaxeError("invalid type " + Std.string(type));
	}
};
thx_Types.toString = function(type) {
	switch(type[1]) {
	case 0:
		return "Null";
	case 1:
		return "Int";
	case 2:
		return "Float";
	case 3:
		return "Bool";
	case 4:
		return "{}";
	case 5:
		return "Function";
	case 6:
		var c = type[2];
		return Type.getClassName(c);
	case 7:
		var e = type[2];
		return Type.getEnumName(e);
	default:
		throw new js__$Boot_HaxeError("invalid type " + Std.string(type));
	}
};
thx_Types.valueTypeInheritance = function(value) {
	return thx_Types.typeInheritance(Type["typeof"](value));
};
thx_Types.valueTypeToString = function(value) {
	return thx_Types.toString(Type["typeof"](value));
};
thx_Types.anyValueToString = function(value) {
	if(js_Boot.__instanceof(value,ValueType)) {
		return thx_Types.toString(value);
	}
	if(js_Boot.__instanceof(value,Class)) {
		return Type.getClassName(value);
	}
	if(js_Boot.__instanceof(value,Enum)) {
		return Type.getEnumName(value);
	}
	return thx_Types.toString(Type["typeof"](value));
};
var thx_Uuid = function() { };
thx_Uuid.__name__ = ["thx","Uuid"];
thx_Uuid.random = function(max) {
	return Math.floor(Math.random() * max);
};
thx_Uuid.srandom = function() {
	return "0123456789abcdef".charAt(Math.floor(Math.random() * 16));
};
thx_Uuid.create = function() {
	var s = [];
	var _g = 0;
	while(_g < 8) {
		var i = _g++;
		s[i] = "0123456789abcdef".charAt(Math.floor(Math.random() * 16));
	}
	s[8] = "-";
	var _g1 = 9;
	while(_g1 < 13) {
		var i1 = _g1++;
		s[i1] = "0123456789abcdef".charAt(Math.floor(Math.random() * 16));
	}
	s[13] = "-";
	s[14] = "4";
	var _g2 = 15;
	while(_g2 < 18) {
		var i2 = _g2++;
		s[i2] = "0123456789abcdef".charAt(Math.floor(Math.random() * 16));
	}
	s[18] = "-";
	s[19] = "89AB".charAt(Math.floor(Math.random() * 3));
	var _g3 = 20;
	while(_g3 < 23) {
		var i3 = _g3++;
		s[i3] = "0123456789abcdef".charAt(Math.floor(Math.random() * 16));
	}
	s[23] = "-";
	var _g4 = 24;
	while(_g4 < 36) {
		var i4 = _g4++;
		s[i4] = "0123456789abcdef".charAt(Math.floor(Math.random() * 16));
	}
	return s.join("");
};
thx_Uuid.isValid = function(uuid) {
	return new EReg("^[0123456789abcdef]{8}-[0123456789abcdef]{4}-4[0123456789abcdef]{3}-[89ab][0123456789abcdef]{3}-[0123456789abcdef]{12}$","i").match(uuid);
};
var thx__$Validation_Validation_$Impl_$ = {};
thx__$Validation_Validation_$Impl_$.__name__ = ["thx","_Validation","Validation_Impl_"];
thx__$Validation_Validation_$Impl_$.validation = function(e) {
	return e;
};
thx__$Validation_Validation_$Impl_$.vnel = function(e) {
	return e;
};
thx__$Validation_Validation_$Impl_$.liftVNel = function(e) {
	return thx_Eithers.leftMap(e,thx__$Nel_Nel_$Impl_$.pure);
};
thx__$Validation_Validation_$Impl_$.pure = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.success = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.failure = function(e) {
	return thx_Either.Left(e);
};
thx__$Validation_Validation_$Impl_$.nn = function(a,e) {
	if(a == null) {
		return thx_Either.Left(e);
	} else {
		return thx_Either.Right(a);
	}
};
thx__$Validation_Validation_$Impl_$.successNel = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.failureNel = function(e) {
	return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
};
thx__$Validation_Validation_$Impl_$.nnNel = function(a,e) {
	if(a == null) {
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
	} else {
		return thx_Either.Right(a);
	}
};
thx__$Validation_Validation_$Impl_$.get_either = function(this1) {
	return this1;
};
thx__$Validation_Validation_$Impl_$.map = function(this1,f) {
	return thx__$Validation_Validation_$Impl_$.ap(this1,thx_Either.Right(f),function(e1,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	});
};
thx__$Validation_Validation_$Impl_$.foldLeft = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		var a = this1[2];
		return f(b,a);
	}
};
thx__$Validation_Validation_$Impl_$.foldMap = function(this1,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	};
	return thx__$Validation_Validation_$Impl_$.foldLeft(thx_Eithers.map(this1,f),thx__$Monoid_Monoid_$Impl_$.get_zero(m),tmp);
};
thx__$Validation_Validation_$Impl_$.ap = function(this1,v,s) {
	switch(this1[1]) {
	case 0:
		var e0 = this1[2];
		var _g = v;
		switch(_g[1]) {
		case 0:
			var e1 = _g[2];
			return thx_Either.Left((thx__$Semigroup_Semigroup_$Impl_$.get_append(s))(e0,e1));
		case 1:
			var b = _g[2];
			return thx_Either.Left(e0);
		}
		break;
	case 1:
		var a = this1[2];
		var _g1 = v;
		switch(_g1[1]) {
		case 0:
			var e = _g1[2];
			return thx_Either.Left(e);
		case 1:
			var f = _g1[2];
			return thx_Either.Right(f(a));
		}
		break;
	}
};
thx__$Validation_Validation_$Impl_$.zip = function(this1,v,s) {
	return thx__$Validation_Validation_$Impl_$.ap(this1,thx_Eithers.map(v,function(b) {
		var _1 = b;
		return function(_0) {
			return thx__$Tuple_Tuple2_$Impl_$.of(_0,_1);
		};
	}),s);
};
thx__$Validation_Validation_$Impl_$.leftMap = function(this1,f) {
	return thx_Eithers.leftMap(this1,f);
};
thx__$Validation_Validation_$Impl_$.wrapNel = function(this1) {
	return thx_Eithers.leftMap(this1,thx__$Nel_Nel_$Impl_$.pure);
};
thx__$Validation_Validation_$Impl_$.ensure = function(this1,p,error) {
	if(this1[1] == 1) {
		var a = this1[2];
		if(p(a)) {
			return this1;
		} else {
			return thx_Either.Left(error);
		}
	} else {
		var left = this1;
		return left;
	}
};
thx__$Validation_Validation_$Impl_$.flatMapV = function(this1,f) {
	switch(this1[1]) {
	case 0:
		var a = this1[2];
		return thx_Either.Left(a);
	case 1:
		var b = this1[2];
		return f(b);
	}
};
thx__$Validation_Validation_$Impl_$.val2 = function(f,v1,v2,s) {
	return thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(f)),s);
};
thx__$Validation_Validation_$Impl_$.val3 = function(f,v1,v2,v3,s) {
	var f1 = f;
	return thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	})),s),s);
};
thx__$Validation_Validation_$Impl_$.val4 = function(f,v1,v2,v3,v4,s) {
	var f1 = f;
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f2(a1,b1,c1);
		};
	})),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val5 = function(f,v1,v2,v3,v4,v5,s) {
	var f1 = f;
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f3 = function(a1,b1,c1) {
		return function(d1) {
			return f2(a1,b1,c1,d1);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f3(a2,b2,c2);
		};
	})),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val6 = function(f,v1,v2,v3,v4,v5,v6,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f2(a1,b1,c1,d1,e1);
		};
	};
	var f4 = function(a2,b2,c2) {
		return function(d2) {
			return f3(a2,b2,c2,d2);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f4(a3,b3,c3);
		};
	})),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val7 = function(f,v1,v2,v3,v4,v5,v6,v7,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1) {
		return function(f01) {
			return f2(a1,b1,c1,d1,e1,f01);
		};
	};
	var f4 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f3(a2,b2,c2,d2,e2);
		};
	};
	var f5 = function(a3,b3,c3) {
		return function(d3) {
			return f4(a3,b3,c3,d3);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f5(a4,b4,c4);
		};
	})),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01) {
		return function(g1) {
			return f2(a1,b1,c1,d1,e1,f01,g1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2) {
		return function(f02) {
			return f3(a2,b2,c2,d2,e2,f02);
		};
	};
	var f5 = function(a3,b3,c3,d3) {
		return function(e3) {
			return f4(a3,b3,c3,d3,e3);
		};
	};
	var f6 = function(a4,b4,c4) {
		return function(d4) {
			return f5(a4,b4,c4,d4);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a5,b5) {
		return function(c5) {
			return f6(a5,b5,c5);
		};
	})),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val9 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f1(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1) {
		return function(h1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02) {
		return function(g2) {
			return f3(a2,b2,c2,d2,e2,f02,g2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3) {
		return function(f03) {
			return f4(a3,b3,c3,d3,e3,f03);
		};
	};
	var f6 = function(a4,b4,c4,d4) {
		return function(e4) {
			return f5(a4,b4,c4,d4,e4);
		};
	};
	var f7 = function(a5,b5,c5) {
		return function(d5) {
			return f6(a5,b5,c5,d5);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a6,b6) {
		return function(c6) {
			return f7(a6,b6,c6);
		};
	})),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val10 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f1(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1) {
		return function(i1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2) {
		return function(h2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03) {
		return function(g3) {
			return f4(a3,b3,c3,d3,e3,f03,g3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4) {
		return function(f04) {
			return f5(a4,b4,c4,d4,e4,f04);
		};
	};
	var f7 = function(a5,b5,c5,d5) {
		return function(e5) {
			return f6(a5,b5,c5,d5,e5);
		};
	};
	var f8 = function(a6,b6,c6) {
		return function(d6) {
			return f7(a6,b6,c6,d6);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a7,b7) {
		return function(c7) {
			return f8(a7,b7,c7);
		};
	})),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val11 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1) {
		return function(j1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2) {
		return function(i2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3) {
		return function(h3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04) {
		return function(g4) {
			return f5(a4,b4,c4,d4,e4,f04,g4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5) {
		return function(f05) {
			return f6(a5,b5,c5,d5,e5,f05);
		};
	};
	var f8 = function(a6,b6,c6,d6) {
		return function(e6) {
			return f7(a6,b6,c6,d6,e6);
		};
	};
	var f9 = function(a7,b7,c7) {
		return function(d7) {
			return f8(a7,b7,c7,d7);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a8,b8) {
		return function(c8) {
			return f9(a8,b8,c8);
		};
	})),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val12 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1) {
		return function(k1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2) {
		return function(j2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3) {
		return function(i3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4) {
		return function(h4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05) {
		return function(g5) {
			return f6(a5,b5,c5,d5,e5,f05,g5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6) {
		return function(f06) {
			return f7(a6,b6,c6,d6,e6,f06);
		};
	};
	var f9 = function(a7,b7,c7,d7) {
		return function(e7) {
			return f8(a7,b7,c7,d7,e7);
		};
	};
	var f10 = function(a8,b8,c8) {
		return function(d8) {
			return f9(a8,b8,c8,d8);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a9,b9) {
		return function(c9) {
			return f10(a9,b9,c9);
		};
	})),s),s),s),s),s),s),s),s),s),s),s);
};
var thx_ValidationExtensions = function() { };
thx_ValidationExtensions.__name__ = ["thx","ValidationExtensions"];
thx_ValidationExtensions.leftMapNel = function(n,f) {
	return thx_Eithers.leftMap(n,function(n1) {
		return thx__$Nel_Nel_$Impl_$.map(n1,f);
	});
};
thx_ValidationExtensions.ensureNel = function(v,p,error) {
	if(v[1] == 1) {
		var a = v[2];
		if(p(a)) {
			return v;
		} else {
			return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error));
		}
	} else {
		var left = v;
		return left;
	}
};
thx_ValidationExtensions.appendVNel = function(target,item) {
	switch(target[1]) {
	case 0:
		switch(item[1]) {
		case 0:
			var errors1 = target[2];
			var errors2 = item[2];
			return thx_Either.Left(thx__$Nel_Nel_$Impl_$.append(errors1,errors2));
		case 1:
			var errors = target[2];
			var value = item[2];
			return thx_Either.Left(errors);
		}
		break;
	case 1:
		switch(item[1]) {
		case 0:
			var values = target[2];
			var errors3 = item[2];
			return thx_Either.Left(errors3);
		case 1:
			var values1 = target[2];
			var value1 = item[2];
			return thx_Either.Right(thx_Arrays.append(values1,value1));
		}
		break;
	}
};
thx_ValidationExtensions.appendValidation = function(target,item) {
	return thx_ValidationExtensions.appendVNel(target,thx__$Validation_Validation_$Impl_$.liftVNel(item));
};
thx_ValidationExtensions.appendVNels = function(target,items) {
	return thx_Arrays.reduce(items,thx_ValidationExtensions.appendVNel,target);
};
thx_ValidationExtensions.appendValidations = function(target,items) {
	return thx_Arrays.reduce(items,thx_ValidationExtensions.appendValidation,target);
};
var thx_color__$Argb_Argb_$Impl_$ = {};
thx_color__$Argb_Argb_$Impl_$.__name__ = ["thx","color","_Argb","Argb_Impl_"];
thx_color__$Argb_Argb_$Impl_$.create = function(alpha,red,green,blue) {
	return (alpha & 255) << 24 | (red & 255) << 16 | (green & 255) << 8 | blue & 255;
};
thx_color__$Argb_Argb_$Impl_$.fromFloats = function(arr) {
	var ints = thx_ArrayFloats.resized(arr,4).map(function(_) {
		return Math.round(_ * 255);
	});
	return (ints[0] & 255) << 24 | (ints[1] & 255) << 16 | (ints[2] & 255) << 8 | ints[3] & 255;
};
thx_color__$Argb_Argb_$Impl_$.fromInt = function(argb) {
	return argb;
};
thx_color__$Argb_Argb_$Impl_$.fromInts = function(arr) {
	arr = thx_ArrayInts.resized(arr,4);
	return (arr[0] & 255) << 24 | (arr[1] & 255) << 16 | (arr[2] & 255) << 8 | arr[3] & 255;
};
thx_color__$Argb_Argb_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseHex(color);
	if(null == info) {
		info = thx_color_parse_ColorParser.parseColor(color);
	}
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		if(_g == "argb") {
			return (thx_color_parse_ColorParser.getInt8Channel(info.channels[0]) & 255) << 24 | (thx_color_parse_ColorParser.getInt8Channel(info.channels[1]) & 255) << 16 | (thx_color_parse_ColorParser.getInt8Channel(info.channels[2]) & 255) << 8 | thx_color_parse_ColorParser.getInt8Channel(info.channels[3]) & 255;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Argb_Argb_$Impl_$._new = function(argb) {
	var this1 = argb;
	return this1;
};
thx_color__$Argb_Argb_$Impl_$.combineColor = function(this1,other) {
	var a = (this1 >> 24 & 255) / 255;
	return thx_color__$Rgb_Rgb_$Impl_$.fromInts([Math.round((1 - a) * thx_color__$Rgb_Rgb_$Impl_$.get_red(other) + a * (this1 >> 16 & 255)),Math.round((1 - a) * thx_color__$Rgb_Rgb_$Impl_$.get_green(other) + a * (this1 >> 8 & 255)),Math.round((1 - a) * thx_color__$Rgb_Rgb_$Impl_$.get_blue(other) + a * (this1 & 255))]);
};
thx_color__$Argb_Argb_$Impl_$.darker = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Rgbxa_Rgbxa_$Impl_$.darker(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Argb_Argb_$Impl_$.lighter = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Rgbxa_Rgbxa_$Impl_$.lighter(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Argb_Argb_$Impl_$.transparent = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Rgbxa_Rgbxa_$Impl_$.transparent(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Argb_Argb_$Impl_$.opaque = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Rgbxa_Rgbxa_$Impl_$.opaque(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Argb_Argb_$Impl_$.interpolate = function(this1,other,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Rgbxa_Rgbxa_$Impl_$.interpolate(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1),thx_color__$Argb_Argb_$Impl_$.toRgbxa(other),t));
};
thx_color__$Argb_Argb_$Impl_$.withAlpha = function(this1,newalpha) {
	return (newalpha & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
};
thx_color__$Argb_Argb_$Impl_$.withAlphaf = function(this1,newalpha) {
	return (Math.round(255 * newalpha) & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
};
thx_color__$Argb_Argb_$Impl_$.withRed = function(this1,newred) {
	return (this1 >> 24 & 255 & 255) << 24 | (newred & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
};
thx_color__$Argb_Argb_$Impl_$.withGreen = function(this1,newgreen) {
	return (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (newgreen & 255) << 8 | this1 & 255 & 255;
};
thx_color__$Argb_Argb_$Impl_$.withBlue = function(this1,newblue) {
	return (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | newblue & 255;
};
thx_color__$Argb_Argb_$Impl_$.toHsla = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsla(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1));
};
thx_color__$Argb_Argb_$Impl_$.toHsva = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsva(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1));
};
thx_color__$Argb_Argb_$Impl_$.toRgb = function(this1) {
	var this2 = (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return this2;
};
thx_color__$Argb_Argb_$Impl_$.toRgba = function(this1) {
	return (this1 >> 16 & 255 & 255) << 24 | (this1 >> 8 & 255 & 255) << 16 | (this1 & 255 & 255) << 8 | this1 >> 24 & 255 & 255;
};
thx_color__$Argb_Argb_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.fromInts([this1 >> 16 & 255,this1 >> 8 & 255,this1 & 255]);
};
thx_color__$Argb_Argb_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.fromInts([this1 >> 16 & 255,this1 >> 8 & 255,this1 & 255,this1 >> 24 & 255]);
};
thx_color__$Argb_Argb_$Impl_$.toString = function(this1) {
	return "argb(" + (this1 >> 24 & 255) + "," + (this1 >> 16 & 255) + "," + (this1 >> 8 & 255) + "," + (this1 & 255) + ")";
};
thx_color__$Argb_Argb_$Impl_$.toHex = function(this1,prefix) {
	if(prefix == null) {
		prefix = "#";
	}
	return "" + prefix + StringTools.hex(this1 >> 24 & 255,2) + StringTools.hex(this1 >> 16 & 255,2) + StringTools.hex(this1 >> 8 & 255,2) + StringTools.hex(this1 & 255,2);
};
thx_color__$Argb_Argb_$Impl_$.equals = function(this1,other) {
	if((this1 >> 16 & 255) == (other >> 16 & 255) && (this1 >> 24 & 255) == (other >> 24 & 255) && (this1 >> 8 & 255) == (other >> 8 & 255)) {
		return (this1 & 255) == (other & 255);
	} else {
		return false;
	}
};
thx_color__$Argb_Argb_$Impl_$.toInt = function(this1) {
	return this1;
};
thx_color__$Argb_Argb_$Impl_$.get_alpha = function(this1) {
	return this1 >> 24 & 255;
};
thx_color__$Argb_Argb_$Impl_$.get_red = function(this1) {
	return this1 >> 16 & 255;
};
thx_color__$Argb_Argb_$Impl_$.get_green = function(this1) {
	return this1 >> 8 & 255;
};
thx_color__$Argb_Argb_$Impl_$.get_blue = function(this1) {
	return this1 & 255;
};
var thx_color__$Cmy_Cmy_$Impl_$ = {};
thx_color__$Cmy_Cmy_$Impl_$.__name__ = ["thx","color","_Cmy","Cmy_Impl_"];
thx_color__$Cmy_Cmy_$Impl_$.create = function(cyan,magenta,yellow) {
	var this1 = [cyan,magenta,yellow];
	return this1;
};
thx_color__$Cmy_Cmy_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Cmy_Cmy_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		if(_g == "cmy") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Cmy_Cmy_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Cmy_Cmy_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.normalize = function(this1) {
	var this2;
	var v = this1[0];
	var v1 = this1[1];
	var v2 = this1[2];
	this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.withCyan = function(this1,newcyan) {
	var this2 = [newcyan,this1[1],this1[2]];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.withMagenta = function(this1,newmagenta) {
	var this2 = [this1[0],newmagenta,this1[2]];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.withYellow = function(this1,newyellow) {
	var this2 = [this1[0],this1[1],newyellow];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.toString = function(this1) {
	return "cmy(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$Cmy_Cmy_$Impl_$.equals = function(this1,other) {
	return thx_color__$Cmy_Cmy_$Impl_$.nearEquals(this1,other);
};
thx_color__$Cmy_Cmy_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Cmy_Cmy_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Cmy_Cmy_$Impl_$.toXyz(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Cmy_Cmy_$Impl_$.toLab(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toCmyk = function(this1) {
	var k = Math.min(Math.min(this1[0],this1[1]),this1[2]);
	if(k == 1) {
		var this2 = [0,0,0,1];
		return this2;
	} else {
		var this3 = [(this1[0] - k) / (1 - k),(this1[1] - k) / (1 - k),(this1[2] - k) / (1 - k),k];
		return this3;
	}
};
thx_color__$Cmy_Cmy_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1),1);
};
thx_color__$Cmy_Cmy_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Cmy_Cmy_$Impl_$.toXyz(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Cmy_Cmy_$Impl_$.toRgbxa(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Cmy_Cmy_$Impl_$.toRgbxa(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toRgbx = function(this1) {
	var this2 = [1 - this1[0],1 - this1[1],1 - this1[2]];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.get_cyan = function(this1) {
	return this1[0];
};
thx_color__$Cmy_Cmy_$Impl_$.get_magenta = function(this1) {
	return this1[1];
};
thx_color__$Cmy_Cmy_$Impl_$.get_yellow = function(this1) {
	return this1[2];
};
var thx_color__$Cmyk_Cmyk_$Impl_$ = {};
thx_color__$Cmyk_Cmyk_$Impl_$.__name__ = ["thx","color","_Cmyk","Cmyk_Impl_"];
thx_color__$Cmyk_Cmyk_$Impl_$.create = function(cyan,magenta,yellow,black) {
	var this1 = [cyan,magenta,yellow,black];
	return this1;
};
thx_color__$Cmyk_Cmyk_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,4);
	var this1 = [arr[0],arr[1],arr[2],arr[3]];
	return this1;
};
thx_color__$Cmyk_Cmyk_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		if(_g == "cmyk") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,4,false);
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Cmyk_Cmyk_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Cmyk_Cmyk_$Impl_$.darker = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Floats.interpolate(t,this1[3],1)];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.lighter = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Floats.interpolate(t,this1[3],0)];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2]),thx_Floats.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2]),Math.min(this1[3],other[3])];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2]),Math.max(this1[3],other[3])];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.normalize = function(this1) {
	var this2;
	var v = this1[0];
	var v1 = this1[1];
	var v2 = this1[2];
	var v3 = this1[3];
	this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2,v3 < 0 ? 0 : v3 > 1 ? 1 : v3];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals),thx_Floats.roundTo(this1[3],decimals)];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.withCyan = function(this1,newcyan) {
	var this2 = [newcyan,this1[1],this1[2],this1[3]];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.withMagenta = function(this1,newmagenta) {
	var this2 = [this1[0],newmagenta,this1[2],this1[3]];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.withYellow = function(this1,newyellow) {
	var this2 = [this1[0],this1[1],newyellow,this1[3]];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.withBlack = function(this1,newblack) {
	var this2 = [this1[0],this1[1],this1[2],newblack];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.toString = function(this1) {
	return "cmyk(" + this1[0] + "," + this1[1] + "," + this1[2] + "," + this1[3] + ")";
};
thx_color__$Cmyk_Cmyk_$Impl_$.equals = function(this1,other) {
	return thx_color__$Cmyk_Cmyk_$Impl_$.nearEquals(this1,other);
};
thx_color__$Cmyk_Cmyk_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance) && thx_Floats.nearEquals(this1[2],other[2],tolerance)) {
		return thx_Floats.nearEquals(this1[3],other[3],tolerance);
	} else {
		return false;
	}
};
thx_color__$Cmyk_Cmyk_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Cmyk_Cmyk_$Impl_$.toXyz(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Cmyk_Cmyk_$Impl_$.toLab(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toCmy = function(this1) {
	var this2 = [this1[3] + (1 - this1[3]) * this1[0],this1[3] + (1 - this1[3]) * this1[1],this1[3] + (1 - this1[3]) * this1[2]];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1),1);
};
thx_color__$Cmyk_Cmyk_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Cmyk_Cmyk_$Impl_$.toXyz(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbxa(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbxa(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx = function(this1) {
	var this2 = [(1 - this1[3]) * (1 - this1[0]),(1 - this1[3]) * (1 - this1[1]),(1 - this1[3]) * (1 - this1[2])];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.get_cyan = function(this1) {
	return this1[0];
};
thx_color__$Cmyk_Cmyk_$Impl_$.get_magenta = function(this1) {
	return this1[1];
};
thx_color__$Cmyk_Cmyk_$Impl_$.get_yellow = function(this1) {
	return this1[2];
};
thx_color__$Cmyk_Cmyk_$Impl_$.get_black = function(this1) {
	return this1[3];
};
var thx_color__$CubeHelix_CubeHelix_$Impl_$ = {};
thx_color__$CubeHelix_CubeHelix_$Impl_$.__name__ = ["thx","color","_CubeHelix","CubeHelix_Impl_"];
thx_color__$CubeHelix_CubeHelix_$Impl_$.create = function(hue,saturation,lightness,gamma) {
	var this1 = [hue,saturation,lightness,null == gamma ? 1.0 : gamma];
	return this1;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.fromFloats = function(arr) {
	if(arr.length < 4) {
		arr = thx_ArrayFloats.resized(arr,3);
		arr.push(1);
	}
	var gamma = arr[3];
	var this1 = [arr[0],arr[1],arr[2],null == gamma ? 1.0 : gamma];
	return this1;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		if(_g == "cubehelix") {
			if(info.channels.length >= 4) {
				var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,4,false);
				return this1;
			} else {
				var this2 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false).concat([1.0]);
				return this2;
			}
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$CubeHelix_CubeHelix_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.analogous = function(this1,spread) {
	if(spread == null) {
		spread = 30.0;
	}
	var this2 = { _0 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,-spread), _1 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.complement = function(this1) {
	return thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,180);
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.darker = function(this1,t) {
	var this2 = [this1[0],this1[1],thx_Floats.interpolate(t,this1[2],0),this1[3]];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.lighter = function(this1,t) {
	var this2 = [this1[0],this1[1],thx_Floats.interpolate(t,this1[2],1),this1[3]];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngle(t,this1[0],other[0],360),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2]),thx_Floats.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.interpolateWidest = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngleWidest(t,this1[0],other[0],360),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2]),thx_Floats.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.min = function(this1,other) {
	var gamma = Math.min(this1[3],other[3]);
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2]),null == gamma ? 1.0 : gamma];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.max = function(this1,other) {
	var gamma = Math.max(this1[3],other[3]);
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2]),null == gamma ? 1.0 : gamma];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.normalize = function(this1) {
	var hue = thx_Floats.wrapCircular(this1[0],360);
	var v = this1[3];
	var gamma = v < 0 ? 0 : v > 1 ? 1 : v;
	var this2;
	var v1 = this1[1];
	var v2 = this1[2];
	this2 = [hue,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2,null == gamma ? 1.0 : gamma];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate = function(this1,angle) {
	return thx_color__$CubeHelix_CubeHelix_$Impl_$.withHue(this1,this1[0] + angle);
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.roundTo = function(this1,decimals) {
	var hue = thx_Floats.roundTo(this1[0],decimals);
	var saturation = thx_Floats.roundTo(this1[1],decimals);
	var lightness = thx_Floats.roundTo(this1[2],decimals);
	var gamma = thx_Floats.roundTo(this1[3],decimals);
	var this2 = [hue,saturation,lightness,null == gamma ? 1.0 : gamma];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.split = function(this1,spread) {
	if(spread == null) {
		spread = 144.0;
	}
	var this2 = { _0 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,-spread), _1 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.square = function(this1) {
	return thx_color__$CubeHelix_CubeHelix_$Impl_$.tetrad(this1,90);
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.tetrad = function(this1,angle) {
	var this2 = { _0 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,0), _1 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,angle), _2 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,180), _3 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,180 + angle)};
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.triad = function(this1) {
	var this2 = { _0 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,-120), _1 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,0), _2 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,120)};
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.withGamma = function(this1,newgamma) {
	var this2 = [this1[0],this1[1],this1[2],newgamma];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.withHue = function(this1,newhue) {
	var this2 = [newhue,this1[1],this1[2],this1[3]];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.withLightness = function(this1,newlightness) {
	var this2 = [this1[0],this1[1],newlightness,this1[3]];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.withSaturation = function(this1,newsaturation) {
	var this2 = [this1[0],newsaturation,this1[2],this1[3]];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toCss3 = function(this1) {
	return thx_color__$CubeHelix_CubeHelix_$Impl_$.toString(this1);
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toString = function(this1) {
	if(this1[3] != 1) {
		return "cubehelix(" + this1[0] + "," + this1[1] + "," + this1[2] + ", " + this1[3] + ")";
	} else {
		return "cubehelix(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
	}
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.equals = function(this1,other) {
	return thx_color__$CubeHelix_CubeHelix_$Impl_$.nearEquals(this1,other);
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(Math.abs(thx_Floats.angleDifference(this1[0],other[0],360.0)) <= tolerance && thx_Floats.nearEquals(this1[1],other[1],tolerance) && thx_Floats.nearEquals(this1[2],other[2],tolerance)) {
		return thx_Floats.nearEquals(this1[3],other[3],tolerance);
	} else {
		return false;
	}
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$CubeHelix_CubeHelix_$Impl_$.toXyz(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$CubeHelix_CubeHelix_$Impl_$.toLab(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$CubeHelix_CubeHelix_$Impl_$.toXyz(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbxa(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbxa(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx = function(this1) {
	var h = isNaN(this1[0]) ? 0 : (this1[0] + 120) / 180 * Math.PI;
	var l = Math.pow(this1[2],this1[3]);
	var a = isNaN(this1[1]) ? 0 : this1[1] * l * (1 - l);
	var cosh = Math.cos(h);
	var sinh = Math.sin(h);
	var this2 = [l + a * (-0.14861 * cosh + 1.78277 * sinh),l + a * (-0.29227 * cosh + -0.90649 * sinh),l + a * (1.97294 * cosh)];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.get_hue = function(this1) {
	return this1[0];
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.get_saturation = function(this1) {
	return this1[1];
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.get_lightness = function(this1) {
	return this1[2];
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.get_gamma = function(this1) {
	return this1[3];
};
var thx_color__$Grey_Grey_$Impl_$ = {};
thx_color__$Grey_Grey_$Impl_$.__name__ = ["thx","color","_Grey","Grey_Impl_"];
thx_color__$Grey_Grey_$Impl_$.create = function(v) {
	var this1 = v;
	return this1;
};
thx_color__$Grey_Grey_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		switch(_g) {
		case "gray":case "grey":
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,1,false)[0];
			return this1;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Grey_Grey_$Impl_$._new = function(grey) {
	var this1 = grey;
	return this1;
};
thx_color__$Grey_Grey_$Impl_$.contrast = function(this1) {
	if(this1 > 0.5) {
		return thx_color__$Grey_Grey_$Impl_$.black;
	} else {
		return thx_color__$Grey_Grey_$Impl_$.white;
	}
};
thx_color__$Grey_Grey_$Impl_$.darker = function(this1,t) {
	var this2 = thx_Floats.interpolate(t,this1,0);
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.lighter = function(this1,t) {
	var this2 = thx_Floats.interpolate(t,this1,1);
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = thx_Floats.interpolate(t,this1,other);
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.min = function(this1,other) {
	var this2 = Math.min(this1,other);
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.max = function(this1,other) {
	var this2 = Math.max(this1,other);
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.normalize = function(this1) {
	var this2 = this1 < 0 ? 0 : this1 > 1 ? 1 : this1;
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = thx_Floats.roundTo(this1,decimals);
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.toString = function(this1) {
	return "grey(" + this1 * 100 + "%)";
};
thx_color__$Grey_Grey_$Impl_$.equals = function(this1,other) {
	return thx_Floats.nearEquals(this1,other);
};
thx_color__$Grey_Grey_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	return thx_Floats.nearEquals(this1,other,tolerance);
};
thx_color__$Grey_Grey_$Impl_$.get_grey = function(this1) {
	return this1;
};
thx_color__$Grey_Grey_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Grey_Grey_$Impl_$.toXyz(this1));
};
thx_color__$Grey_Grey_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Grey_Grey_$Impl_$.toLab(this1));
};
thx_color__$Grey_Grey_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1),1);
};
thx_color__$Grey_Grey_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Grey_Grey_$Impl_$.toXyz(this1));
};
thx_color__$Grey_Grey_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Grey_Grey_$Impl_$.toRgbxa(this1));
};
thx_color__$Grey_Grey_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Grey_Grey_$Impl_$.toRgbxa(this1));
};
thx_color__$Grey_Grey_$Impl_$.toRgbx = function(this1) {
	var this2 = [this1,this1,this1];
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
var thx_color__$Hsl_Hsl_$Impl_$ = {};
thx_color__$Hsl_Hsl_$Impl_$.__name__ = ["thx","color","_Hsl","Hsl_Impl_"];
thx_color__$Hsl_Hsl_$Impl_$.create = function(hue,saturation,lightness) {
	var this1 = [hue,saturation,lightness];
	return this1;
};
thx_color__$Hsl_Hsl_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Hsl_Hsl_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		if(_g == "hsl") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Hsl_Hsl_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Hsl_Hsl_$Impl_$.analogous = function(this1,spread) {
	if(spread == null) {
		spread = 30.0;
	}
	var this2 = { _0 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.complement = function(this1) {
	return thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,180);
};
thx_color__$Hsl_Hsl_$Impl_$.darker = function(this1,t) {
	var this2 = [this1[0],this1[1],thx_Floats.interpolate(t,this1[2],0)];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.lighter = function(this1,t) {
	var this2 = [this1[0],this1[1],thx_Floats.interpolate(t,this1[2],1)];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngle(t,this1[0],other[0],360),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.interpolateWidest = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngleWidest(t,this1[0],other[0],360),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.normalize = function(this1) {
	var hue = thx_Floats.wrapCircular(this1[0],360);
	var this2;
	var v = this1[1];
	var v1 = this1[2];
	this2 = [hue,v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.rotate = function(this1,angle) {
	return thx_color__$Hsl_Hsl_$Impl_$.withHue(this1,this1[0] + angle);
};
thx_color__$Hsl_Hsl_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.split = function(this1,spread) {
	if(spread == null) {
		spread = 144.0;
	}
	var this2 = { _0 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.square = function(this1) {
	return thx_color__$Hsl_Hsl_$Impl_$.tetrad(this1,90);
};
thx_color__$Hsl_Hsl_$Impl_$.tetrad = function(this1,angle) {
	var this2 = { _0 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,0), _1 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,angle), _2 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,180), _3 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,180 + angle)};
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.triad = function(this1) {
	var this2 = { _0 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,-120), _1 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,0), _2 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,120)};
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.withAlpha = function(this1,alpha) {
	var this2 = this1.concat([alpha]);
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.withHue = function(this1,newhue) {
	var this2 = [newhue,this1[1],this1[2]];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.withLightness = function(this1,newlightness) {
	var this2 = [this1[0],this1[1],newlightness];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.withSaturation = function(this1,newsaturation) {
	var this2 = [this1[0],newsaturation,this1[2]];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.toCss3 = function(this1) {
	return thx_color__$Hsl_Hsl_$Impl_$.toString(this1);
};
thx_color__$Hsl_Hsl_$Impl_$.toString = function(this1) {
	return "hsl(" + this1[0] + "," + this1[1] * 100 + "%," + this1[2] * 100 + "%)";
};
thx_color__$Hsl_Hsl_$Impl_$.equals = function(this1,other) {
	return thx_color__$Hsl_Hsl_$Impl_$.nearEquals(this1,other);
};
thx_color__$Hsl_Hsl_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(Math.abs(thx_Floats.angleDifference(this1[0],other[0],360.0)) <= tolerance && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Hsl_Hsl_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Hsl_Hsl_$Impl_$.toXyz(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Hsl_Hsl_$Impl_$.toLab(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1),1);
};
thx_color__$Hsl_Hsl_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Hsl_Hsl_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Hsl_Hsl_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toRgbx = function(this1) {
	var this2 = [thx_color__$Hsl_Hsl_$Impl_$._c(this1[0] + 120,this1[1],this1[2]),thx_color__$Hsl_Hsl_$Impl_$._c(this1[0],this1[1],this1[2]),thx_color__$Hsl_Hsl_$Impl_$._c(this1[0] - 120,this1[1],this1[2])];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toHsla = function(this1) {
	return thx_color__$Hsl_Hsl_$Impl_$.withAlpha(this1,1.0);
};
thx_color__$Hsl_Hsl_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Hsl_Hsl_$Impl_$.toXyz(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.get_hue = function(this1) {
	return this1[0];
};
thx_color__$Hsl_Hsl_$Impl_$.get_saturation = function(this1) {
	return this1[1];
};
thx_color__$Hsl_Hsl_$Impl_$.get_lightness = function(this1) {
	return this1[2];
};
thx_color__$Hsl_Hsl_$Impl_$._c = function(d,s,l) {
	var m2 = l <= 0.5 ? l * (1 + s) : l + s - l * s;
	var m1 = 2 * l - m2;
	d = thx_Floats.wrapCircular(d,360);
	if(d < 60) {
		return m1 + (m2 - m1) * d / 60;
	} else if(d < 180) {
		return m2;
	} else if(d < 240) {
		return m1 + (m2 - m1) * (240 - d) / 60;
	} else {
		return m1;
	}
};
var thx_color__$Hsla_Hsla_$Impl_$ = {};
thx_color__$Hsla_Hsla_$Impl_$.__name__ = ["thx","color","_Hsla","Hsla_Impl_"];
thx_color__$Hsla_Hsla_$Impl_$.create = function(hue,saturation,lightness,alpha) {
	var this1 = [hue,saturation,lightness,alpha];
	return this1;
};
thx_color__$Hsla_Hsla_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,4);
	var this1 = [arr[0],arr[1],arr[2],arr[3]];
	return this1;
};
thx_color__$Hsla_Hsla_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		switch(_g) {
		case "hsl":
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return thx_color__$Hsl_Hsl_$Impl_$.toHsla(this1);
		case "hsla":
			var this2 = thx_color_parse_ColorParser.getFloatChannels(info.channels,4,false);
			return this2;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Hsla_Hsla_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Hsla_Hsla_$Impl_$.analogous = function(this1,spread) {
	if(spread == null) {
		spread = 30.0;
	}
	var this2 = { _0 : thx_color__$Hsla_Hsla_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsla_Hsla_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.complement = function(this1) {
	return thx_color__$Hsla_Hsla_$Impl_$.rotate(this1,180);
};
thx_color__$Hsla_Hsla_$Impl_$.darker = function(this1,t) {
	var this2 = [this1[0],this1[1],thx_Floats.interpolate(t,this1[2],0),this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.lighter = function(this1,t) {
	var this2 = [this1[0],this1[1],thx_Floats.interpolate(t,this1[2],1),this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.normalize = function(this1) {
	var hue = thx_Floats.wrapCircular(this1[0],360);
	var this2;
	var v = this1[1];
	var v1 = this1[2];
	var v2 = this1[3];
	this2 = [hue,v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals),thx_Floats.roundTo(this1[3],decimals)];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.transparent = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Floats.interpolate(t,this1[3],0)];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.opaque = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Floats.interpolate(t,this1[3],1)];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngle(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2]),thx_Floats.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.rotate = function(this1,angle) {
	var this2 = [this1[0] + angle,this1[1],this1[2],this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.split = function(this1,spread) {
	if(spread == null) {
		spread = 150.0;
	}
	var this2 = { _0 : thx_color__$Hsla_Hsla_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsla_Hsla_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.withAlpha = function(this1,newalpha) {
	var this2 = [this1[0],this1[1],this1[2],newalpha];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.withHue = function(this1,newhue) {
	var this2 = [newhue,this1[1],this1[2],this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.withLightness = function(this1,newlightness) {
	var this2 = [this1[0],this1[1],newlightness,this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.withSaturation = function(this1,newsaturation) {
	var this2 = [this1[0],newsaturation,this1[2],this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.toCss3 = function(this1) {
	return thx_color__$Hsla_Hsla_$Impl_$.toString(this1);
};
thx_color__$Hsla_Hsla_$Impl_$.toString = function(this1) {
	return "hsla(" + this1[0] + "," + this1[1] * 100 + "%," + this1[2] * 100 + "%," + this1[3] + ")";
};
thx_color__$Hsla_Hsla_$Impl_$.equals = function(this1,other) {
	return thx_color__$Hsla_Hsla_$Impl_$.nearEquals(this1,other);
};
thx_color__$Hsla_Hsla_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(Math.abs(thx_Floats.angleDifference(this1[0],other[0],360.0)) <= tolerance && thx_Floats.nearEquals(this1[1],other[1],tolerance) && thx_Floats.nearEquals(this1[2],other[2],tolerance)) {
		return thx_Floats.nearEquals(this1[3],other[3],tolerance);
	} else {
		return false;
	}
};
thx_color__$Hsla_Hsla_$Impl_$.toHsl = function(this1) {
	var this2 = this1.slice(0,3);
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.toHsva = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsva(thx_color__$Hsla_Hsla_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsla_Hsla_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgb(thx_color__$Hsla_Hsla_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsla_Hsla_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Hsla_Hsla_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsla_Hsla_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Hsla_Hsla_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsla_Hsla_$Impl_$.toRgbxa = function(this1) {
	var this2 = [thx_color__$Hsl_Hsl_$Impl_$._c(this1[0] + 120,this1[1],this1[2]),thx_color__$Hsl_Hsl_$Impl_$._c(this1[0],this1[1],this1[2]),thx_color__$Hsl_Hsl_$Impl_$._c(this1[0] - 120,this1[1],this1[2]),this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.get_hue = function(this1) {
	return this1[0];
};
thx_color__$Hsla_Hsla_$Impl_$.get_saturation = function(this1) {
	return this1[1];
};
thx_color__$Hsla_Hsla_$Impl_$.get_lightness = function(this1) {
	return this1[2];
};
thx_color__$Hsla_Hsla_$Impl_$.get_alpha = function(this1) {
	return this1[3];
};
var thx_color__$Hsv_Hsv_$Impl_$ = {};
thx_color__$Hsv_Hsv_$Impl_$.__name__ = ["thx","color","_Hsv","Hsv_Impl_"];
thx_color__$Hsv_Hsv_$Impl_$.create = function(hue,saturation,value) {
	var this1 = [hue,saturation,value];
	return this1;
};
thx_color__$Hsv_Hsv_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Hsv_Hsv_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		if(_g == "hsv") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Hsv_Hsv_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Hsv_Hsv_$Impl_$.analogous = function(this1,spread) {
	if(spread == null) {
		spread = 30.0;
	}
	var this2 = { _0 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.complement = function(this1) {
	return thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,180);
};
thx_color__$Hsv_Hsv_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngle(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.interpolateWidest = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngleWidest(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.normalize = function(this1) {
	var hue = thx_Floats.wrapCircular(this1[0],360);
	var this2;
	var v = this1[1];
	var v1 = this1[2];
	this2 = [hue,v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.rotate = function(this1,angle) {
	return thx_color__$Hsv_Hsv_$Impl_$.normalize(thx_color__$Hsv_Hsv_$Impl_$.withHue(this1,this1[0] + angle));
};
thx_color__$Hsv_Hsv_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.split = function(this1,spread) {
	if(spread == null) {
		spread = 144.0;
	}
	var this2 = { _0 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.square = function(this1) {
	return thx_color__$Hsv_Hsv_$Impl_$.tetrad(this1,90);
};
thx_color__$Hsv_Hsv_$Impl_$.tetrad = function(this1,angle) {
	var this2 = { _0 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,0), _1 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,angle), _2 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,180), _3 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,180 + angle)};
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.triad = function(this1) {
	var this2 = { _0 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,-120), _1 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,0), _2 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,120)};
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.withAlpha = function(this1,alpha) {
	var this2 = this1.concat([alpha]);
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.withHue = function(this1,newhue) {
	var this2 = [newhue,this1[1],this1[2]];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.withValue = function(this1,newvalue) {
	var this2 = [this1[0],this1[1],newvalue];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.withSaturation = function(this1,newsaturation) {
	var this2 = [this1[0],newsaturation,this1[2]];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.toString = function(this1) {
	return "hsv(" + this1[0] + "," + this1[1] * 100 + "%," + this1[2] * 100 + "%)";
};
thx_color__$Hsv_Hsv_$Impl_$.equals = function(this1,other) {
	return thx_color__$Hsv_Hsv_$Impl_$.nearEquals(this1,other);
};
thx_color__$Hsv_Hsv_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(Math.abs(thx_Floats.angleDifference(this1[0],other[0],360.0)) <= tolerance && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Hsv_Hsv_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Hsv_Hsv_$Impl_$.toXyz(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Hsv_Hsv_$Impl_$.toLab(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1),1);
};
thx_color__$Hsv_Hsv_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toHsva = function(this1) {
	return thx_color__$Hsv_Hsv_$Impl_$.withAlpha(this1,1.0);
};
thx_color__$Hsv_Hsv_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Hsv_Hsv_$Impl_$.toXyz(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Hsv_Hsv_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Hsv_Hsv_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toRgbx = function(this1) {
	if(this1[1] == 0) {
		var this2 = [this1[2],this1[2],this1[2]];
		return this2;
	}
	var r;
	var g;
	var b;
	var i;
	var f;
	var p;
	var q;
	var t;
	var h = this1[0] / 60;
	i = Math.floor(h);
	f = h - i;
	p = this1[2] * (1 - this1[1]);
	q = this1[2] * (1 - f * this1[1]);
	t = this1[2] * (1 - (1 - f) * this1[1]);
	switch(i) {
	case 0:
		r = this1[2];
		g = t;
		b = p;
		break;
	case 1:
		r = q;
		g = this1[2];
		b = p;
		break;
	case 2:
		r = p;
		g = this1[2];
		b = t;
		break;
	case 3:
		r = p;
		g = q;
		b = this1[2];
		break;
	case 4:
		r = t;
		g = p;
		b = this1[2];
		break;
	default:
		r = this1[2];
		g = p;
		b = q;
	}
	var this3 = [r,g,b];
	return this3;
};
thx_color__$Hsv_Hsv_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.get_hue = function(this1) {
	return this1[0];
};
thx_color__$Hsv_Hsv_$Impl_$.get_saturation = function(this1) {
	return this1[1];
};
thx_color__$Hsv_Hsv_$Impl_$.get_value = function(this1) {
	return this1[2];
};
var thx_color__$Hsva_Hsva_$Impl_$ = {};
thx_color__$Hsva_Hsva_$Impl_$.__name__ = ["thx","color","_Hsva","Hsva_Impl_"];
thx_color__$Hsva_Hsva_$Impl_$.create = function(hue,saturation,value,alpha) {
	var this1 = [hue,saturation,value,alpha];
	return this1;
};
thx_color__$Hsva_Hsva_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,4);
	var this1 = [arr[0],arr[1],arr[2],arr[3]];
	return this1;
};
thx_color__$Hsva_Hsva_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		switch(_g) {
		case "hsv":
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return thx_color__$Hsv_Hsv_$Impl_$.toHsva(this1);
		case "hsva":
			var this2 = thx_color_parse_ColorParser.getFloatChannels(info.channels,4,false);
			return this2;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Hsva_Hsva_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Hsva_Hsva_$Impl_$.analogous = function(this1,spread) {
	if(spread == null) {
		spread = 30.0;
	}
	var this2 = { _0 : thx_color__$Hsva_Hsva_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsva_Hsva_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.complement = function(this1) {
	return thx_color__$Hsva_Hsva_$Impl_$.rotate(this1,180);
};
thx_color__$Hsva_Hsva_$Impl_$.normalize = function(this1) {
	var hue = thx_Floats.wrapCircular(this1[0],360);
	var this2;
	var v = this1[1];
	var v1 = this1[2];
	var v2 = this1[3];
	this2 = [hue,v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.transparent = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Floats.interpolate(t,this1[3],0)];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.opaque = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Floats.interpolate(t,this1[3],1)];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngle(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2]),thx_Floats.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.interpolateWidest = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngleWidest(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2]),thx_Floats.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.rotate = function(this1,angle) {
	var this2 = [this1[0] + angle,this1[1],this1[2],this1[3]];
	return thx_color__$Hsva_Hsva_$Impl_$.normalize(this2);
};
thx_color__$Hsva_Hsva_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals),thx_Floats.roundTo(this1[3],decimals)];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.split = function(this1,spread) {
	if(spread == null) {
		spread = 150.0;
	}
	var this2 = { _0 : thx_color__$Hsva_Hsva_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsva_Hsva_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.withAlpha = function(this1,newalpha) {
	var this2 = [this1[0],this1[1],this1[2],newalpha];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.withHue = function(this1,newhue) {
	var this2 = [newhue,this1[1],this1[2],this1[3]];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.withLightness = function(this1,newvalue) {
	var this2 = [this1[0],this1[1],newvalue,this1[3]];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.withSaturation = function(this1,newsaturation) {
	var this2 = [this1[0],newsaturation,this1[2],this1[3]];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.toString = function(this1) {
	return "hsva(" + this1[0] + "," + this1[1] * 100 + "%," + this1[2] * 100 + "%," + this1[3] + ")";
};
thx_color__$Hsva_Hsva_$Impl_$.equals = function(this1,other) {
	return thx_color__$Hsva_Hsva_$Impl_$.nearEquals(this1,other);
};
thx_color__$Hsva_Hsva_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(Math.abs(thx_Floats.angleDifference(this1[0],other[0],360.0)) <= tolerance && thx_Floats.nearEquals(this1[1],other[1],tolerance) && thx_Floats.nearEquals(this1[2],other[2],tolerance)) {
		return thx_Floats.nearEquals(this1[3],other[3],tolerance);
	} else {
		return false;
	}
};
thx_color__$Hsva_Hsva_$Impl_$.toHsv = function(this1) {
	var this2 = this1.slice(0,3);
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.toHsla = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsla(thx_color__$Hsva_Hsva_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsva_Hsva_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgb(thx_color__$Hsva_Hsva_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsva_Hsva_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Hsva_Hsva_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsva_Hsva_$Impl_$.toRgbxa = function(this1) {
	if(this1[1] == 0) {
		var this2 = [this1[2],this1[2],this1[2],this1[3]];
		return this2;
	}
	var r;
	var g;
	var b;
	var i;
	var f;
	var p;
	var q;
	var t;
	var h = this1[0] / 60;
	i = Math.floor(h);
	f = h - i;
	p = this1[2] * (1 - this1[1]);
	q = this1[2] * (1 - f * this1[1]);
	t = this1[2] * (1 - (1 - f) * this1[1]);
	switch(i) {
	case 0:
		r = this1[2];
		g = t;
		b = p;
		break;
	case 1:
		r = q;
		g = this1[2];
		b = p;
		break;
	case 2:
		r = p;
		g = this1[2];
		b = t;
		break;
	case 3:
		r = p;
		g = q;
		b = this1[2];
		break;
	case 4:
		r = t;
		g = p;
		b = this1[2];
		break;
	default:
		r = this1[2];
		g = p;
		b = q;
	}
	var this3 = [r,g,b,this1[3]];
	return this3;
};
thx_color__$Hsva_Hsva_$Impl_$.get_hue = function(this1) {
	return this1[0];
};
thx_color__$Hsva_Hsva_$Impl_$.get_saturation = function(this1) {
	return this1[1];
};
thx_color__$Hsva_Hsva_$Impl_$.get_value = function(this1) {
	return this1[2];
};
thx_color__$Hsva_Hsva_$Impl_$.get_alpha = function(this1) {
	return this1[3];
};
var thx_color__$HunterLab_HunterLab_$Impl_$ = {};
thx_color__$HunterLab_HunterLab_$Impl_$.__name__ = ["thx","color","_HunterLab","HunterLab_Impl_"];
thx_color__$HunterLab_HunterLab_$Impl_$.create = function(l,a,b) {
	var this1 = [l,a,b];
	return this1;
};
thx_color__$HunterLab_HunterLab_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$HunterLab_HunterLab_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		if(_g == "hunterlab") {
			return thx_color__$HunterLab_HunterLab_$Impl_$.fromFloats(thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false));
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$HunterLab_HunterLab_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$HunterLab_HunterLab_$Impl_$.distance = function(this1,other) {
	return (this1[0] - other[0]) * (this1[0] - other[0]) + (this1[1] - other[1]) * (this1[1] - other[1]) + (this1[2] - other[2]) * (this1[2] - other[2]);
};
thx_color__$HunterLab_HunterLab_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.match = function(this1,palette) {
	var it = palette;
	if(null == it) {
		throw new thx_error_NullArgument("Iterable argument \"this\" cannot be null",{ fileName : "NullArgument.hx", lineNumber : 73, className : "thx.color._HunterLab.HunterLab_Impl_", methodName : "match"});
	} else if(!$iterator(it)().hasNext()) {
		throw new thx_error_NullArgument("Iterable argument \"this\" cannot be empty",{ fileName : "NullArgument.hx", lineNumber : 75, className : "thx.color._HunterLab.HunterLab_Impl_", methodName : "match"});
	}
	var dist = Infinity;
	var closest = null;
	var color = $iterator(palette)();
	while(color.hasNext()) {
		var color1 = color.next();
		var ndist = thx_color__$HunterLab_HunterLab_$Impl_$.distance(this1,color1);
		if(ndist < dist) {
			dist = ndist;
			closest = color1;
		}
	}
	return closest;
};
thx_color__$HunterLab_HunterLab_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.equals = function(this1,other) {
	return thx_color__$HunterLab_HunterLab_$Impl_$.nearEquals(this1,other);
};
thx_color__$HunterLab_HunterLab_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$HunterLab_HunterLab_$Impl_$.withL = function(this1,newl) {
	var this2 = [newl,this1[1],this1[2]];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.withA = function(this1,newa) {
	var this2 = [this1[0],newa,this1[2]];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.withB = function(this1,newb) {
	var this2 = [this1[0],this1[1],newb];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.toString = function(this1) {
	return "hunterlab(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$HunterLab_HunterLab_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$HunterLab_HunterLab_$Impl_$.toXyz(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$HunterLab_HunterLab_$Impl_$.toLab(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1),1);
};
thx_color__$HunterLab_HunterLab_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbxa(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbxa(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toRgbx(thx_color__$HunterLab_HunterLab_$Impl_$.toXyz(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toXyz = function(this1) {
	var x = this1[1] / 17.5 * (this1[0] / 10.0);
	var l10 = this1[0] / 10.0;
	var y = l10 * l10;
	var z = this1[2] / 7.0 * (this1[0] / 10.0);
	var this2 = [(x + y) / 1.02,y,-(z - y) / 0.847];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toYxy = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toYxy(thx_color__$HunterLab_HunterLab_$Impl_$.toXyz(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.get_l = function(this1) {
	return this1[0];
};
thx_color__$HunterLab_HunterLab_$Impl_$.get_a = function(this1) {
	return this1[1];
};
thx_color__$HunterLab_HunterLab_$Impl_$.get_b = function(this1) {
	return this1[2];
};
var thx_color__$LCh_LCh_$Impl_$ = {};
thx_color__$LCh_LCh_$Impl_$.__name__ = ["thx","color","_LCh","LCh_Impl_"];
thx_color__$LCh_LCh_$Impl_$.create = function(lightness,chroma,hue) {
	var this1 = [lightness,chroma,hue];
	return this1;
};
thx_color__$LCh_LCh_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$LCh_LCh_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		switch(_g) {
		case "hcl":
			var c = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			var this1 = [c[2],c[1],c[0]];
			return this1;
		case "cielch":case "lch":
			var this2 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this2;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$LCh_LCh_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$LCh_LCh_$Impl_$.analogous = function(this1,spread) {
	if(spread == null) {
		spread = 30.0;
	}
	var this2 = { _0 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,-spread), _1 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.complement = function(this1) {
	return thx_color__$LCh_LCh_$Impl_$.rotate(this1,180);
};
thx_color__$LCh_LCh_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolateAngle(t,this1[2],other[2],360)];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.interpolateWidest = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolateAngleWidest(t,this1[2],other[2],360)];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.normalize = function(this1) {
	var hue = thx_Floats.wrapCircular(this1[2],360);
	var this2;
	var v = this1[0];
	var v1 = this1[1];
	this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,hue];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.rotate = function(this1,angle) {
	return thx_color__$LCh_LCh_$Impl_$.normalize(thx_color__$LCh_LCh_$Impl_$.withHue(this1,this1[2] + angle));
};
thx_color__$LCh_LCh_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.split = function(this1,spread) {
	if(spread == null) {
		spread = 144.0;
	}
	var this2 = { _0 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,-spread), _1 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.square = function(this1) {
	return thx_color__$LCh_LCh_$Impl_$.tetrad(this1,90);
};
thx_color__$LCh_LCh_$Impl_$.tetrad = function(this1,angle) {
	var this2 = { _0 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,0), _1 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,angle), _2 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,180), _3 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,180 + angle)};
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.triad = function(this1) {
	var this2 = { _0 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,-120), _1 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,0), _2 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,120)};
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.withLightness = function(this1,newlightness) {
	var this2 = [newlightness,this1[1],this1[2]];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.withChroma = function(this1,newchroma) {
	var this2 = [this1[0],newchroma,this1[2]];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.withHue = function(this1,newhue) {
	var this2 = [this1[0],this1[1],newhue];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.equals = function(this1,other) {
	return thx_color__$LCh_LCh_$Impl_$.nearEquals(this1,other);
};
thx_color__$LCh_LCh_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(Math.abs(thx_Floats.angleDifference(this1[0],other[0],360.0)) <= tolerance && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$LCh_LCh_$Impl_$.toString = function(this1) {
	return "lch(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$LCh_LCh_$Impl_$.toHclString = function(this1) {
	return "hcl(" + this1[2] + "," + this1[1] + "," + this1[0] + ")";
};
thx_color__$LCh_LCh_$Impl_$.toLab = function(this1) {
	var hradi = this1[2] * (Math.PI / 180);
	var a = Math.cos(hradi) * this1[1];
	var b = Math.sin(hradi) * this1[1];
	var this2 = [this1[0],a,b];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1),1);
};
thx_color__$LCh_LCh_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$LCh_LCh_$Impl_$.toXyz(this1));
};
thx_color__$LCh_LCh_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$LCh_LCh_$Impl_$.toRgbxa(this1));
};
thx_color__$LCh_LCh_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$LCh_LCh_$Impl_$.toRgbxa(this1));
};
thx_color__$LCh_LCh_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toRgbx(thx_color__$LCh_LCh_$Impl_$.toLab(this1));
};
thx_color__$LCh_LCh_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toXyz = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toXyz(thx_color__$LCh_LCh_$Impl_$.toLab(this1));
};
thx_color__$LCh_LCh_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toYxy = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toYxy(thx_color__$LCh_LCh_$Impl_$.toLab(this1));
};
thx_color__$LCh_LCh_$Impl_$.get_lightness = function(this1) {
	return this1[0];
};
thx_color__$LCh_LCh_$Impl_$.get_chroma = function(this1) {
	return this1[1];
};
thx_color__$LCh_LCh_$Impl_$.get_hue = function(this1) {
	return this1[2];
};
var thx_color__$Lab_Lab_$Impl_$ = {};
thx_color__$Lab_Lab_$Impl_$.__name__ = ["thx","color","_Lab","Lab_Impl_"];
thx_color__$Lab_Lab_$Impl_$.create = function(l,a,b) {
	var this1 = [l,a,b];
	return this1;
};
thx_color__$Lab_Lab_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Lab_Lab_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		switch(_g) {
		case "cielab":case "l*a*b*":case "lab":
			return thx_color__$Lab_Lab_$Impl_$.fromFloats(thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false));
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Lab_Lab_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Lab_Lab_$Impl_$.distance = function(this1,other) {
	return (this1[0] - other[0]) * (this1[0] - other[0]) + (this1[1] - other[1]) * (this1[1] - other[1]) + (this1[2] - other[2]) * (this1[2] - other[2]);
};
thx_color__$Lab_Lab_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.match = function(this1,palette) {
	var it = palette;
	if(null == it) {
		throw new thx_error_NullArgument("Iterable argument \"this\" cannot be null",{ fileName : "NullArgument.hx", lineNumber : 73, className : "thx.color._Lab.Lab_Impl_", methodName : "match"});
	} else if(!$iterator(it)().hasNext()) {
		throw new thx_error_NullArgument("Iterable argument \"this\" cannot be empty",{ fileName : "NullArgument.hx", lineNumber : 75, className : "thx.color._Lab.Lab_Impl_", methodName : "match"});
	}
	var dist = Infinity;
	var closest = null;
	var color = $iterator(palette)();
	while(color.hasNext()) {
		var color1 = color.next();
		var ndist = thx_color__$Lab_Lab_$Impl_$.distance(this1,color1);
		if(ndist < dist) {
			dist = ndist;
			closest = color1;
		}
	}
	return closest;
};
thx_color__$Lab_Lab_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.equals = function(this1,other) {
	return thx_color__$Lab_Lab_$Impl_$.nearEquals(this1,other);
};
thx_color__$Lab_Lab_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Lab_Lab_$Impl_$.withL = function(this1,newl) {
	var this2 = [newl,this1[1],this1[2]];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.withA = function(this1,newa) {
	var this2 = [this1[0],newa,this1[2]];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.withB = function(this1,newb) {
	var this2 = [this1[0],this1[1],newb];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.toString = function(this1) {
	return "lab(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$Lab_Lab_$Impl_$.toLCh = function(this1) {
	var h = Math.atan2(this1[2],this1[1]) * 180 / Math.PI;
	var c = Math.sqrt(this1[1] * this1[1] + this1[2] * this1[2]);
	var this2 = [this1[0],c,h];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1),1);
};
thx_color__$Lab_Lab_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Lab_Lab_$Impl_$.toXyz(this1));
};
thx_color__$Lab_Lab_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Lab_Lab_$Impl_$.toRgbxa(this1));
};
thx_color__$Lab_Lab_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Lab_Lab_$Impl_$.toRgbxa(this1));
};
thx_color__$Lab_Lab_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toRgbx(thx_color__$Lab_Lab_$Impl_$.toXyz(this1));
};
thx_color__$Lab_Lab_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toXyz = function(this1) {
	var f = function(t) {
		if(t > 0.20689655172413793) {
			return Math.pow(t,3);
		} else {
			return 0.12841854934601665 * (t - 0.13793103448275862);
		}
	};
	var x = thx_color__$Xyz_Xyz_$Impl_$.whiteReference[0] * f(0.0086206896551724137 * (this1[0] + 16) + 0.002 * this1[1]);
	var y = thx_color__$Xyz_Xyz_$Impl_$.whiteReference[1] * f(0.0086206896551724137 * (this1[0] + 16));
	var z = thx_color__$Xyz_Xyz_$Impl_$.whiteReference[2] * f(0.0086206896551724137 * (this1[0] + 16) - 0.005 * this1[2]);
	var this2 = [x,y,z];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toYxy = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toYxy(thx_color__$Lab_Lab_$Impl_$.toXyz(this1));
};
thx_color__$Lab_Lab_$Impl_$.get_l = function(this1) {
	return this1[0];
};
thx_color__$Lab_Lab_$Impl_$.get_a = function(this1) {
	return this1[1];
};
thx_color__$Lab_Lab_$Impl_$.get_b = function(this1) {
	return this1[2];
};
var thx_color__$Luv_Luv_$Impl_$ = {};
thx_color__$Luv_Luv_$Impl_$.__name__ = ["thx","color","_Luv","Luv_Impl_"];
thx_color__$Luv_Luv_$Impl_$.create = function(l,u,v) {
	var this1 = [l,u,v];
	return this1;
};
thx_color__$Luv_Luv_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Luv_Luv_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		switch(_g) {
		case "cieluv":case "luv":
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Luv_Luv_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Luv_Luv_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.normalize = function(this1) {
	var this2;
	var v = this1[0];
	var v1 = this1[1];
	var min = -0.436;
	var v2 = this1[2];
	var min1 = -0.615;
	this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < min ? min : v1 > 0.436 ? 0.436 : v1,v2 < min1 ? min1 : v2 > 0.615 ? 0.615 : v2];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.withY = function(this1,newy) {
	var this2 = [newy,this1[1],this1[2]];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.withU = function(this1,newu) {
	var this2 = [this1[0],newu,this1[2]];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.withV = function(this1,newv) {
	var this2 = [this1[0],this1[1],newv];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.toString = function(this1) {
	return "cieluv(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$Luv_Luv_$Impl_$.equals = function(this1,other) {
	return thx_color__$Luv_Luv_$Impl_$.nearEquals(this1,other);
};
thx_color__$Luv_Luv_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Luv_Luv_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Luv_Luv_$Impl_$.toXyz(this1));
};
thx_color__$Luv_Luv_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Luv_Luv_$Impl_$.toLab(this1));
};
thx_color__$Luv_Luv_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1),1);
};
thx_color__$Luv_Luv_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Luv_Luv_$Impl_$.toXyz(this1));
};
thx_color__$Luv_Luv_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Luv_Luv_$Impl_$.toRgbxa(this1));
};
thx_color__$Luv_Luv_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Luv_Luv_$Impl_$.toRgbxa(this1));
};
thx_color__$Luv_Luv_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toRgbx(thx_color__$Luv_Luv_$Impl_$.toXyz(this1));
};
thx_color__$Luv_Luv_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toXyz = function(this1) {
	var l = this1[0] * 100;
	var u = this1[1] * 100;
	var v = this1[2] * 100;
	var x = 9 * u / (9 * u - 16 * v + 12);
	var y = 4 * v / (9 * u - 16 * v + 12);
	var uPrime = (l == 0 ? 0 : u / (13 * l)) + thx_color__$Xyz_Xyz_$Impl_$.get_u(thx_color__$Xyz_Xyz_$Impl_$.whiteReference) * 100;
	var vPrime = (l == 0 ? 0 : v / (13 * l)) + thx_color__$Xyz_Xyz_$Impl_$.get_v(thx_color__$Xyz_Xyz_$Impl_$.whiteReference) * 100;
	var Y = l > 8 ? thx_color__$Xyz_Xyz_$Impl_$.whiteReference[1] * 100 * Math.pow((l + 16) / 116,3) : thx_color__$Xyz_Xyz_$Impl_$.whiteReference[1] * 100 * l * Math.pow(0.10344827586206896,3);
	var X = Y * 9 * uPrime / (4 * vPrime);
	var Z = Y * (12 - 3 * uPrime - 20 * vPrime) / (4 * vPrime);
	var this2 = [X / 100,Y / 100,Z / 100];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.get_l = function(this1) {
	return this1[0];
};
thx_color__$Luv_Luv_$Impl_$.get_u = function(this1) {
	return this1[1];
};
thx_color__$Luv_Luv_$Impl_$.get_v = function(this1) {
	return this1[2];
};
var thx_color__$Rgb_Rgb_$Impl_$ = {};
thx_color__$Rgb_Rgb_$Impl_$.__name__ = ["thx","color","_Rgb","Rgb_Impl_"];
thx_color__$Rgb_Rgb_$Impl_$.create = function(red,green,blue) {
	var this1 = (red & 255) << 16 | (green & 255) << 8 | blue & 255;
	return this1;
};
thx_color__$Rgb_Rgb_$Impl_$.createf = function(red,green,blue) {
	var this1 = (Math.round(red * 255) & 255) << 16 | (Math.round(green * 255) & 255) << 8 | Math.round(blue * 255) & 255;
	return this1;
};
thx_color__$Rgb_Rgb_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseHex(color);
	if(null == info) {
		info = thx_color_parse_ColorParser.parseColor(color);
	}
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		if(_g == "rgb") {
			return thx_color__$Rgb_Rgb_$Impl_$.fromInts(thx_color_parse_ColorParser.getInt8Channels(info.channels,3));
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Rgb_Rgb_$Impl_$.fromInts = function(arr) {
	arr = thx_ArrayInts.resized(arr,3);
	var this1 = (arr[0] & 255) << 16 | (arr[1] & 255) << 8 | arr[2] & 255;
	return this1;
};
thx_color__$Rgb_Rgb_$Impl_$._new = function(rgb) {
	var this1 = rgb;
	return this1;
};
thx_color__$Rgb_Rgb_$Impl_$.darker = function(this1,t) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Rgbx_Rgbx_$Impl_$.darker(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1),t));
};
thx_color__$Rgb_Rgb_$Impl_$.lighter = function(this1,t) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Rgbx_Rgbx_$Impl_$.lighter(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1),t));
};
thx_color__$Rgb_Rgb_$Impl_$.interpolate = function(this1,other,t) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Rgbx_Rgbx_$Impl_$.interpolate(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1),thx_color__$Rgb_Rgb_$Impl_$.toRgbx(other),t));
};
thx_color__$Rgb_Rgb_$Impl_$.min = function(this1,other) {
	var a = thx_color__$Rgb_Rgb_$Impl_$.get_red(this1);
	var b = thx_color__$Rgb_Rgb_$Impl_$.get_red(other);
	var a1 = thx_color__$Rgb_Rgb_$Impl_$.get_green(this1);
	var b1 = thx_color__$Rgb_Rgb_$Impl_$.get_green(other);
	var a2 = thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1);
	var b2 = thx_color__$Rgb_Rgb_$Impl_$.get_blue(other);
	var this2 = ((a < b ? a : b) & 255) << 16 | ((a1 < b1 ? a1 : b1) & 255) << 8 | (a2 < b2 ? a2 : b2) & 255;
	return this2;
};
thx_color__$Rgb_Rgb_$Impl_$.max = function(this1,other) {
	var a = thx_color__$Rgb_Rgb_$Impl_$.get_red(this1);
	var b = thx_color__$Rgb_Rgb_$Impl_$.get_red(other);
	var a1 = thx_color__$Rgb_Rgb_$Impl_$.get_green(this1);
	var b1 = thx_color__$Rgb_Rgb_$Impl_$.get_green(other);
	var a2 = thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1);
	var b2 = thx_color__$Rgb_Rgb_$Impl_$.get_blue(other);
	var this2 = ((a > b ? a : b) & 255) << 16 | ((a1 > b1 ? a1 : b1) & 255) << 8 | (a2 > b2 ? a2 : b2) & 255;
	return this2;
};
thx_color__$Rgb_Rgb_$Impl_$.withAlpha = function(this1,alpha) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([thx_color__$Rgb_Rgb_$Impl_$.get_red(this1),thx_color__$Rgb_Rgb_$Impl_$.get_green(this1),thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1),alpha]);
};
thx_color__$Rgb_Rgb_$Impl_$.withAlphaf = function(this1,newalpha) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([thx_color__$Rgb_Rgb_$Impl_$.get_red(this1),thx_color__$Rgb_Rgb_$Impl_$.get_green(this1),thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1),Math.round(255 * newalpha)]);
};
thx_color__$Rgb_Rgb_$Impl_$.withRed = function(this1,newred) {
	return thx_color__$Rgb_Rgb_$Impl_$.fromInts([newred,thx_color__$Rgb_Rgb_$Impl_$.get_green(this1),thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1)]);
};
thx_color__$Rgb_Rgb_$Impl_$.withGreen = function(this1,newgreen) {
	return thx_color__$Rgb_Rgb_$Impl_$.fromInts([thx_color__$Rgb_Rgb_$Impl_$.get_red(this1),newgreen,thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1)]);
};
thx_color__$Rgb_Rgb_$Impl_$.withBlue = function(this1,newblue) {
	return thx_color__$Rgb_Rgb_$Impl_$.fromInts([thx_color__$Rgb_Rgb_$Impl_$.get_red(this1),thx_color__$Rgb_Rgb_$Impl_$.get_green(this1),newblue]);
};
thx_color__$Rgb_Rgb_$Impl_$.toCss3 = function(this1) {
	return "rgb(" + thx_color__$Rgb_Rgb_$Impl_$.get_red(this1) + "," + thx_color__$Rgb_Rgb_$Impl_$.get_green(this1) + "," + thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1) + ")";
};
thx_color__$Rgb_Rgb_$Impl_$.toString = function(this1) {
	return thx_color__$Rgb_Rgb_$Impl_$.toHex(this1);
};
thx_color__$Rgb_Rgb_$Impl_$.toHex = function(this1,prefix) {
	if(prefix == null) {
		prefix = "#";
	}
	return "" + prefix + StringTools.hex(thx_color__$Rgb_Rgb_$Impl_$.get_red(this1),2) + StringTools.hex(thx_color__$Rgb_Rgb_$Impl_$.get_green(this1),2) + StringTools.hex(thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1),2);
};
thx_color__$Rgb_Rgb_$Impl_$.equals = function(this1,other) {
	if(thx_color__$Rgb_Rgb_$Impl_$.get_red(this1) == thx_color__$Rgb_Rgb_$Impl_$.get_red(other) && thx_color__$Rgb_Rgb_$Impl_$.get_green(this1) == thx_color__$Rgb_Rgb_$Impl_$.get_green(other)) {
		return thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1) == thx_color__$Rgb_Rgb_$Impl_$.get_blue(other);
	} else {
		return false;
	}
};
thx_color__$Rgb_Rgb_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Rgb_Rgb_$Impl_$.toXyz(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Rgb_Rgb_$Impl_$.toLab(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1),1);
};
thx_color__$Rgb_Rgb_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Rgb_Rgb_$Impl_$.toXyz(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.fromInts([thx_color__$Rgb_Rgb_$Impl_$.get_red(this1),thx_color__$Rgb_Rgb_$Impl_$.get_green(this1),thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1)]);
};
thx_color__$Rgb_Rgb_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgb_Rgb_$Impl_$.withAlpha(this1,255);
};
thx_color__$Rgb_Rgb_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgba_Rgba_$Impl_$.toArgb(thx_color__$Rgb_Rgb_$Impl_$.toRgba(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(thx_color__$Rgb_Rgb_$Impl_$.toRgba(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toInt = function(this1) {
	return this1;
};
thx_color__$Rgb_Rgb_$Impl_$.get_red = function(this1) {
	return this1 >> 16 & 255;
};
thx_color__$Rgb_Rgb_$Impl_$.get_green = function(this1) {
	return this1 >> 8 & 255;
};
thx_color__$Rgb_Rgb_$Impl_$.get_blue = function(this1) {
	return this1 & 255;
};
var thx_color__$Rgba_Rgba_$Impl_$ = {};
thx_color__$Rgba_Rgba_$Impl_$.__name__ = ["thx","color","_Rgba","Rgba_Impl_"];
thx_color__$Rgba_Rgba_$Impl_$.create = function(red,green,blue,alpha) {
	return (red & 255) << 24 | (green & 255) << 16 | (blue & 255) << 8 | alpha & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.fromFloats = function(arr) {
	var ints = thx_ArrayFloats.resized(arr,4).map(function(_) {
		return Math.round(_ * 255);
	});
	return (ints[0] & 255) << 24 | (ints[1] & 255) << 16 | (ints[2] & 255) << 8 | ints[3] & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.fromInt = function(rgba) {
	return rgba;
};
thx_color__$Rgba_Rgba_$Impl_$.fromInts = function(arr) {
	arr = thx_ArrayInts.resized(arr,4);
	return (arr[0] & 255) << 24 | (arr[1] & 255) << 16 | (arr[2] & 255) << 8 | arr[3] & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseHex(color);
	if(null == info) {
		info = thx_color_parse_ColorParser.parseColor(color);
	}
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		switch(_g) {
		case "rgb":
			return thx_color__$Rgb_Rgb_$Impl_$.toRgba(thx_color__$Rgb_Rgb_$Impl_$.fromInts(thx_color_parse_ColorParser.getInt8Channels(info.channels,3)));
		case "rgba":
			return (thx_color_parse_ColorParser.getInt8Channel(info.channels[0]) & 255) << 24 | (thx_color_parse_ColorParser.getInt8Channel(info.channels[1]) & 255) << 16 | (thx_color_parse_ColorParser.getInt8Channel(info.channels[2]) & 255) << 8 | Math.round(thx_color_parse_ColorParser.getFloatChannel(info.channels[3]) * 255) & 255;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Rgba_Rgba_$Impl_$._new = function(rgba) {
	var this1 = rgba;
	return this1;
};
thx_color__$Rgba_Rgba_$Impl_$.combineColor = function(this1,other) {
	var a = (this1 & 255) / 255;
	return thx_color__$Rgb_Rgb_$Impl_$.fromInts([Math.round((1 - a) * thx_color__$Rgb_Rgb_$Impl_$.get_red(other) + a * (this1 >> 24 & 255)),Math.round((1 - a) * thx_color__$Rgb_Rgb_$Impl_$.get_green(other) + a * (this1 >> 16 & 255)),Math.round((1 - a) * thx_color__$Rgb_Rgb_$Impl_$.get_blue(other) + a * (this1 >> 8 & 255))]);
};
thx_color__$Rgba_Rgba_$Impl_$.darker = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Rgbxa_Rgbxa_$Impl_$.darker(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Rgba_Rgba_$Impl_$.lighter = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Rgbxa_Rgbxa_$Impl_$.lighter(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Rgba_Rgba_$Impl_$.transparent = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Rgbxa_Rgbxa_$Impl_$.transparent(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Rgba_Rgba_$Impl_$.opaque = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Rgbxa_Rgbxa_$Impl_$.opaque(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Rgba_Rgba_$Impl_$.interpolate = function(this1,other,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Rgbxa_Rgbxa_$Impl_$.interpolate(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1),thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(other),t));
};
thx_color__$Rgba_Rgba_$Impl_$.withAlpha = function(this1,newalpha) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([this1 >> 24 & 255,this1 >> 16 & 255,this1 >> 8 & 255,newalpha]);
};
thx_color__$Rgba_Rgba_$Impl_$.withAlphaf = function(this1,newalpha) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([this1 >> 24 & 255,this1 >> 16 & 255,this1 >> 8 & 255,Math.round(255 * newalpha)]);
};
thx_color__$Rgba_Rgba_$Impl_$.withRed = function(this1,newred) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([newred,this1 >> 16 & 255,this1 >> 8 & 255,this1 & 255]);
};
thx_color__$Rgba_Rgba_$Impl_$.withGreen = function(this1,newgreen) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([this1 >> 24 & 255,newgreen,this1 >> 8 & 255,this1 & 255]);
};
thx_color__$Rgba_Rgba_$Impl_$.withBlue = function(this1,newblue) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([this1 >> 24 & 255,this1 >> 16 & 255,newblue,this1 & 255]);
};
thx_color__$Rgba_Rgba_$Impl_$.toHsla = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsla(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1));
};
thx_color__$Rgba_Rgba_$Impl_$.toHsva = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsva(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1));
};
thx_color__$Rgba_Rgba_$Impl_$.toRgb = function(this1) {
	var this2 = (this1 >> 24 & 255 & 255) << 16 | (this1 >> 16 & 255 & 255) << 8 | this1 >> 8 & 255 & 255;
	return this2;
};
thx_color__$Rgba_Rgba_$Impl_$.toArgb = function(this1) {
	return (this1 & 255 & 255) << 24 | (this1 >> 24 & 255 & 255) << 16 | (this1 >> 16 & 255 & 255) << 8 | this1 >> 8 & 255 & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.fromInts([this1 >> 24 & 255,this1 >> 16 & 255,this1 >> 8 & 255]);
};
thx_color__$Rgba_Rgba_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.fromInts([this1 >> 24 & 255,this1 >> 16 & 255,this1 >> 8 & 255,this1 & 255]);
};
thx_color__$Rgba_Rgba_$Impl_$.toCss3 = function(this1) {
	return "rgba(" + (this1 >> 24 & 255) + "," + (this1 >> 16 & 255) + "," + (this1 >> 8 & 255) + "," + (this1 & 255) / 255 + ")";
};
thx_color__$Rgba_Rgba_$Impl_$.toString = function(this1) {
	return thx_color__$Rgba_Rgba_$Impl_$.toCss3(this1);
};
thx_color__$Rgba_Rgba_$Impl_$.toHex = function(this1,prefix) {
	if(prefix == null) {
		prefix = "#";
	}
	return "" + prefix + StringTools.hex(this1 >> 24 & 255,2) + StringTools.hex(this1 >> 16 & 255,2) + StringTools.hex(this1 >> 8 & 255,2) + StringTools.hex(this1 & 255,2);
};
thx_color__$Rgba_Rgba_$Impl_$.equals = function(this1,other) {
	if((this1 >> 24 & 255) == (other >> 24 & 255) && (this1 & 255) == (other & 255) && (this1 >> 16 & 255) == (other >> 16 & 255)) {
		return (this1 >> 8 & 255) == (other >> 8 & 255);
	} else {
		return false;
	}
};
thx_color__$Rgba_Rgba_$Impl_$.toInt = function(this1) {
	return this1;
};
thx_color__$Rgba_Rgba_$Impl_$.get_alpha = function(this1) {
	return this1 & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.get_red = function(this1) {
	return this1 >> 24 & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.get_green = function(this1) {
	return this1 >> 16 & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.get_blue = function(this1) {
	return this1 >> 8 & 255;
};
var thx_color__$Rgbx_Rgbx_$Impl_$ = {};
thx_color__$Rgbx_Rgbx_$Impl_$.__name__ = ["thx","color","_Rgbx","Rgbx_Impl_"];
thx_color__$Rgbx_Rgbx_$Impl_$.create = function(red,green,blue) {
	var this1 = [red,green,blue];
	return this1;
};
thx_color__$Rgbx_Rgbx_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Rgbx_Rgbx_$Impl_$.fromInts = function(arr) {
	arr = thx_ArrayInts.resized(arr,3);
	var this1 = [arr[0] / 255.0,arr[1] / 255.0,arr[2] / 255.0];
	return this1;
};
thx_color__$Rgbx_Rgbx_$Impl_$.fromInt = function(value) {
	var rgb = value;
	var this1 = [thx_color__$Rgb_Rgb_$Impl_$.get_red(rgb) / 255,thx_color__$Rgb_Rgb_$Impl_$.get_green(rgb) / 255,thx_color__$Rgb_Rgb_$Impl_$.get_blue(rgb) / 255];
	return this1;
};
thx_color__$Rgbx_Rgbx_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseHex(color);
	if(null == info) {
		info = thx_color_parse_ColorParser.parseColor(color);
	}
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		if(_g == "rgb") {
			return thx_color__$Rgbx_Rgbx_$Impl_$.fromFloats(thx_color_parse_ColorParser.getFloatChannels(info.channels,3,true));
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Rgbx_Rgbx_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Rgbx_Rgbx_$Impl_$.darker = function(this1,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],0),thx_Floats.interpolate(t,this1[1],0),thx_Floats.interpolate(t,this1[2],0)];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.lighter = function(this1,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],1),thx_Floats.interpolate(t,this1[1],1),thx_Floats.interpolate(t,this1[2],1)];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.normalize = function(this1) {
	var this2;
	var v = this1[0];
	var v1 = this1[1];
	var v2 = this1[2];
	this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toCss3 = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toString(this1);
};
thx_color__$Rgbx_Rgbx_$Impl_$.toString = function(this1) {
	return "rgb(" + this1[0] * 100 + "%," + this1[1] * 100 + "%," + this1[2] * 100 + "%)";
};
thx_color__$Rgbx_Rgbx_$Impl_$.toHex = function(this1,prefix) {
	if(prefix == null) {
		prefix = "#";
	}
	return "" + prefix + StringTools.hex(thx_color__$Rgbx_Rgbx_$Impl_$.get_red(this1),2) + StringTools.hex(thx_color__$Rgbx_Rgbx_$Impl_$.get_green(this1),2) + StringTools.hex(thx_color__$Rgbx_Rgbx_$Impl_$.get_blue(this1),2);
};
thx_color__$Rgbx_Rgbx_$Impl_$.equals = function(this1,other) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.nearEquals(this1,other);
};
thx_color__$Rgbx_Rgbx_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Rgbx_Rgbx_$Impl_$.withAlpha = function(this1,alpha) {
	var this2 = this1.concat([alpha]);
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.withRed = function(this1,newred) {
	var this2 = [newred,thx_color__$Rgbx_Rgbx_$Impl_$.get_green(this1),thx_color__$Rgbx_Rgbx_$Impl_$.get_blue(this1)];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.withGreen = function(this1,newgreen) {
	var this2 = [thx_color__$Rgbx_Rgbx_$Impl_$.get_red(this1),newgreen,thx_color__$Rgbx_Rgbx_$Impl_$.get_blue(this1)];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.withBlue = function(this1,newblue) {
	var this2 = [thx_color__$Rgbx_Rgbx_$Impl_$.get_red(this1),thx_color__$Rgbx_Rgbx_$Impl_$.get_green(this1),newblue];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(this1));
};
thx_color__$Rgbx_Rgbx_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Rgbx_Rgbx_$Impl_$.toLab(this1));
};
thx_color__$Rgbx_Rgbx_$Impl_$.toLuv = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLuv(thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(this1));
};
thx_color__$Rgbx_Rgbx_$Impl_$.toCmy = function(this1) {
	var this2 = [1 - this1[0],1 - this1[1],1 - this1[2]];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk = function(this1) {
	var c = 0.0;
	var y = 0.0;
	var m = 0.0;
	var k;
	if(this1[0] + this1[1] + this1[2] == 0) {
		k = 1.0;
	} else {
		k = 1 - Math.max(Math.max(this1[0],this1[1]),this1[2]);
		c = (1 - this1[0] - k) / (1 - k);
		m = (1 - this1[1] - k) / (1 - k);
		y = (1 - this1[2] - k) / (1 - k);
	}
	var this2 = [c,m,y,k];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(this1,1);
};
thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma = function(this1,gamma) {
	var l = (-0.65576366679999987 * this1[2] + -1.7884503806 * this1[0] - 3.5172982438 * this1[1]) / -5.9615122912;
	var bl = this1[2] - l;
	var k = (1.97294 * (this1[1] - l) - -0.29227 * bl) / -0.90649;
	var lgamma = Math.pow(l,gamma);
	var s;
	try {
		s = Math.sqrt(k * k + bl * bl) / (1.97294 * lgamma * (1 - lgamma));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		s = 0.0;
	}
	var h;
	try {
		if(s != 0) {
			h = Math.atan2(k,bl) / Math.PI * 180 - 120;
		} else {
			h = NaN;
		}
	} catch( e1 ) {
		haxe_CallStack.lastException = e1;
		h = 0.0;
	}
	if(isNaN(s)) {
		s = 0;
	}
	if(isNaN(h)) {
		h = 0;
	}
	if(h < 0) {
		h += 360;
	}
	var this2 = [h,s,l,1];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toGrey = function(this1) {
	var this2 = this1[0] * .2126 + this1[1] * .7152 + this1[2] * .0722;
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toPerceivedGrey = function(this1) {
	var this2 = this1[0] * .299 + this1[1] * .587 + this1[2] * .114;
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toPerceivedAccurateGrey = function(this1) {
	var this2 = Math.pow(this1[0],2) * .241 + Math.pow(this1[1],2) * .691 + Math.pow(this1[2],2) * .068;
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toHsl = function(this1) {
	var min = Math.min(Math.min(this1[0],this1[1]),this1[2]);
	var max = Math.max(Math.max(this1[0],this1[1]),this1[2]);
	var delta = max - min;
	var h;
	var s;
	var l = (max + min) / 2;
	if(delta == 0.0) {
		h = 0.0;
		s = h;
	} else {
		if(l < 0.5) {
			s = delta / (max + min);
		} else {
			s = delta / (2 - max - min);
		}
		if(this1[0] == max) {
			h = (this1[1] - this1[2]) / delta + (this1[1] < thx_color__$Rgbx_Rgbx_$Impl_$.get_blue(this1) ? 6 : 0);
		} else if(this1[1] == max) {
			h = (this1[2] - this1[0]) / delta + 2;
		} else {
			h = (this1[0] - this1[1]) / delta + 4;
		}
		h *= 60;
	}
	var this2 = [h,s,l];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toHsv = function(this1) {
	var min = Math.min(Math.min(this1[0],this1[1]),this1[2]);
	var max = Math.max(Math.max(this1[0],this1[1]),this1[2]);
	var delta = max - min;
	var h;
	var s;
	var v = max;
	if(delta != 0) {
		s = delta / max;
	} else {
		s = 0;
		h = -1;
		var this2 = [h,s,v];
		return this2;
	}
	if(this1[0] == max) {
		h = (this1[1] - this1[2]) / delta;
	} else if(this1[1] == max) {
		h = 2 + (this1[2] - this1[0]) / delta;
	} else {
		h = 4 + (this1[0] - this1[1]) / delta;
	}
	h *= 60;
	if(h < 0) {
		h += 360;
	}
	var this3 = [h,s,v];
	return this3;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(this1));
};
thx_color__$Rgbx_Rgbx_$Impl_$.toRgb = function(this1) {
	var this2 = (Math.round(this1[0] * 255) & 255) << 16 | (Math.round(this1[1] * 255) & 255) << 8 | Math.round(this1[2] * 255) & 255;
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.withAlpha(this1,1.0);
};
thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature = function(this1) {
	var t = 0;
	var rgb;
	var epsilon = 0.4;
	var minT = 1000;
	var maxT = 40000;
	while(maxT - minT > epsilon) {
		t = (maxT + minT) / 2;
		rgb = thx_color__$Temperature_Temperature_$Impl_$.temperatureToRgbx(t);
		if(rgb[2] / rgb[0] >= this1[2] / this1[0]) {
			maxT = t;
		} else {
			minT = t;
		}
	}
	var this2 = t;
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toXyz = function(this1) {
	var r = this1[0];
	var g = this1[1];
	var b = this1[2];
	if(r > 0.04045) {
		r = Math.pow((r + 0.055) / 1.055,2.4);
	} else {
		r /= 12.92;
	}
	if(g > 0.04045) {
		g = Math.pow((g + 0.055) / 1.055,2.4);
	} else {
		g /= 12.92;
	}
	if(b > 0.04045) {
		b = Math.pow((b + 0.055) / 1.055,2.4);
	} else {
		b /= 12.92;
	}
	var this2 = [r * 0.4124564 + g * 0.3575761 + b * 0.1804375,r * 0.2126729 + g * 0.7151522 + b * 0.0721750,r * 0.0193339 + g * 0.1191920 + b * 0.9503041];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toYuv = function(this1) {
	var r = this1[0];
	var g = this1[1];
	var b = this1[2];
	var y = 0.299 * r + 0.587 * g + 0.114 * b;
	var u = -0.14713 * r - 0.28886 * g + 0.436 * b;
	var v = 0.615 * r - 0.51499 * g - 0.10001 * b;
	var this2 = [y,u,v];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toYxy = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toYxy(thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(this1));
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_red = function(this1) {
	return Math.round(this1[0] * 255);
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_green = function(this1) {
	return Math.round(this1[1] * 255);
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_blue = function(this1) {
	return Math.round(this1[2] * 255);
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_redf = function(this1) {
	return this1[0];
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_greenf = function(this1) {
	return this1[1];
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_bluef = function(this1) {
	return this1[2];
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_inSpace = function(this1) {
	if(this1[0] >= 0 && this1[0] <= 1 && this1[1] >= 0 && this1[1] <= 1 && this1[2] >= 0) {
		return this1[2] <= 1;
	} else {
		return false;
	}
};
var thx_color__$Rgbxa_Rgbxa_$Impl_$ = {};
thx_color__$Rgbxa_Rgbxa_$Impl_$.__name__ = ["thx","color","_Rgbxa","Rgbxa_Impl_"];
thx_color__$Rgbxa_Rgbxa_$Impl_$.create = function(red,green,blue,alpha) {
	var this1 = [red,green,blue,alpha];
	return this1;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,4);
	var this1 = [arr[0],arr[1],arr[2],arr[3]];
	return this1;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.fromInts = function(arr) {
	arr = thx_ArrayInts.resized(arr,4);
	var this1 = [arr[0] / 255.0,arr[1] / 255.0,arr[2] / 255.0,arr[3] / 255.0];
	return this1;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.fromInt = function(value) {
	var rgba = value;
	var this1 = [(rgba >> 24 & 255) / 255,(rgba >> 16 & 255) / 255,(rgba >> 8 & 255) / 255,(rgba & 255) / 255];
	return this1;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseHex(color);
	if(null == info) {
		info = thx_color_parse_ColorParser.parseColor(color);
	}
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		switch(_g) {
		case "rgb":
			return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Rgbx_Rgbx_$Impl_$.fromFloats(thx_color_parse_ColorParser.getFloatChannels(info.channels,3,true)));
		case "rgba":
			return thx_color__$Rgbxa_Rgbxa_$Impl_$.fromFloats(thx_color_parse_ColorParser.getFloatChannels(info.channels,4,true));
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Rgbxa_Rgbxa_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.combineColor = function(this1,other) {
	var this2 = [(1 - this1[3]) * other[0] + this1[3] * this1[0],(1 - this1[3]) * other[1] + this1[3] * this1[1],(1 - this1[3]) * other[2] + this1[3] * this1[2]];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.darker = function(this1,t) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.withAlpha(thx_color__$Rgbx_Rgbx_$Impl_$.darker(thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgbx(this1),t),thx_color__$Rgbxa_Rgbxa_$Impl_$.get_alpha(this1));
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.lighter = function(this1,t) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.withAlpha(thx_color__$Rgbx_Rgbx_$Impl_$.lighter(thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgbx(this1),t),thx_color__$Rgbxa_Rgbxa_$Impl_$.get_alpha(this1));
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.transparent = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Ints.interpolate(t,this1[3],0)];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.opaque = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Ints.interpolate(t,this1[3],1)];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Ints.interpolate(t,this1[0],other[0]),thx_Ints.interpolate(t,this1[1],other[1]),thx_Ints.interpolate(t,this1[2],other[2]),thx_Ints.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.normalize = function(this1) {
	var this2;
	var v = this1[0];
	var v1 = this1[1];
	var v2 = this1[2];
	var v3 = this1[3];
	this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2,v3 < 0 ? 0 : v3 > 1 ? 1 : v3];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals),thx_Floats.roundTo(this1[3],decimals)];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.withAlpha = function(this1,newalpha) {
	var this2 = [thx_color__$Rgbxa_Rgbxa_$Impl_$.get_red(this1),thx_color__$Rgbxa_Rgbxa_$Impl_$.get_green(this1),thx_color__$Rgbxa_Rgbxa_$Impl_$.get_blue(this1),newalpha];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.withRed = function(this1,newred) {
	var this2 = [newred,thx_color__$Rgbxa_Rgbxa_$Impl_$.get_green(this1),thx_color__$Rgbxa_Rgbxa_$Impl_$.get_blue(this1),this1[3]];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.withGreen = function(this1,newgreen) {
	var this2 = [thx_color__$Rgbxa_Rgbxa_$Impl_$.get_red(this1),newgreen,thx_color__$Rgbxa_Rgbxa_$Impl_$.get_blue(this1),this1[3]];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.withBlue = function(this1,newblue) {
	var this2 = [thx_color__$Rgbxa_Rgbxa_$Impl_$.get_red(this1),thx_color__$Rgbxa_Rgbxa_$Impl_$.get_green(this1),newblue,this1[3]];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toCss3 = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(this1);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toString = function(this1) {
	return "rgba(" + this1[0] * 100 + "%," + this1[1] * 100 + "%," + this1[2] * 100 + "%," + this1[3] + ")";
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toHex = function(this1,prefix) {
	if(prefix == null) {
		prefix = "#";
	}
	return "" + prefix + StringTools.hex(thx_color__$Rgbxa_Rgbxa_$Impl_$.get_alpha(this1),2) + StringTools.hex(thx_color__$Rgbxa_Rgbxa_$Impl_$.get_red(this1),2) + StringTools.hex(thx_color__$Rgbxa_Rgbxa_$Impl_$.get_green(this1),2) + StringTools.hex(thx_color__$Rgbxa_Rgbxa_$Impl_$.get_blue(this1),2);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.equals = function(this1,other) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.nearEquals(this1,other);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance) && thx_Floats.nearEquals(this1[2],other[2],tolerance)) {
		return thx_Floats.nearEquals(this1[3],other[3],tolerance);
	} else {
		return false;
	}
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsla = function(this1) {
	return thx_color__$Hsl_Hsl_$Impl_$.withAlpha(thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgbx(this1)),this1[3]);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsva = function(this1) {
	return thx_color__$Hsv_Hsv_$Impl_$.withAlpha(thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgbx(this1)),this1[3]);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgbx(this1));
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgbx = function(this1) {
	var this2 = this1.slice(0,3);
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromFloats([this1[0],this1[1],this1[2],this1[3]]);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb = function(this1) {
	return thx_color__$Argb_Argb_$Impl_$.fromFloats([this1[3],this1[0],this1[1],this1[2]]);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_red = function(this1) {
	return Math.round(this1[0] * 255);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_green = function(this1) {
	return Math.round(this1[1] * 255);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_blue = function(this1) {
	return Math.round(this1[2] * 255);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_alpha = function(this1) {
	return Math.round(this1[3] * 255);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_redf = function(this1) {
	return this1[0];
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_greenf = function(this1) {
	return this1[1];
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_bluef = function(this1) {
	return this1[2];
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_alphaf = function(this1) {
	return this1[3];
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_inSpace = function(this1) {
	if(this1[0] >= 0 && this1[0] <= 1 && this1[1] >= 0 && this1[1] <= 1 && this1[2] >= 0 && this1[2] <= 1 && this1[3] >= 0) {
		return this1[3] <= 1;
	} else {
		return false;
	}
};
var thx_color__$Temperature_Temperature_$Impl_$ = {};
thx_color__$Temperature_Temperature_$Impl_$.__name__ = ["thx","color","_Temperature","Temperature_Impl_"];
thx_color__$Temperature_Temperature_$Impl_$.temperatureToRgbx = function(kelvin) {
	var t = kelvin / 100.0;
	var r;
	var g;
	var b;
	if(t < 66.0) {
		r = 1;
	} else {
		r = t - 55.0;
		r = (351.97690566805693 + 0.114206453784165 * r - 40.25366309332127 * Math.log(r)) / 255;
		if(r < 0) {
			r = 0;
		}
		if(r > 1) {
			r = 1;
		}
	}
	if(t < 66.0) {
		g = t - 2;
		g = (-155.25485562709179 - 0.44596950469579133 * g + 104.49216199393888 * Math.log(g)) / 255;
		if(g < 0) {
			g = 0;
		}
		if(g > 1) {
			g = 1;
		}
	} else {
		g = t - 50;
		g = (325.4494125711974 + 0.07943456536662342 * g - 28.0852963507957 * Math.log(g)) / 255;
		if(g < 0) {
			g = 0;
		}
		if(g > 1) {
			g = 1;
		}
	}
	if(t >= 66.0) {
		b = 1;
	} else if(t <= 20.0) {
		b = 0;
	} else {
		b = t - 10;
		b = (-254.76935184120902 + 0.8274096064007395 * b + 115.67994401066147 * Math.log(b)) / 255;
		if(b < 0) {
			b = 0;
		}
		if(b > 1) {
			b = 1;
		}
	}
	var this1 = [r,g,b];
	return this1;
};
thx_color__$Temperature_Temperature_$Impl_$.create = function(v) {
	var this1 = v;
	return this1;
};
thx_color__$Temperature_Temperature_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		if(_g == "temperature") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,1,false)[0];
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Temperature_Temperature_$Impl_$._new = function(kelvin) {
	var this1 = kelvin;
	return this1;
};
thx_color__$Temperature_Temperature_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = thx_Floats.interpolate(t,this1,other);
	return this2;
};
thx_color__$Temperature_Temperature_$Impl_$.min = function(this1,other) {
	var this2 = Math.min(this1,other);
	return this2;
};
thx_color__$Temperature_Temperature_$Impl_$.max = function(this1,other) {
	var this2 = Math.max(this1,other);
	return this2;
};
thx_color__$Temperature_Temperature_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = thx_Floats.roundTo(this1,decimals);
	return this2;
};
thx_color__$Temperature_Temperature_$Impl_$.toString = function(this1) {
	return "temperature(" + this1 + ")";
};
thx_color__$Temperature_Temperature_$Impl_$.equals = function(this1,other) {
	return thx_Floats.nearEquals(this1,other);
};
thx_color__$Temperature_Temperature_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	return thx_Floats.nearEquals(this1,other,tolerance);
};
thx_color__$Temperature_Temperature_$Impl_$.get_kelvin = function(this1) {
	return this1;
};
thx_color__$Temperature_Temperature_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Temperature_Temperature_$Impl_$.toXyz(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Temperature_Temperature_$Impl_$.toLab(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1),1);
};
thx_color__$Temperature_Temperature_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Temperature_Temperature_$Impl_$.toXyz(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Temperature_Temperature_$Impl_$.toRgbxa(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Temperature_Temperature_$Impl_$.toRgbxa(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toRgbxTannerHelland = function(this1) {
	var t = this1 / 100;
	var r;
	var g;
	var b;
	if(t <= 66) {
		r = 1;
	} else {
		r = t - 60;
		r = 329.698727446 * Math.pow(r,-0.1332047592) / 1;
		if(r < 0) {
			r = 0;
		}
		if(r > 1) {
			r = 1;
		}
	}
	if(t <= 66.0) {
		g = t;
		g = (99.4708025861 * Math.log(g) - 161.1195681661) / 1;
		if(g < 0) {
			g = 0;
		}
		if(g > 1) {
			g = 1;
		}
	} else {
		g = t - 60.0;
		g = 288.1221695283 * Math.pow(g,-0.0755148492) / 1;
		if(g < 0) {
			g = 0;
		}
		if(g > 1) {
			g = 1;
		}
	}
	if(t >= 66.0) {
		b = 1;
	} else if(t <= 19.0) {
		b = 0;
	} else {
		b = t - 10;
		b = (138.5177312231 * Math.log(b) - 305.0447927307) / 1;
		if(b < 0) {
			b = 0;
		}
		if(b > 1) {
			b = 1;
		}
	}
	var this2 = [r,g,b];
	return this2;
};
thx_color__$Temperature_Temperature_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Temperature_Temperature_$Impl_$.temperatureToRgbx(this1);
};
thx_color__$Temperature_Temperature_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
var thx_color__$Xyz_Xyz_$Impl_$ = {};
thx_color__$Xyz_Xyz_$Impl_$.__name__ = ["thx","color","_Xyz","Xyz_Impl_"];
thx_color__$Xyz_Xyz_$Impl_$.create = function(x,y,z) {
	var this1 = [x,y,z];
	return this1;
};
thx_color__$Xyz_Xyz_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Xyz_Xyz_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		switch(_g) {
		case "ciexyz":case "xyz":
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Xyz_Xyz_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Xyz_Xyz_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.withX = function(this1,newx) {
	var this2 = [newx,this1[1],this1[2]];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.withY = function(this1,newy) {
	var this2 = [this1[0],newy,this1[2]];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.withZ = function(this1,newz) {
	var this2 = [this1[0],this1[1],newz];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.toString = function(this1) {
	return "xyz(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$Xyz_Xyz_$Impl_$.equals = function(this1,other) {
	return thx_color__$Xyz_Xyz_$Impl_$.nearEquals(this1,other);
};
thx_color__$Xyz_Xyz_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Xyz_Xyz_$Impl_$.toLab = function(this1) {
	var f = function(t) {
		if(t > 0.0088564516790356311) {
			return Math.pow(t,0.33333333333333331);
		} else {
			return 7.7870370370370354 * t + 0.13793103448275862;
		}
	};
	var x1 = this1[0] / thx_color__$Xyz_Xyz_$Impl_$.whiteReference[0];
	var y1 = this1[1] / thx_color__$Xyz_Xyz_$Impl_$.whiteReference[1];
	var z1 = this1[2] / thx_color__$Xyz_Xyz_$Impl_$.whiteReference[2];
	var fy1 = f(y1);
	var l = 116 * fy1 - 16;
	var a = 500 * (f(x1) - fy1);
	var b = 200 * (fy1 - f(z1));
	var this2 = [l,a,b];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Xyz_Xyz_$Impl_$.toLab(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toLuv = function(this1) {
	var x = this1[0] * 100;
	var y = this1[1] * 100;
	var z = this1[2] * 100;
	var f = y / (thx_color__$Xyz_Xyz_$Impl_$.whiteReference[1] * 100);
	var r = Math.pow(0.20689655172413793,3);
	var l = f > r ? 116 * Math.pow(f,0.33333333333333331) - 16 : Math.pow(9.6666666666666661,3) * f;
	var u = 13 * l * (thx_color__$Xyz_Xyz_$Impl_$.get_u(this1) - thx_color__$Xyz_Xyz_$Impl_$.get_u(thx_color__$Xyz_Xyz_$Impl_$.whiteReference) * 100);
	var v = 13 * l * (thx_color__$Xyz_Xyz_$Impl_$.get_v(this1) - thx_color__$Xyz_Xyz_$Impl_$.get_v(thx_color__$Xyz_Xyz_$Impl_$.whiteReference) * 100);
	var this2 = [l / 100,u / 100,v / 100];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1),1);
};
thx_color__$Xyz_Xyz_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toHunterLab = function(this1) {
	var l = 10.0 * Math.sqrt(this1[1]);
	var a = this1[1] != 0 ? 17.5 * ((1.02 * this1[0] - this1[1]) / Math.sqrt(this1[1])) : 0;
	var b = this1[1] != 0 ? 7.0 * ((this1[1] - .847 * this1[2]) / Math.sqrt(this1[1])) : 0;
	var this2 = [l,a,b];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Xyz_Xyz_$Impl_$.toRgbxa(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Xyz_Xyz_$Impl_$.toRgbxa(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toRgbx = function(this1) {
	var x = this1[0];
	var y = this1[1];
	var z = this1[2];
	var r = x * 3.2406 + y * -1.5372 + z * -0.4986;
	var g = x * -0.9689 + y * 1.8758 + z * 0.0415;
	var b = x * 0.0557 + y * -0.2040 + z * 1.0570;
	if(r > 0.0031308) {
		r = 1.055 * Math.pow(r,0.41666666666666669) - 0.055;
	} else {
		r = 12.92 * r;
	}
	if(g > 0.0031308) {
		g = 1.055 * Math.pow(g,0.41666666666666669) - 0.055;
	} else {
		g = 12.92 * g;
	}
	if(b > 0.0031308) {
		b = 1.055 * Math.pow(b,0.41666666666666669) - 0.055;
	} else {
		b = 12.92 * b;
	}
	var this2 = [r,g,b];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toYxy = function(this1) {
	var sum = this1[0] + this1[1] + this1[2];
	var this2 = [this1[1],sum == 0 ? 1 : this1[0] / sum,sum == 0 ? 1 : this1[1] / sum];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.get_x = function(this1) {
	return this1[0];
};
thx_color__$Xyz_Xyz_$Impl_$.get_y = function(this1) {
	return this1[1];
};
thx_color__$Xyz_Xyz_$Impl_$.get_z = function(this1) {
	return this1[2];
};
thx_color__$Xyz_Xyz_$Impl_$.get_u = function(this1) {
	try {
		return 4 * this1[0] / (this1[0] + 15 * this1[1] + 3 * this1[2]);
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return 0;
	}
};
thx_color__$Xyz_Xyz_$Impl_$.get_v = function(this1) {
	try {
		return 9 * this1[1] / (this1[0] + 15 * this1[1] + 3 * this1[2]);
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return 0;
	}
};
var thx_color__$Yuv_Yuv_$Impl_$ = {};
thx_color__$Yuv_Yuv_$Impl_$.__name__ = ["thx","color","_Yuv","Yuv_Impl_"];
thx_color__$Yuv_Yuv_$Impl_$.create = function(y,u,v) {
	var this1 = [y,u,v];
	return this1;
};
thx_color__$Yuv_Yuv_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Yuv_Yuv_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		if(_g == "yuv") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Yuv_Yuv_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Yuv_Yuv_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.normalize = function(this1) {
	var this2;
	var v = this1[0];
	var v1 = this1[1];
	var min = -0.436;
	var v2 = this1[2];
	var min1 = -0.615;
	this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < min ? min : v1 > 0.436 ? 0.436 : v1,v2 < min1 ? min1 : v2 > 0.615 ? 0.615 : v2];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.withY = function(this1,newy) {
	var this2 = [newy,this1[1],this1[2]];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.withU = function(this1,newu) {
	var this2 = [this1[0],newu,this1[2]];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.withV = function(this1,newv) {
	var this2 = [this1[0],this1[1],newv];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.toString = function(this1) {
	return "yuv(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$Yuv_Yuv_$Impl_$.equals = function(this1,other) {
	return thx_color__$Yuv_Yuv_$Impl_$.nearEquals(this1,other);
};
thx_color__$Yuv_Yuv_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Yuv_Yuv_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Yuv_Yuv_$Impl_$.toXyz(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Yuv_Yuv_$Impl_$.toLab(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1),1);
};
thx_color__$Yuv_Yuv_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Yuv_Yuv_$Impl_$.toXyz(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Yuv_Yuv_$Impl_$.toRgbxa(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Yuv_Yuv_$Impl_$.toRgbxa(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toRgbx = function(this1) {
	var r = this1[0] + 1.139837398373983740 * this1[2];
	var g = this1[0] - 0.3946517043589703515 * this1[1] - 0.5805986066674976801 * this1[2];
	var b = this1[0] + 2.032110091743119266 * this1[1];
	var this2 = [r,g,b];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.get_y = function(this1) {
	return this1[0];
};
thx_color__$Yuv_Yuv_$Impl_$.get_u = function(this1) {
	return this1[1];
};
thx_color__$Yuv_Yuv_$Impl_$.get_v = function(this1) {
	return this1[2];
};
var thx_color__$Yxy_Yxy_$Impl_$ = {};
thx_color__$Yxy_Yxy_$Impl_$.__name__ = ["thx","color","_Yxy","Yxy_Impl_"];
thx_color__$Yxy_Yxy_$Impl_$.create = function(y1,x,y2) {
	var this1 = [y1,x,y2];
	return this1;
};
thx_color__$Yxy_Yxy_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Yxy_Yxy_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		var _g = info.name;
		if(_g == "yxy") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
thx_color__$Yxy_Yxy_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Yxy_Yxy_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.withY1 = function(this1,newy1) {
	var this2 = [newy1,this1[1],this1[2]];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.withY = function(this1,newx) {
	var this2 = [this1[0],newx,this1[2]];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.withZ = function(this1,newy2) {
	var this2 = [this1[0],this1[1],newy2];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.toString = function(this1) {
	return "yxy(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$Yxy_Yxy_$Impl_$.equals = function(this1,other) {
	return thx_color__$Yxy_Yxy_$Impl_$.nearEquals(this1,other);
};
thx_color__$Yxy_Yxy_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Yxy_Yxy_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Yxy_Yxy_$Impl_$.toLab(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Yxy_Yxy_$Impl_$.toRgbx(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toCmy = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toCmy(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toCmyk(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toCubeHelix(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toGrey = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toGrey(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Yxy_Yxy_$Impl_$.toRgbx(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toHsv = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHsv(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toRgb = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toRgb(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Yxy_Yxy_$Impl_$.toRgbxa(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Yxy_Yxy_$Impl_$.toRgbxa(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toRgbx(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toRgbxa(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Yxy_Yxy_$Impl_$.toRgbx(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Yxy_Yxy_$Impl_$.toRgbx(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toXyz = function(this1) {
	var this2 = [this1[1] * (this1[0] / this1[2]),this1[0],(1 - this1[1] - this1[2]) * (this1[0] / this1[2])];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.get_y1 = function(this1) {
	return this1[0];
};
thx_color__$Yxy_Yxy_$Impl_$.get_x = function(this1) {
	return this1[1];
};
thx_color__$Yxy_Yxy_$Impl_$.get_y2 = function(this1) {
	return this1[2];
};
var thx_color_palettes_Web = function() { };
thx_color_palettes_Web.__name__ = ["thx","color","palettes","Web"];
var thx_color_parse_ColorParser = function() {
	this.pattern_color = new EReg("^\\s*([^(]+)\\s*\\(([^)]*)\\)\\s*$","i");
	this.pattern_channel = new EReg("^\\s*(-?\\d*.\\d+|-?\\d+)(%|deg|rad)?\\s*$","i");
};
thx_color_parse_ColorParser.__name__ = ["thx","color","parse","ColorParser"];
thx_color_parse_ColorParser.parseColor = function(s) {
	return thx_color_parse_ColorParser.parser.processColor(s);
};
thx_color_parse_ColorParser.parseHex = function(s) {
	return thx_color_parse_ColorParser.parser.processHex(s);
};
thx_color_parse_ColorParser.parseChannel = function(s) {
	return thx_color_parse_ColorParser.parser.processChannel(s);
};
thx_color_parse_ColorParser.getFloatChannels = function(channels,length,useInt8) {
	if(length != channels.length) {
		throw new js__$Boot_HaxeError("invalid number of channels, expected " + length + " but it is " + channels.length);
	}
	var a2 = useInt8;
	return channels.map(function(a1) {
		return thx_color_parse_ColorParser.getFloatChannel(a1,a2);
	});
};
thx_color_parse_ColorParser.getInt8Channels = function(channels,length) {
	if(length != channels.length) {
		throw new js__$Boot_HaxeError("invalid number of channels, expected " + length + " but it is " + channels.length);
	}
	return channels.map(thx_color_parse_ColorParser.getInt8Channel);
};
thx_color_parse_ColorParser.getFloatChannel = function(channel,useInt8) {
	if(useInt8 == null) {
		useInt8 = true;
	}
	switch(channel[1]) {
	case 0:
		var v = channel[2];
		return v / 100;
	case 1:
		var v1 = channel[2];
		return v1;
	case 2:
		var v2 = channel[2];
		return v2;
	case 3:
		var v3 = channel[2];
		if(useInt8) {
			return v3 / 255;
		} else {
			var v4 = channel[2];
			return v4;
		}
		break;
	case 4:
		var v5 = channel[2];
		return v5;
	case 5:
		var v6 = channel[2];
		if(v6) {
			return 1;
		} else {
			return 0;
		}
		break;
	}
};
thx_color_parse_ColorParser.getInt8Channel = function(channel) {
	switch(channel[1]) {
	case 0:
		var v = channel[2];
		return Math.round(255 * v / 100);
	case 3:
		var v1 = channel[2];
		return v1;
	case 5:
		var v2 = channel[2];
		if(v2) {
			return 1;
		} else {
			return 0;
		}
		break;
	default:
		throw new js__$Boot_HaxeError("unable to extract a valid int8 value");
	}
};
thx_color_parse_ColorParser.prototype = {
	pattern_color: null
	,pattern_channel: null
	,processHex: function(s) {
		if(!thx_color_parse_ColorParser.isPureHex.match(s)) {
			if(HxOverrides.substr(s,0,1) == "#") {
				if(s.length == 4) {
					s = s.charAt(1) + s.charAt(1) + s.charAt(2) + s.charAt(2) + s.charAt(3) + s.charAt(3);
				} else if(s.length == 5) {
					s = s.charAt(1) + s.charAt(1) + s.charAt(2) + s.charAt(2) + s.charAt(3) + s.charAt(3) + s.charAt(4) + s.charAt(4);
				} else {
					s = HxOverrides.substr(s,1,null);
				}
			} else if(HxOverrides.substr(s,0,2) == "0x") {
				s = HxOverrides.substr(s,2,null);
			} else {
				return null;
			}
		}
		var channels = [];
		while(s.length > 0) {
			channels.push(thx_color_parse_ChannelInfo.CIInt8(Std.parseInt("0x" + HxOverrides.substr(s,0,2))));
			s = HxOverrides.substr(s,2,null);
		}
		if(channels.length == 4) {
			var channels1 = channels[0];
			return new thx_color_parse_ColorInfo("rgba",channels.slice(1).concat([channels1]));
		} else {
			return new thx_color_parse_ColorInfo("rgb",channels);
		}
	}
	,processColor: function(s) {
		if(!this.pattern_color.match(s)) {
			return null;
		}
		var name = this.pattern_color.matched(1);
		if(null == name) {
			return null;
		}
		name = name.toLowerCase();
		var m2 = this.pattern_color.matched(2);
		var s_channels = null == m2 ? [] : m2.split(",");
		var channels = [];
		var channel;
		var _g = 0;
		while(_g < s_channels.length) {
			var s_channel = s_channels[_g];
			++_g;
			channel = this.processChannel(s_channel);
			if(null == channel) {
				return null;
			}
			channels.push(channel);
		}
		return new thx_color_parse_ColorInfo(name,channels);
	}
	,processChannel: function(s) {
		if(!this.pattern_channel.match(s)) {
			return null;
		}
		var value = this.pattern_channel.matched(1);
		var unit = this.pattern_channel.matched(2);
		if(unit == null) {
			unit = "";
		}
		try {
			switch(unit) {
			case "":
				if(value == "" + thx_Ints.parse(value)) {
					var i = thx_Ints.parse(value);
					if(i == 0) {
						return thx_color_parse_ChannelInfo.CIBool(false);
					} else if(i == 1) {
						return thx_color_parse_ChannelInfo.CIBool(true);
					} else if(i < 256) {
						return thx_color_parse_ChannelInfo.CIInt8(i);
					} else {
						return thx_color_parse_ChannelInfo.CIInt(i);
					}
				} else if(thx_Floats.canParse(value)) {
					return thx_color_parse_ChannelInfo.CIFloat(thx_Floats.parse(value));
				} else {
					return null;
				}
				break;
			case "%":
				if(thx_Floats.canParse(value)) {
					return thx_color_parse_ChannelInfo.CIPercent(thx_Floats.parse(value));
				} else {
					return null;
				}
				break;
			case "DEG":case "deg":
				if(thx_Floats.canParse(value)) {
					return thx_color_parse_ChannelInfo.CIDegree(thx_Floats.parse(value));
				} else {
					return null;
				}
				break;
			case "RAD":case "rad":
				if(thx_Floats.canParse(value)) {
					return thx_color_parse_ChannelInfo.CIDegree(thx_Floats.parse(value) * 180 / Math.PI);
				} else {
					return null;
				}
				break;
			default:
				return null;
			}
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return null;
		}
	}
	,__class__: thx_color_parse_ColorParser
};
var thx_color_parse_ColorInfo = function(name,channels) {
	this.name = name;
	this.channels = channels;
};
thx_color_parse_ColorInfo.__name__ = ["thx","color","parse","ColorInfo"];
thx_color_parse_ColorInfo.prototype = {
	name: null
	,channels: null
	,toString: function() {
		return "" + this.name + ", channels: " + Std.string(this.channels);
	}
	,__class__: thx_color_parse_ColorInfo
};
var thx_color_parse_ChannelInfo = { __ename__ : ["thx","color","parse","ChannelInfo"], __constructs__ : ["CIPercent","CIFloat","CIDegree","CIInt8","CIInt","CIBool"] };
thx_color_parse_ChannelInfo.CIPercent = function(value) { var $x = ["CIPercent",0,value]; $x.__enum__ = thx_color_parse_ChannelInfo; return $x; };
thx_color_parse_ChannelInfo.CIFloat = function(value) { var $x = ["CIFloat",1,value]; $x.__enum__ = thx_color_parse_ChannelInfo; return $x; };
thx_color_parse_ChannelInfo.CIDegree = function(value) { var $x = ["CIDegree",2,value]; $x.__enum__ = thx_color_parse_ChannelInfo; return $x; };
thx_color_parse_ChannelInfo.CIInt8 = function(value) { var $x = ["CIInt8",3,value]; $x.__enum__ = thx_color_parse_ChannelInfo; return $x; };
thx_color_parse_ChannelInfo.CIInt = function(value) { var $x = ["CIInt",4,value]; $x.__enum__ = thx_color_parse_ChannelInfo; return $x; };
thx_color_parse_ChannelInfo.CIBool = function(value) { var $x = ["CIBool",5,value]; $x.__enum__ = thx_color_parse_ChannelInfo; return $x; };
var thx_error_ErrorWrapper = function(message,innerError,stack,pos) {
	thx_Error.call(this,message,stack,pos);
	this.innerError = innerError;
};
thx_error_ErrorWrapper.__name__ = ["thx","error","ErrorWrapper"];
thx_error_ErrorWrapper.__super__ = thx_Error;
thx_error_ErrorWrapper.prototype = $extend(thx_Error.prototype,{
	innerError: null
	,__class__: thx_error_ErrorWrapper
});
var thx_error_NullArgument = function(message,posInfo) {
	thx_Error.call(this,message,null,posInfo);
};
thx_error_NullArgument.__name__ = ["thx","error","NullArgument"];
thx_error_NullArgument.__super__ = thx_Error;
thx_error_NullArgument.prototype = $extend(thx_Error.prototype,{
	__class__: thx_error_NullArgument
});
var thx_fp__$Map_Map_$Impl_$ = {};
thx_fp__$Map_Map_$Impl_$.__name__ = ["thx","fp","_Map","Map_Impl_"];
thx_fp__$Map_Map_$Impl_$.empty = function() {
	return thx_fp_MapImpl.Tip;
};
thx_fp__$Map_Map_$Impl_$.singleton = function(k,v) {
	return thx_fp_MapImpl.Bin(1,k,v,thx_fp_MapImpl.Tip,thx_fp_MapImpl.Tip);
};
thx_fp__$Map_Map_$Impl_$.bin = function(k,v,lhs,rhs) {
	return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k,v,lhs,rhs);
};
thx_fp__$Map_Map_$Impl_$.fromNative = function(map,comparator) {
	var r = thx_fp_MapImpl.Tip;
	var key = map.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		r = thx_fp__$Map_Map_$Impl_$.insert(r,key1,map.get(key1),comparator);
	}
	return r;
};
thx_fp__$Map_Map_$Impl_$.lookup = function(this1,key,comparator) {
	switch(this1[1]) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var xvalue = this1[4];
		var xkey = this1[3];
		var size = this1[2];
		var c = comparator(key,xkey);
		switch(c[1]) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.lookup(lhs,key,comparator);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.lookup(rhs,key,comparator);
		case 2:
			return haxe_ds_Option.Some(xvalue);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.lookupTuple = function(this1,key,comparator) {
	switch(this1[1]) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var xvalue = this1[4];
		var xkey = this1[3];
		var size = this1[2];
		var c = comparator(key,xkey);
		switch(c[1]) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.lookupTuple(lhs,key,comparator);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.lookupTuple(rhs,key,comparator);
		case 2:
			var this2 = { _0 : xkey, _1 : xvalue};
			return haxe_ds_Option.Some(this2);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$["delete"] = function(this1,key,comparator) {
	switch(this1[1]) {
	case 0:
		return thx_fp_MapImpl.Tip;
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var x = this1[4];
		var kx = this1[3];
		var size = this1[2];
		var _g = comparator(key,kx);
		switch(_g[1]) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.balance(kx,x,thx_fp__$Map_Map_$Impl_$["delete"](lhs,key,comparator),rhs);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.balance(kx,x,lhs,thx_fp__$Map_Map_$Impl_$["delete"](rhs,key,comparator));
		case 2:
			return thx_fp__$Map_Map_$Impl_$.glue(lhs,rhs);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.insert = function(this1,kx,x,comparator) {
	switch(this1[1]) {
	case 0:
		return thx_fp_MapImpl.Bin(1,kx,x,thx_fp_MapImpl.Tip,thx_fp_MapImpl.Tip);
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var y = this1[4];
		var ky = this1[3];
		var sz = this1[2];
		var _g = comparator(kx,ky);
		switch(_g[1]) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.balance(ky,y,thx_fp__$Map_Map_$Impl_$.insert(lhs,kx,x,comparator),rhs);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.balance(ky,y,lhs,thx_fp__$Map_Map_$Impl_$.insert(rhs,kx,x,comparator));
		case 2:
			return thx_fp_MapImpl.Bin(sz,kx,x,lhs,rhs);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeft = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		var r = this1[6];
		var l = this1[5];
		var x = this1[4];
		return thx_fp__$Map_Map_$Impl_$.foldLeft(r,thx_fp__$Map_Map_$Impl_$.foldLeft(l,f(b,x),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.map = function(this1,f) {
	switch(this1[1]) {
	case 0:
		return thx_fp_MapImpl.Tip;
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var y = this1[4];
		var ky = this1[3];
		var sz = this1[2];
		return thx_fp_MapImpl.Bin(sz,ky,f(y),thx_fp__$Map_Map_$Impl_$.map(lhs,f),thx_fp__$Map_Map_$Impl_$.map(rhs,f));
	}
};
thx_fp__$Map_Map_$Impl_$.values = function(this1) {
	return thx_fp__$Map_Map_$Impl_$.foldLeft(this1,[],function(acc,v) {
		acc.push(v);
		return acc;
	});
};
thx_fp__$Map_Map_$Impl_$.foldLeftKeys = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		var r = this1[6];
		var l = this1[5];
		var kx = this1[3];
		return thx_fp__$Map_Map_$Impl_$.foldLeftKeys(r,thx_fp__$Map_Map_$Impl_$.foldLeftKeys(l,f(b,kx),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeftAll = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		var r = this1[6];
		var l = this1[5];
		var x = this1[4];
		var kx = this1[3];
		return thx_fp__$Map_Map_$Impl_$.foldLeftAll(r,thx_fp__$Map_Map_$Impl_$.foldLeftAll(l,f(b,kx,x),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeftTuples = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		var r = this1[6];
		var l = this1[5];
		var x = this1[4];
		var kx = this1[3];
		var this2 = { _0 : kx, _1 : x};
		return thx_fp__$Map_Map_$Impl_$.foldLeftTuples(r,thx_fp__$Map_Map_$Impl_$.foldLeftTuples(l,f(b,this2),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.size = function(this1) {
	switch(this1[1]) {
	case 0:
		return 0;
	case 1:
		var size = this1[2];
		return size;
	}
};
thx_fp__$Map_Map_$Impl_$.balance = function(k,x,lhs,rhs) {
	var ls = thx_fp__$Map_Map_$Impl_$.size(lhs);
	var rs = thx_fp__$Map_Map_$Impl_$.size(rhs);
	var xs = ls + rs + 1;
	if(ls + rs <= 1) {
		return thx_fp_MapImpl.Bin(xs,k,x,lhs,rhs);
	} else if(rs >= 5 * ls) {
		return thx_fp__$Map_Map_$Impl_$.rotateLeft(k,x,lhs,rhs);
	} else if(ls >= 5 * rs) {
		return thx_fp__$Map_Map_$Impl_$.rotateRight(k,x,lhs,rhs);
	} else {
		return thx_fp_MapImpl.Bin(xs,k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.glue = function(this1,that) {
	if(this1[1] == 0) {
		return that;
	} else if(that[1] == 0) {
		return this1;
	} else {
		var l = this1;
		var r = that;
		if(thx_fp__$Map_Map_$Impl_$.size(l) > thx_fp__$Map_Map_$Impl_$.size(r)) {
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMax(l);
			return thx_fp__$Map_Map_$Impl_$.balance(t.k,t.x,t.t,r);
		} else {
			var l1 = this1;
			var r1 = that;
			var t1 = thx_fp__$Map_Map_$Impl_$.deleteFindMin(r1);
			return thx_fp__$Map_Map_$Impl_$.balance(t1.k,t1.x,l1,t1.t);
		}
	}
};
thx_fp__$Map_Map_$Impl_$.deleteFindMin = function(map) {
	switch(map[1]) {
	case 0:
		throw new thx_Error("can not return the minimal element of an empty map",null,{ fileName : "Map.hx", lineNumber : 161, className : "thx.fp._Map.Map_Impl_", methodName : "deleteFindMin"});
		break;
	case 1:
		if(map[5][1] == 0) {
			var r = map[6];
			var k = map[3];
			var x = map[4];
			return { k : k, x : x, t : r};
		} else {
			var r1 = map[6];
			var k1 = map[3];
			var x1 = map[4];
			var l = map[5];
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMin(l);
			return { k : t.k, x : t.x, t : thx_fp__$Map_Map_$Impl_$.balance(k1,x1,t.t,r1)};
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.deleteFindMax = function(map) {
	switch(map[1]) {
	case 0:
		throw new thx_Error("can not return the maximal element of an empty map",null,{ fileName : "Map.hx", lineNumber : 171, className : "thx.fp._Map.Map_Impl_", methodName : "deleteFindMax"});
		break;
	case 1:
		if(map[6][1] == 0) {
			var k = map[3];
			var x = map[4];
			var l = map[5];
			return { k : k, x : x, t : l};
		} else {
			var k1 = map[3];
			var x1 = map[4];
			var l1 = map[5];
			var r = map[6];
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMax(r);
			return { k : t.k, x : t.x, t : thx_fp__$Map_Map_$Impl_$.balance(k1,x1,l1,t.t)};
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.rotateLeft = function(k,x,lhs,rhs) {
	if(rhs[1] == 1) {
		var ry = rhs[6];
		var ly = rhs[5];
		if(thx_fp__$Map_Map_$Impl_$.size(ly) < 2 * thx_fp__$Map_Map_$Impl_$.size(ry)) {
			return thx_fp__$Map_Map_$Impl_$.singleLeft(k,x,lhs,rhs);
		} else {
			return thx_fp__$Map_Map_$Impl_$.doubleLeft(k,x,lhs,rhs);
		}
	} else {
		return thx_fp__$Map_Map_$Impl_$.doubleLeft(k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.rotateRight = function(k,x,lhs,rhs) {
	if(lhs[1] == 1) {
		var ry = lhs[6];
		var ly = lhs[5];
		if(thx_fp__$Map_Map_$Impl_$.size(ry) < 2 * thx_fp__$Map_Map_$Impl_$.size(ly)) {
			return thx_fp__$Map_Map_$Impl_$.singleRight(k,x,lhs,rhs);
		} else {
			return thx_fp__$Map_Map_$Impl_$.doubleRight(k,x,lhs,rhs);
		}
	} else {
		return thx_fp__$Map_Map_$Impl_$.doubleRight(k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.singleLeft = function(k1,x1,t1,rhs) {
	if(rhs[1] == 1) {
		var t3 = rhs[6];
		var t2 = rhs[5];
		var x2 = rhs[4];
		var k2 = rhs[3];
		var lhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k1,x1,t1,t2);
		return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(t3) + 1,k2,x2,lhs,t3);
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 193, className : "thx.fp._Map.Map_Impl_", methodName : "singleLeft"});
	}
};
thx_fp__$Map_Map_$Impl_$.singleRight = function(k1,x1,lhs,t3) {
	if(lhs[1] == 1) {
		var t2 = lhs[6];
		var t1 = lhs[5];
		var x2 = lhs[4];
		var k2 = lhs[3];
		var rhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t2) + thx_fp__$Map_Map_$Impl_$.size(t3) + 1,k1,x1,t2,t3);
		return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k2,x2,t1,rhs);
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 199, className : "thx.fp._Map.Map_Impl_", methodName : "singleRight"});
	}
};
thx_fp__$Map_Map_$Impl_$.doubleLeft = function(k1,x1,t1,rhs) {
	if(rhs[1] == 1) {
		if(rhs[5][1] == 1) {
			var t4 = rhs[6];
			var k2 = rhs[3];
			var x2 = rhs[4];
			var t3 = rhs[5][6];
			var t2 = rhs[5][5];
			var x3 = rhs[5][4];
			var k3 = rhs[5][3];
			var lhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k1,x1,t1,t2);
			var rhs1 = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t3) + thx_fp__$Map_Map_$Impl_$.size(t4) + 1,k2,x2,t3,t4);
			return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(rhs1) + 1,k3,x3,lhs,rhs1);
		} else {
			throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 206, className : "thx.fp._Map.Map_Impl_", methodName : "doubleLeft"});
		}
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 206, className : "thx.fp._Map.Map_Impl_", methodName : "doubleLeft"});
	}
};
thx_fp__$Map_Map_$Impl_$.doubleRight = function(k1,x1,lhs,t4) {
	if(lhs[1] == 1) {
		if(lhs[6][1] == 1) {
			var k2 = lhs[3];
			var x2 = lhs[4];
			var t1 = lhs[5];
			var t3 = lhs[6][6];
			var t2 = lhs[6][5];
			var x3 = lhs[6][4];
			var k3 = lhs[6][3];
			var lhs1 = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k2,x2,t1,t2);
			var rhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t3) + thx_fp__$Map_Map_$Impl_$.size(t4) + 1,k1,x1,t3,t4);
			return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs1) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k3,x3,lhs1,rhs);
		} else {
			throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 213, className : "thx.fp._Map.Map_Impl_", methodName : "doubleRight"});
		}
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 213, className : "thx.fp._Map.Map_Impl_", methodName : "doubleRight"});
	}
};
var thx_fp_MapImpl = { __ename__ : ["thx","fp","MapImpl"], __constructs__ : ["Tip","Bin"] };
thx_fp_MapImpl.Tip = ["Tip",0];
thx_fp_MapImpl.Tip.__enum__ = thx_fp_MapImpl;
thx_fp_MapImpl.Bin = function(size,key,value,lhs,rhs) { var $x = ["Bin",1,size,key,value,lhs,rhs]; $x.__enum__ = thx_fp_MapImpl; return $x; };
var tink_await__$LoopIterator_LoopIterator_$Impl_$ = {};
tink_await__$LoopIterator_LoopIterator_$Impl_$.__name__ = ["tink","await","_LoopIterator","LoopIterator_Impl_"];
tink_await__$LoopIterator_LoopIterator_$Impl_$.fromIterable = function(i) {
	return $iterator(i)();
};
var tink_await_OutcomeTools = function() { };
tink_await_OutcomeTools.__name__ = ["tink","await","OutcomeTools"];
tink_await_OutcomeTools.getOutcome = function(outcome,value) {
	if(outcome == null) {
		return tink_core_Outcome.Success(value);
	}
	return outcome;
};
var tink_core__$Any_Any_$Impl_$ = {};
tink_core__$Any_Any_$Impl_$.__name__ = ["tink","core","_Any","Any_Impl_"];
tink_core__$Any_Any_$Impl_$.__promote = function(this1) {
	return this1;
};
var tink_core__$Callback_Callback_$Impl_$ = {};
tink_core__$Callback_Callback_$Impl_$.__name__ = ["tink","core","_Callback","Callback_Impl_"];
tink_core__$Callback_Callback_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.toFunction = function(this1) {
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.invoke = function(this1,data) {
	this1(data);
};
tink_core__$Callback_Callback_$Impl_$.ignore = function(cb) {
	return tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		cb(tink_core_Noise.Noise);
	});
};
tink_core__$Callback_Callback_$Impl_$.fromNiladic = function(f) {
	var this1 = function(r) {
		f();
	};
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.fromMany = function(callbacks) {
	return function(v) {
		var _g = 0;
		while(_g < callbacks.length) {
			var callback = callbacks[_g];
			++_g;
			callback(v);
		}
	};
};
tink_core__$Callback_Callback_$Impl_$.defer = function(f) {
	haxe_Timer.delay(f,0);
};
var tink_core__$Callback_LinkObject = function() { };
tink_core__$Callback_LinkObject.__name__ = ["tink","core","_Callback","LinkObject"];
tink_core__$Callback_LinkObject.prototype = {
	dissolve: null
	,__class__: tink_core__$Callback_LinkObject
};
var tink_core__$Callback_CallbackLink_$Impl_$ = {};
tink_core__$Callback_CallbackLink_$Impl_$.__name__ = ["tink","core","_Callback","CallbackLink_Impl_"];
tink_core__$Callback_CallbackLink_$Impl_$._new = function(link) {
	var this1 = new tink_core__$Callback_SimpleLink(link);
	return this1;
};
tink_core__$Callback_CallbackLink_$Impl_$.dissolve = function(this1) {
	if(this1 != null) {
		this1.dissolve();
	}
};
tink_core__$Callback_CallbackLink_$Impl_$.toCallback = function(this1) {
	return function(_) {
		this1.dissolve();
	};
};
tink_core__$Callback_CallbackLink_$Impl_$.fromFunction = function(f) {
	var this1 = new tink_core__$Callback_SimpleLink(f);
	return this1;
};
tink_core__$Callback_CallbackLink_$Impl_$.join = function(a,b) {
	return new tink_core__$Callback_LinkPair(a,b);
};
tink_core__$Callback_CallbackLink_$Impl_$.fromMany = function(callbacks) {
	var this1 = new tink_core__$Callback_SimpleLink(function() {
		var _g = 0;
		while(_g < callbacks.length) {
			var cb = callbacks[_g];
			++_g;
			if(cb != null) {
				cb.dissolve();
			}
		}
	});
	return this1;
};
var tink_core__$Callback_SimpleLink = function(f) {
	this.f = f;
};
tink_core__$Callback_SimpleLink.__name__ = ["tink","core","_Callback","SimpleLink"];
tink_core__$Callback_SimpleLink.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_SimpleLink.prototype = {
	f: null
	,dissolve: function() {
		if(this.f != null) {
			this.f();
		}
	}
	,__class__: tink_core__$Callback_SimpleLink
};
var tink_core__$Callback_LinkPair = function(a,b) {
	this.dissolved = false;
	this.a = a;
	this.b = b;
};
tink_core__$Callback_LinkPair.__name__ = ["tink","core","_Callback","LinkPair"];
tink_core__$Callback_LinkPair.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_LinkPair.prototype = {
	a: null
	,b: null
	,dissolved: null
	,dissolve: function() {
		if(!this.dissolved) {
			this.dissolved = true;
			var this1 = this.a;
			if(this1 != null) {
				this1.dissolve();
			}
			var this2 = this.b;
			if(this2 != null) {
				this2.dissolve();
			}
		}
	}
	,__class__: tink_core__$Callback_LinkPair
};
var tink_core__$Callback_ListCell = function(cb,list) {
	if(cb == null) {
		throw new js__$Boot_HaxeError("callback expected but null received");
	}
	this.cb = cb;
	this.list = list;
};
tink_core__$Callback_ListCell.__name__ = ["tink","core","_Callback","ListCell"];
tink_core__$Callback_ListCell.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_ListCell.prototype = {
	list: null
	,cb: null
	,invoke: function(data) {
		if(this.cb != null) {
			this.cb(data);
		}
	}
	,clear: function() {
		this.list = null;
		this.cb = null;
	}
	,dissolve: function() {
		var _g = this.list;
		if(_g != null) {
			var v = _g;
			this.clear();
			HxOverrides.remove(v,this);
		}
	}
	,__class__: tink_core__$Callback_ListCell
};
var tink_core__$Callback_CallbackList_$Impl_$ = {};
tink_core__$Callback_CallbackList_$Impl_$.__name__ = ["tink","core","_Callback","CallbackList_Impl_"];
tink_core__$Callback_CallbackList_$Impl_$._new = function() {
	var this1 = [];
	return this1;
};
tink_core__$Callback_CallbackList_$Impl_$.get_length = function(this1) {
	return this1.length;
};
tink_core__$Callback_CallbackList_$Impl_$.add = function(this1,cb) {
	var node = new tink_core__$Callback_ListCell(cb,this1);
	this1.push(node);
	return node;
};
tink_core__$Callback_CallbackList_$Impl_$.invoke = function(this1,data) {
	var _g = 0;
	var _g1 = this1.slice();
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		if(cell.cb != null) {
			cell.cb(data);
		}
	}
};
tink_core__$Callback_CallbackList_$Impl_$.clear = function(this1) {
	var _g = 0;
	var _g1 = this1.splice(0,this1.length);
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		cell.clear();
	}
};
var tink_core_TypedError = function(code,message,pos) {
	if(code == null) {
		code = 500;
	}
	this.code = code;
	this.message = message;
	this.pos = pos;
	this.exceptionStack = [];
	this.callStack = [];
};
tink_core_TypedError.__name__ = ["tink","core","TypedError"];
tink_core_TypedError.withData = function(code,message,data,pos) {
	return tink_core_TypedError.typed(code,message,data,pos);
};
tink_core_TypedError.typed = function(code,message,data,pos) {
	var ret = new tink_core_TypedError(code,message,pos);
	ret.data = data;
	return ret;
};
tink_core_TypedError.catchExceptions = function(f,report,pos) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( $e0 ) {
		haxe_CallStack.lastException = $e0;
		if ($e0 instanceof js__$Boot_HaxeError) $e0 = $e0.val;
		if( js_Boot.__instanceof($e0,tink_core_TypedError) ) {
			var e = $e0;
			return tink_core_Outcome.Failure(e);
		} else {
		var e1 = $e0;
		return tink_core_Outcome.Failure(report == null ? tink_core_TypedError.withData(null,"Unexpected Error",e1,pos) : report(e1));
		}
	}
};
tink_core_TypedError.reporter = function(code,message,pos) {
	return function(e) {
		return tink_core_TypedError.withData(code,message,e,pos);
	};
};
tink_core_TypedError.rethrow = function(any) {
	throw js__$Boot_HaxeError.wrap(any);
};
tink_core_TypedError.prototype = {
	message: null
	,code: null
	,data: null
	,pos: null
	,callStack: null
	,exceptionStack: null
	,printPos: function() {
		return this.pos.className + "." + this.pos.methodName + ":" + this.pos.lineNumber;
	}
	,toString: function() {
		var ret = "Error#" + this.code + ": " + this.message;
		if(this.pos != null) {
			ret += " @ " + this.printPos();
		}
		return ret;
	}
	,throwSelf: function() {
		throw new js__$Boot_HaxeError(this);
	}
	,__class__: tink_core_TypedError
};
var tink_core__$Error_Stack_$Impl_$ = {};
tink_core__$Error_Stack_$Impl_$.__name__ = ["tink","core","_Error","Stack_Impl_"];
tink_core__$Error_Stack_$Impl_$.toString = function(this1) {
	return haxe_CallStack.toString(this1);
};
var tink_core__$Future_Future_$Impl_$ = {};
tink_core__$Future_Future_$Impl_$.__name__ = ["tink","core","_Future","Future_Impl_"];
tink_core__$Future_Future_$Impl_$._new = function(f) {
	var this1 = new tink_core__$Future_SimpleFuture(f);
	return this1;
};
tink_core__$Future_Future_$Impl_$.handle = function(this1,callback) {
	return this1.handle(callback);
};
tink_core__$Future_Future_$Impl_$.eager = function(this1) {
	return this1.eager();
};
tink_core__$Future_Future_$Impl_$.gather = function(this1) {
	return this1.gather();
};
tink_core__$Future_Future_$Impl_$.first = function(this1,other) {
	var ret = new tink_core_FutureTrigger();
	var l1 = this1.handle($bind(ret,ret.trigger));
	var l2 = other.handle($bind(ret,ret.trigger));
	var ret1 = ret;
	if(l1 != null) {
		var this2 = l1;
		ret1.handle(function(_) {
			this2.dissolve();
		});
	}
	if(l2 != null) {
		var this3 = l2;
		ret1.handle(function(_1) {
			this3.dissolve();
		});
	}
	return ret1;
};
tink_core__$Future_Future_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.map(f);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatMap = function(this1,next,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(next);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.next = function(this1,n) {
	return this1.flatMap(function(v) {
		return n(v);
	});
};
tink_core__$Future_Future_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(t) {
		var ret1 = other.map(function(a) {
			return merger(t,a);
		});
		return ret1;
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatten = function(f) {
	return new tink_core__$Future_NestedFuture(f);
};
tink_core__$Future_Future_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		promise.then(function(a) {
			cb(tink_core_Outcome.Success(a));
		})["catch"](function(e) {
			var tmp = tink_core_Outcome.Failure(tink_core_TypedError.withData(null,e.message,e,{ fileName : "Future.hx", lineNumber : 58, className : "tink.core._Future.Future_Impl_", methodName : "ofJsPromise"}));
			cb(tmp);
		});
	});
};
tink_core__$Future_Future_$Impl_$.asPromise = function(s) {
	return s;
};
tink_core__$Future_Future_$Impl_$.ofMany = function(futures,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst([]));
	var _g = 0;
	while(_g < futures.length) {
		var f = [futures[_g]];
		++_g;
		var ret1 = ret.flatMap((function(f1) {
			return function(results) {
				var ret2 = (function() {
					return function(result) {
						return results.concat([result]);
					};
				})();
				var ret3 = f1[0].map(ret2);
				return ret3;
			};
		})(f));
		ret = ret1;
	}
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.fromMany = function(futures) {
	return tink_core__$Future_Future_$Impl_$.ofMany(futures);
};
tink_core__$Future_Future_$Impl_$.lazy = function(l) {
	return new tink_core__$Future_SyncFuture(l);
};
tink_core__$Future_Future_$Impl_$.sync = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core__$Future_Future_$Impl_$.async = function(f,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	if(lazy) {
		var f1 = f;
		return tink_core__$Future_Future_$Impl_$.flatten(new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyFunc(function() {
			return tink_core__$Future_Future_$Impl_$.async(f1,false);
		})));
	} else {
		var op = new tink_core_FutureTrigger();
		f($bind(op,op.trigger));
		return op;
	}
};
tink_core__$Future_Future_$Impl_$.or = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.first(a,b);
};
tink_core__$Future_Future_$Impl_$.either = function(a,b) {
	var ret = a.map(haxe_ds_Either.Left);
	var ret1 = b.map(haxe_ds_Either.Right);
	return tink_core__$Future_Future_$Impl_$.first(ret,ret1);
};
tink_core__$Future_Future_$Impl_$.and = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.merge(a,b,function(a1,b1) {
		var this1 = new tink_core_MPair(a1,b1);
		return this1;
	});
};
tink_core__$Future_Future_$Impl_$._tryFailingFlatMap = function(f,map) {
	var ret = f.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return map(d);
		case 1:
			var f1 = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryFlatMap = function(f,map) {
	var ret = f.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			var ret1 = map(d).map(tink_core_Outcome.Success);
			return ret1.gather();
		case 1:
			var f1 = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryFailingMap = function(f,map) {
	var ret = f.map(function(o) {
		return tink_core_OutcomeTools.flatMap(o,tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError(map));
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryMap = function(f,map) {
	var ret = f.map(function(o) {
		return tink_core_OutcomeTools.map(o,map);
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._flatMap = function(f,map) {
	var ret = f.flatMap(map);
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._map = function(f,map) {
	var ret = f.map(map);
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$.trigger = function() {
	return new tink_core_FutureTrigger();
};
var tink_core__$Future_FutureObject = function() { };
tink_core__$Future_FutureObject.__name__ = ["tink","core","_Future","FutureObject"];
tink_core__$Future_FutureObject.prototype = {
	map: null
	,flatMap: null
	,handle: null
	,gather: null
	,eager: null
	,__class__: tink_core__$Future_FutureObject
};
var tink_core__$Future_SyncFuture = function(value) {
	this.value = value;
};
tink_core__$Future_SyncFuture.__name__ = ["tink","core","_Future","SyncFuture"];
tink_core__$Future_SyncFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_SyncFuture.prototype = {
	value: null
	,map: function(f) {
		return new tink_core__$Future_SyncFuture(this.value.map(f));
	}
	,flatMap: function(f) {
		var l = this.value.map(f);
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return l.get().handle(cb);
		});
	}
	,handle: function(cb) {
		cb(this.value.get());
		return null;
	}
	,eager: function() {
		return this;
	}
	,gather: function() {
		return this;
	}
	,__class__: tink_core__$Future_SyncFuture
};
var tink_core__$Future_SimpleFuture = function(f) {
	this.f = f;
};
tink_core__$Future_SimpleFuture.__name__ = ["tink","core","_Future","SimpleFuture"];
tink_core__$Future_SimpleFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_SimpleFuture.prototype = {
	f: null
	,gathered: null
	,handle: function(callback) {
		return this.f(callback);
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var data = f(v);
				cb(data);
			});
		});
	}
	,flatMap: function(f) {
		var f1 = f;
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.flatten(new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var data = f1(v);
				cb(data);
			});
		}));
	}
	,gather: function() {
		return tink_core_FutureTrigger.gatherFuture(this);
	}
	,eager: function() {
		var ret = tink_core_FutureTrigger.gatherFuture(this);
		ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		}));
		return ret;
	}
	,__class__: tink_core__$Future_SimpleFuture
};
var tink_core__$Future_NestedFuture = function(outer) {
	this.outer = outer;
};
tink_core__$Future_NestedFuture.__name__ = ["tink","core","_Future","NestedFuture"];
tink_core__$Future_NestedFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_NestedFuture.prototype = {
	outer: null
	,map: function(f) {
		var ret = this.outer.flatMap(function(inner) {
			var ret1 = inner.map(f);
			return ret1.gather();
		});
		return ret.gather();
	}
	,flatMap: function(f) {
		var ret = this.outer.flatMap(function(inner) {
			var ret1 = inner.flatMap(f);
			return ret1.gather();
		});
		return ret.gather();
	}
	,gather: function() {
		return tink_core_FutureTrigger.gatherFuture(this);
	}
	,eager: function() {
		var ret = tink_core_FutureTrigger.gatherFuture(this);
		ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		}));
		return ret;
	}
	,handle: function(cb) {
		var ret = null;
		ret = this.outer.handle(function(inner) {
			ret = inner.handle(function(result) {
				cb(result);
			});
		});
		return ret;
	}
	,__class__: tink_core__$Future_NestedFuture
};
var tink_core_FutureTrigger = function() {
	var this1 = [];
	this.list = this1;
};
tink_core_FutureTrigger.__name__ = ["tink","core","FutureTrigger"];
tink_core_FutureTrigger.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core_FutureTrigger.gatherFuture = function(f) {
	var op = null;
	var this1 = new tink_core__$Future_SimpleFuture(function(cb) {
		if(op == null) {
			op = new tink_core_FutureTrigger();
			f.handle($bind(op,op.trigger));
			f = null;
		}
		return op.handle(cb);
	});
	return this1;
};
tink_core_FutureTrigger.prototype = {
	result: null
	,list: null
	,handle: function(callback) {
		var _g = this.list;
		if(_g == null) {
			callback(this.result);
			return null;
		} else {
			var v = _g;
			return tink_core__$Callback_CallbackList_$Impl_$.add(v,callback);
		}
	}
	,map: function(f) {
		var _g = this.list;
		if(_g == null) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(this.result)));
		} else {
			var v = _g;
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v1) {
				var tmp = f(v1);
				ret.trigger(tmp);
			});
			return ret;
		}
	}
	,flatMap: function(f) {
		var _g = this.list;
		if(_g == null) {
			return f(this.result);
		} else {
			var v = _g;
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v1) {
				f(v1).handle($bind(ret,ret.trigger));
			});
			return ret;
		}
	}
	,gather: function() {
		return this;
	}
	,eager: function() {
		return this;
	}
	,asFuture: function() {
		return this;
	}
	,trigger: function(result) {
		if(this.list == null) {
			return false;
		} else {
			var list = this.list;
			this.list = null;
			this.result = result;
			if(tink_core_FutureTrigger.depth >= 1000) {
				tink_core__$Callback_Callback_$Impl_$.defer(function() {
					tink_core_FutureTrigger.depth++;
					tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
					tink_core__$Callback_CallbackList_$Impl_$.clear(list);
					tink_core_FutureTrigger.depth--;
				});
			} else {
				tink_core_FutureTrigger.depth++;
				tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
				tink_core__$Callback_CallbackList_$Impl_$.clear(list);
				tink_core_FutureTrigger.depth--;
			}
			return true;
		}
	}
	,__class__: tink_core_FutureTrigger
};
var tink_core_JsPromiseTools = function() { };
tink_core_JsPromiseTools.__name__ = ["tink","core","JsPromiseTools"];
tink_core_JsPromiseTools.toSurprise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core_JsPromiseTools.toPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
var tink_core__$Lazy_Lazy_$Impl_$ = {};
tink_core__$Lazy_Lazy_$Impl_$.__name__ = ["tink","core","_Lazy","Lazy_Impl_"];
tink_core__$Lazy_Lazy_$Impl_$.get = function(this1) {
	return this1.get();
};
tink_core__$Lazy_Lazy_$Impl_$.ofFunc = function(f) {
	return new tink_core__$Lazy_LazyFunc(f);
};
tink_core__$Lazy_Lazy_$Impl_$.map = function(this1,f) {
	return this1.map(f);
};
tink_core__$Lazy_Lazy_$Impl_$.flatMap = function(this1,f) {
	return this1.flatMap(f);
};
tink_core__$Lazy_Lazy_$Impl_$.ofConst = function(c) {
	return new tink_core__$Lazy_LazyConst(c);
};
var tink_core__$Lazy_LazyObject = function() { };
tink_core__$Lazy_LazyObject.__name__ = ["tink","core","_Lazy","LazyObject"];
tink_core__$Lazy_LazyObject.prototype = {
	get: null
	,map: null
	,flatMap: null
	,__class__: tink_core__$Lazy_LazyObject
};
var tink_core__$Lazy_LazyConst = function(value) {
	this.value = value;
};
tink_core__$Lazy_LazyConst.__name__ = ["tink","core","_Lazy","LazyConst"];
tink_core__$Lazy_LazyConst.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyConst.prototype = {
	value: null
	,get: function() {
		return this.value;
	}
	,map: function(f) {
		return new tink_core__$Lazy_LazyConst(f(this.value));
	}
	,flatMap: function(f) {
		return f(this.value);
	}
	,__class__: tink_core__$Lazy_LazyConst
};
var tink_core__$Lazy_LazyFunc = function(f) {
	this.f = f;
};
tink_core__$Lazy_LazyFunc.__name__ = ["tink","core","_Lazy","LazyFunc"];
tink_core__$Lazy_LazyFunc.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyFunc.prototype = {
	f: null
	,result: null
	,get: function() {
		if(this.f != null) {
			this.result = this.f();
			this.f = null;
		}
		return this.result;
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var tmp = _gthis.get();
			return f(tmp);
		});
	}
	,flatMap: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var this1 = _gthis.get();
			return f(this1).get();
		});
	}
	,__class__: tink_core__$Lazy_LazyFunc
};
var tink_core_NamedWith = function(name,value) {
	this.name = name;
	this.value = value;
};
tink_core_NamedWith.__name__ = ["tink","core","NamedWith"];
tink_core_NamedWith.prototype = {
	name: null
	,value: null
	,__class__: tink_core_NamedWith
};
var tink_core_Noise = { __ename__ : ["tink","core","Noise"], __constructs__ : ["Noise"] };
tink_core_Noise.Noise = ["Noise",0];
tink_core_Noise.Noise.__enum__ = tink_core_Noise;
var tink_core_OptionTools = function() { };
tink_core_OptionTools.__name__ = ["tink","core","OptionTools"];
tink_core_OptionTools.force = function(o,pos) {
	if(o[1] == 0) {
		var v = o[2];
		return v;
	} else {
		throw new js__$Boot_HaxeError(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.or = function(o,l) {
	if(o[1] == 0) {
		var v = o[2];
		return v;
	} else {
		return l.get();
	}
};
tink_core_OptionTools.filter = function(o,f) {
	if(o[1] == 0) {
		var _hx_tmp = f(o[2]);
		if(_hx_tmp == false) {
			return haxe_ds_Option.None;
		} else {
			return o;
		}
	} else {
		return o;
	}
};
tink_core_OptionTools.satisfies = function(o,f) {
	if(o[1] == 0) {
		var v = o[2];
		return f(v);
	} else {
		return false;
	}
};
tink_core_OptionTools.equals = function(o,v) {
	if(o[1] == 0) {
		var v1 = o[2];
		return v1 == v;
	} else {
		return false;
	}
};
tink_core_OptionTools.map = function(o,f) {
	if(o[1] == 0) {
		var v = o[2];
		return haxe_ds_Option.Some(f(v));
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.flatMap = function(o,f) {
	if(o[1] == 0) {
		var v = o[2];
		return f(v);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.iterator = function(o) {
	return new tink_core_OptionIter(o);
};
tink_core_OptionTools.toArray = function(o) {
	if(o[1] == 0) {
		var v = o[2];
		return [v];
	} else {
		return [];
	}
};
var tink_core_OptionIter = function(o) {
	this.alive = true;
	if(o[1] == 0) {
		var v = o[2];
		this.value = v;
	} else {
		this.alive = false;
	}
};
tink_core_OptionIter.__name__ = ["tink","core","OptionIter"];
tink_core_OptionIter.prototype = {
	value: null
	,alive: null
	,hasNext: function() {
		return this.alive;
	}
	,next: function() {
		this.alive = false;
		return this.value;
	}
	,__class__: tink_core_OptionIter
};
var tink_core_Outcome = { __ename__ : ["tink","core","Outcome"], __constructs__ : ["Success","Failure"] };
tink_core_Outcome.Success = function(data) { var $x = ["Success",0,data]; $x.__enum__ = tink_core_Outcome; return $x; };
tink_core_Outcome.Failure = function(failure) { var $x = ["Failure",1,failure]; $x.__enum__ = tink_core_Outcome; return $x; };
var tink_core_OutcomeTools = function() { };
tink_core_OutcomeTools.__name__ = ["tink","core","OutcomeTools"];
tink_core_OutcomeTools.sure = function(outcome) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data;
	case 1:
		var failure = outcome[2];
		if(js_Boot.__instanceof(failure,tink_core_TypedError)) {
			return failure.throwSelf();
		} else {
			throw new js__$Boot_HaxeError(failure);
		}
		break;
	}
};
tink_core_OutcomeTools.toOption = function(outcome) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return haxe_ds_Option.Some(data);
	case 1:
		return haxe_ds_Option.None;
	}
};
tink_core_OutcomeTools.toOutcome = function(option,pos) {
	switch(option[1]) {
	case 0:
		var value = option[2];
		return tink_core_Outcome.Success(value);
	case 1:
		return tink_core_Outcome.Failure(new tink_core_TypedError(404,"Some value expected but none found in " + pos.fileName + "@line " + pos.lineNumber,{ fileName : "Outcome.hx", lineNumber : 37, className : "tink.core.OutcomeTools", methodName : "toOutcome"}));
	}
};
tink_core_OutcomeTools.orNull = function(outcome) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data;
	case 1:
		return null;
	}
};
tink_core_OutcomeTools.orUse = function(outcome,fallback) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.orTry = function(outcome,fallback) {
	switch(outcome[1]) {
	case 0:
		return outcome;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.equals = function(outcome,to) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data == to;
	case 1:
		return false;
	}
};
tink_core_OutcomeTools.map = function(outcome,transform) {
	switch(outcome[1]) {
	case 0:
		var a = outcome[2];
		return tink_core_Outcome.Success(transform(a));
	case 1:
		var f = outcome[2];
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.isSuccess = function(outcome) {
	if(outcome[1] == 0) {
		return true;
	} else {
		return false;
	}
};
tink_core_OutcomeTools.flatMap = function(o,mapper) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$.apply(mapper,o);
};
tink_core_OutcomeTools.attempt = function(f,report) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return tink_core_Outcome.Failure(report(e));
	}
};
var tink_core__$Outcome_OutcomeMapper_$Impl_$ = {};
tink_core__$Outcome_OutcomeMapper_$Impl_$.__name__ = ["tink","core","_Outcome","OutcomeMapper_Impl_"];
tink_core__$Outcome_OutcomeMapper_$Impl_$._new = function(f) {
	var this1 = { f : f};
	return this1;
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.apply = function(this1,o) {
	return this1.f(o);
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return f(d);
		case 1:
			var f1 = o[2];
			return tink_core_Outcome.Failure(f1);
		}
	});
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withEitherError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			var _g = f(d);
			switch(_g[1]) {
			case 0:
				var d1 = _g[2];
				return tink_core_Outcome.Success(d1);
			case 1:
				var f1 = _g[2];
				return tink_core_Outcome.Failure(haxe_ds_Either.Right(f1));
			}
			break;
		case 1:
			var f2 = o[2];
			return tink_core_Outcome.Failure(haxe_ds_Either.Left(f2));
		}
	});
};
var tink_core__$Pair_Pair_$Impl_$ = {};
tink_core__$Pair_Pair_$Impl_$.__name__ = ["tink","core","_Pair","Pair_Impl_"];
tink_core__$Pair_Pair_$Impl_$._new = function(a,b) {
	var this1 = new tink_core_MPair(a,b);
	return this1;
};
tink_core__$Pair_Pair_$Impl_$.get_a = function(this1) {
	return this1.a;
};
tink_core__$Pair_Pair_$Impl_$.get_b = function(this1) {
	return this1.b;
};
tink_core__$Pair_Pair_$Impl_$.toBool = function(this1) {
	return this1 != null;
};
tink_core__$Pair_Pair_$Impl_$.isNil = function(this1) {
	return this1 == null;
};
tink_core__$Pair_Pair_$Impl_$.nil = function() {
	return null;
};
var tink_core_MPair = function(a,b) {
	this.a = a;
	this.b = b;
};
tink_core_MPair.__name__ = ["tink","core","MPair"];
tink_core_MPair.prototype = {
	a: null
	,b: null
	,__class__: tink_core_MPair
};
var tink_core__$Promise_Promise_$Impl_$ = {};
tink_core__$Promise_Promise_$Impl_$.__name__ = ["tink","core","_Promise","Promise_Impl_"];
tink_core__$Promise_Promise_$Impl_$.map = function(this1,f) {
	var ret = this1.map(f);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.flatMap = function(this1,f) {
	var ret = this1.flatMap(f);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.tryRecover = function(this1,f) {
	var ret = this1.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
		case 1:
			var e = o[2];
			return f(e);
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.recover = function(this1,f) {
	var ret = this1.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(d));
		case 1:
			var e = o[2];
			return f(e);
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.handle = function(this1,cb) {
	return this1.handle(cb);
};
tink_core__$Promise_Promise_$Impl_$.noise = function(this1) {
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(v) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
	});
};
tink_core__$Promise_Promise_$Impl_$.next = function(this1,f) {
	return tink_core__$Future_Future_$Impl_$._tryFailingFlatMap(this1,function(result) {
		return f(result);
	});
};
tink_core__$Promise_Promise_$Impl_$.ofSpecific = function(s) {
	return s;
};
tink_core__$Promise_Promise_$Impl_$.ofFuture = function(f) {
	var ret = f.map(tink_core_Outcome.Success);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.ofOutcome = function(o) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
};
tink_core__$Promise_Promise_$Impl_$.ofError = function(e) {
	return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(e));
};
tink_core__$Promise_Promise_$Impl_$.ofData = function(d) {
	return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(d));
};
tink_core__$Promise_Promise_$Impl_$.inParallel = function(a,lazy) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var result = [];
		var pending = a.length;
		var links = null;
		var sync = false;
		var done = function(o) {
			if(links == null) {
				sync = true;
			} else if(links != null) {
				links.dissolve();
			}
			cb(o);
		};
		var fail = function(e) {
			done(tink_core_Outcome.Failure(e));
		};
		var set = function(index,value) {
			result[index] = value;
			if((pending -= 1) == 0) {
				done(tink_core_Outcome.Success(result));
			}
		};
		var linkArray = [];
		var _g1 = 0;
		var _g = a.length;
		while(_g1 < _g) {
			var i = [_g1++];
			if(sync) {
				break;
			}
			var i1 = i[0];
			var tmp = (function(i2) {
				return function(o1) {
					switch(o1[1]) {
					case 0:
						var v = o1[2];
						set(i2[0],v);
						break;
					case 1:
						var e1 = o1[2];
						fail(e1);
						break;
					}
				};
			})(i);
			linkArray.push(a[i1].handle(tmp));
		}
		links = tink_core__$Callback_CallbackLink_$Impl_$.fromMany(linkArray);
		if(sync) {
			if(links != null) {
				links.dissolve();
			}
		}
	},lazy);
};
tink_core__$Promise_Promise_$Impl_$.inSequence = function(a) {
	var loop = null;
	loop = function(index) {
		if(index == a.length) {
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success([]));
		} else {
			return tink_core__$Promise_Promise_$Impl_$.next(a[index],function(head) {
				return tink_core__$Promise_Promise_$Impl_$.next(loop(index + 1),function(tail) {
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success([head].concat(tail)));
				});
			});
		}
	};
	var loop1 = loop;
	return loop1(0);
};
tink_core__$Promise_Promise_$Impl_$.lift = function(p) {
	return p;
};
var tink_core__$Promise_Next_$Impl_$ = {};
tink_core__$Promise_Next_$Impl_$.__name__ = ["tink","core","_Promise","Next_Impl_"];
tink_core__$Promise_Next_$Impl_$.ofSafe = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x)));
	};
};
tink_core__$Promise_Next_$Impl_$.ofSync = function(f) {
	return function(x) {
		var ret = f(x).map(tink_core_Outcome.Success);
		return ret.gather();
	};
};
tink_core__$Promise_Next_$Impl_$.ofSafeSync = function(f) {
	return function(x) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(f(x)));
	};
};
tink_core__$Promise_Next_$Impl_$._chain = function(a,b) {
	return function(v) {
		return tink_core__$Promise_Promise_$Impl_$.next(a(v),b);
	};
};
var tink_core__$Promise_Recover_$Impl_$ = {};
tink_core__$Promise_Recover_$Impl_$.__name__ = ["tink","core","_Promise","Recover_Impl_"];
tink_core__$Promise_Recover_$Impl_$.ofSync = function(f) {
	return function(e) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(e)));
	};
};
var tink_core__$Ref_Ref_$Impl_$ = {};
tink_core__$Ref_Ref_$Impl_$.__name__ = ["tink","core","_Ref","Ref_Impl_"];
tink_core__$Ref_Ref_$Impl_$._new = function() {
	var this1;
	var this2 = new Array(1);
	this1 = this2;
	return this1;
};
tink_core__$Ref_Ref_$Impl_$.get_value = function(this1) {
	return this1[0];
};
tink_core__$Ref_Ref_$Impl_$.set_value = function(this1,param) {
	return this1[0] = param;
};
tink_core__$Ref_Ref_$Impl_$.toString = function(this1) {
	return "@[" + Std.string(this1[0]) + "]";
};
tink_core__$Ref_Ref_$Impl_$.to = function(v) {
	var this1;
	var this2 = new Array(1);
	this1 = this2;
	var ret = this1;
	ret[0] = v;
	return ret;
};
var tink_core__$Signal_Signal_$Impl_$ = {};
tink_core__$Signal_Signal_$Impl_$.__name__ = ["tink","core","_Signal","Signal_Impl_"];
tink_core__$Signal_Signal_$Impl_$._new = function(f) {
	var this1 = new tink_core__$Signal_SimpleSignal(f);
	return this1;
};
tink_core__$Signal_Signal_$Impl_$.handle = function(this1,handler) {
	return this1.handle(handler);
};
tink_core__$Signal_Signal_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			var data = f(result);
			cb(data);
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.flatMap = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			f(result).handle(cb);
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.filter = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			if(f(result)) {
				cb(result);
			}
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.join = function(this1,other,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return new tink_core__$Callback_LinkPair(this1.handle(cb),other.handle(cb));
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.next = function(this1) {
	var ret = new tink_core_FutureTrigger();
	var link = null;
	var immediate = false;
	link = this1.handle(function(v) {
		ret.trigger(v);
		if(link == null) {
			immediate = true;
		} else if(link != null) {
			link.dissolve();
		}
	});
	if(immediate) {
		if(link != null) {
			link.dissolve();
		}
	}
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.noise = function(this1) {
	return tink_core__$Signal_Signal_$Impl_$.map(this1,function(_) {
		return tink_core_Noise.Noise;
	});
};
tink_core__$Signal_Signal_$Impl_$.gather = function(this1) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	this1.handle(function(x) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(ret.handlers,x);
	});
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.trigger = function() {
	return new tink_core_SignalTrigger();
};
tink_core__$Signal_Signal_$Impl_$.ofClassical = function(add,remove,gather) {
	if(gather == null) {
		gather = true;
	}
	var this1 = new tink_core__$Signal_SimpleSignal(function(cb) {
		var f = function(a) {
			cb(a);
		};
		add(f);
		var this2;
		var f1 = remove;
		var a1 = f;
		this2 = new tink_core__$Callback_SimpleLink(function() {
			f1(a1);
		});
		return this2;
	});
	var ret = this1;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
var tink_core_SignalObject = function() { };
tink_core_SignalObject.__name__ = ["tink","core","SignalObject"];
tink_core_SignalObject.prototype = {
	handle: null
	,__class__: tink_core_SignalObject
};
var tink_core__$Signal_SimpleSignal = function(f) {
	this.f = f;
};
tink_core__$Signal_SimpleSignal.__name__ = ["tink","core","_Signal","SimpleSignal"];
tink_core__$Signal_SimpleSignal.__interfaces__ = [tink_core_SignalObject];
tink_core__$Signal_SimpleSignal.prototype = {
	f: null
	,handle: function(cb) {
		return this.f(cb);
	}
	,__class__: tink_core__$Signal_SimpleSignal
};
var tink_core_SignalTrigger = function() {
	var this1 = [];
	this.handlers = this1;
};
tink_core_SignalTrigger.__name__ = ["tink","core","SignalTrigger"];
tink_core_SignalTrigger.__interfaces__ = [tink_core_SignalObject];
tink_core_SignalTrigger.prototype = {
	handlers: null
	,trigger: function(event) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(this.handlers,event);
	}
	,getLength: function() {
		return this.handlers.length;
	}
	,handle: function(cb) {
		return tink_core__$Callback_CallbackList_$Impl_$.add(this.handlers,cb);
	}
	,clear: function() {
		tink_core__$Callback_CallbackList_$Impl_$.clear(this.handlers);
	}
	,asSignal: function() {
		return this;
	}
	,__class__: tink_core_SignalTrigger
};
var tink_macro_DirectType = function() { };
tink_macro_DirectType.__name__ = ["tink","macro","DirectType"];
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.__name__ = ["Array"];
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
var scope = ("undefined" !== typeof window && window) || ("undefined" !== typeof global && global) || Function("return this")();
if(!scope.setImmediate) {
	scope.setImmediate = function(callback) {
		scope.setTimeout(callback,0);
	};
}
var lastTime = 0;
var vendors = ["webkit","moz"];
var x = 0;
while(x < vendors.length && !scope.requestAnimationFrame) {
	scope.requestAnimationFrame = scope[vendors[x] + "RequestAnimationFrame"];
	scope.cancelAnimationFrame = scope[vendors[x] + "CancelAnimationFrame"] || scope[vendors[x] + "CancelRequestAnimationFrame"];
	++x;
}
if(!scope.requestAnimationFrame) {
	scope.requestAnimationFrame = function(callback1) {
		var currTime = new Date().getTime();
		var timeToCall = Math.max(0,16 - (currTime - lastTime));
		var id = scope.setTimeout(function() {
			callback1(currTime + timeToCall);
		},timeToCall);
		lastTime = currTime + timeToCall;
		return id;
	};
}
if(!scope.cancelAnimationFrame) {
	scope.cancelAnimationFrame = function(id1) {
		scope.clearTimeout(id1);
	};
}
if(typeof(scope.performance) == "undefined") {
	scope.performance = { };
}
if(typeof(scope.performance.now) == "undefined") {
	var nowOffset = new Date().getTime();
	if(scope.performance.timing && scope.performance.timing.navigationStart) {
		nowOffset = scope.performance.timing.navigationStart;
	}
	var now = function() {
		return new Date() - nowOffset;
	};
	scope.performance.now = now;
}
thx_color_palettes_Web.names = new haxe_ds_StringMap();
var value = thx_color_palettes_Web.aliceblue = 15792383;
var _this = thx_color_palettes_Web.names;
if(__map_reserved["aliceblue"] != null) {
	_this.setReserved("aliceblue",value);
} else {
	_this.h["aliceblue"] = value;
}
var value1 = thx_color_palettes_Web.aliceblue;
var _this1 = thx_color_palettes_Web.names;
if(__map_reserved["alice blue"] != null) {
	_this1.setReserved("alice blue",value1);
} else {
	_this1.h["alice blue"] = value1;
}
var value2 = thx_color_palettes_Web.antiquewhite = 16444375;
var _this2 = thx_color_palettes_Web.names;
if(__map_reserved["antiquewhite"] != null) {
	_this2.setReserved("antiquewhite",value2);
} else {
	_this2.h["antiquewhite"] = value2;
}
var value3 = thx_color_palettes_Web.antiquewhite;
var _this3 = thx_color_palettes_Web.names;
if(__map_reserved["antique white"] != null) {
	_this3.setReserved("antique white",value3);
} else {
	_this3.h["antique white"] = value3;
}
var value4 = thx_color_palettes_Web.aqua = 65535;
var _this4 = thx_color_palettes_Web.names;
if(__map_reserved["aqua"] != null) {
	_this4.setReserved("aqua",value4);
} else {
	_this4.h["aqua"] = value4;
}
var value5 = thx_color_palettes_Web.aquamarine = 8388564;
var _this5 = thx_color_palettes_Web.names;
if(__map_reserved["aquamarine"] != null) {
	_this5.setReserved("aquamarine",value5);
} else {
	_this5.h["aquamarine"] = value5;
}
var value6 = thx_color_palettes_Web.azure = 15794175;
var _this6 = thx_color_palettes_Web.names;
if(__map_reserved["azure"] != null) {
	_this6.setReserved("azure",value6);
} else {
	_this6.h["azure"] = value6;
}
var value7 = thx_color_palettes_Web.beige = 16119260;
var _this7 = thx_color_palettes_Web.names;
if(__map_reserved["beige"] != null) {
	_this7.setReserved("beige",value7);
} else {
	_this7.h["beige"] = value7;
}
var value8 = thx_color_palettes_Web.bisque = 16770244;
var _this8 = thx_color_palettes_Web.names;
if(__map_reserved["bisque"] != null) {
	_this8.setReserved("bisque",value8);
} else {
	_this8.h["bisque"] = value8;
}
var value9 = thx_color_palettes_Web.black = 0;
var _this9 = thx_color_palettes_Web.names;
if(__map_reserved["black"] != null) {
	_this9.setReserved("black",value9);
} else {
	_this9.h["black"] = value9;
}
var value10 = thx_color_palettes_Web.blanchedalmond = 16772045;
var _this10 = thx_color_palettes_Web.names;
if(__map_reserved["blanchedalmond"] != null) {
	_this10.setReserved("blanchedalmond",value10);
} else {
	_this10.h["blanchedalmond"] = value10;
}
var value11 = thx_color_palettes_Web.blanchedalmond;
var _this11 = thx_color_palettes_Web.names;
if(__map_reserved["blanched almond"] != null) {
	_this11.setReserved("blanched almond",value11);
} else {
	_this11.h["blanched almond"] = value11;
}
var value12 = thx_color_palettes_Web.blue = 255;
var _this12 = thx_color_palettes_Web.names;
if(__map_reserved["blue"] != null) {
	_this12.setReserved("blue",value12);
} else {
	_this12.h["blue"] = value12;
}
var value13 = thx_color_palettes_Web.blueviolet = 9055202;
var _this13 = thx_color_palettes_Web.names;
if(__map_reserved["blueviolet"] != null) {
	_this13.setReserved("blueviolet",value13);
} else {
	_this13.h["blueviolet"] = value13;
}
var value14 = thx_color_palettes_Web.blueviolet;
var _this14 = thx_color_palettes_Web.names;
if(__map_reserved["blue violet"] != null) {
	_this14.setReserved("blue violet",value14);
} else {
	_this14.h["blue violet"] = value14;
}
var value15 = thx_color_palettes_Web.brown = 10824234;
var _this15 = thx_color_palettes_Web.names;
if(__map_reserved["brown"] != null) {
	_this15.setReserved("brown",value15);
} else {
	_this15.h["brown"] = value15;
}
var value16 = thx_color_palettes_Web.burlywood = 14596231;
var _this16 = thx_color_palettes_Web.names;
if(__map_reserved["burlywood"] != null) {
	_this16.setReserved("burlywood",value16);
} else {
	_this16.h["burlywood"] = value16;
}
var value17 = thx_color_palettes_Web.burlywood;
var _this17 = thx_color_palettes_Web.names;
if(__map_reserved["burly wood"] != null) {
	_this17.setReserved("burly wood",value17);
} else {
	_this17.h["burly wood"] = value17;
}
var value18 = thx_color_palettes_Web.cadetblue = 6266528;
var _this18 = thx_color_palettes_Web.names;
if(__map_reserved["cadetblue"] != null) {
	_this18.setReserved("cadetblue",value18);
} else {
	_this18.h["cadetblue"] = value18;
}
var value19 = thx_color_palettes_Web.cadetblue;
var _this19 = thx_color_palettes_Web.names;
if(__map_reserved["cadet blue"] != null) {
	_this19.setReserved("cadet blue",value19);
} else {
	_this19.h["cadet blue"] = value19;
}
var value20 = thx_color_palettes_Web.chartreuse = 8388352;
var _this20 = thx_color_palettes_Web.names;
if(__map_reserved["chartreuse"] != null) {
	_this20.setReserved("chartreuse",value20);
} else {
	_this20.h["chartreuse"] = value20;
}
var value21 = thx_color_palettes_Web.chartreuse;
var _this21 = thx_color_palettes_Web.names;
if(__map_reserved["chart reuse"] != null) {
	_this21.setReserved("chart reuse",value21);
} else {
	_this21.h["chart reuse"] = value21;
}
var value22 = thx_color_palettes_Web.chocolate = 13789470;
var _this22 = thx_color_palettes_Web.names;
if(__map_reserved["chocolate"] != null) {
	_this22.setReserved("chocolate",value22);
} else {
	_this22.h["chocolate"] = value22;
}
var value23 = thx_color_palettes_Web.coral = 16744272;
var _this23 = thx_color_palettes_Web.names;
if(__map_reserved["coral"] != null) {
	_this23.setReserved("coral",value23);
} else {
	_this23.h["coral"] = value23;
}
var value24 = thx_color_palettes_Web.cornflowerblue = 6591981;
var _this24 = thx_color_palettes_Web.names;
if(__map_reserved["cornflowerblue"] != null) {
	_this24.setReserved("cornflowerblue",value24);
} else {
	_this24.h["cornflowerblue"] = value24;
}
var value25 = thx_color_palettes_Web.cornflowerblue;
var _this25 = thx_color_palettes_Web.names;
if(__map_reserved["corn flower blue"] != null) {
	_this25.setReserved("corn flower blue",value25);
} else {
	_this25.h["corn flower blue"] = value25;
}
var value26 = thx_color_palettes_Web.cornsilk = 16775388;
var _this26 = thx_color_palettes_Web.names;
if(__map_reserved["cornsilk"] != null) {
	_this26.setReserved("cornsilk",value26);
} else {
	_this26.h["cornsilk"] = value26;
}
var value27 = thx_color_palettes_Web.cornsilk;
var _this27 = thx_color_palettes_Web.names;
if(__map_reserved["corn silk"] != null) {
	_this27.setReserved("corn silk",value27);
} else {
	_this27.h["corn silk"] = value27;
}
var value28 = thx_color_palettes_Web.crimson = 14423100;
var _this28 = thx_color_palettes_Web.names;
if(__map_reserved["crimson"] != null) {
	_this28.setReserved("crimson",value28);
} else {
	_this28.h["crimson"] = value28;
}
var value29 = thx_color_palettes_Web.cyan = 65535;
var _this29 = thx_color_palettes_Web.names;
if(__map_reserved["cyan"] != null) {
	_this29.setReserved("cyan",value29);
} else {
	_this29.h["cyan"] = value29;
}
var value30 = thx_color_palettes_Web.darkblue = 139;
var _this30 = thx_color_palettes_Web.names;
if(__map_reserved["darkblue"] != null) {
	_this30.setReserved("darkblue",value30);
} else {
	_this30.h["darkblue"] = value30;
}
var value31 = thx_color_palettes_Web.darkblue;
var _this31 = thx_color_palettes_Web.names;
if(__map_reserved["dark blue"] != null) {
	_this31.setReserved("dark blue",value31);
} else {
	_this31.h["dark blue"] = value31;
}
var value32 = thx_color_palettes_Web.darkcyan = 35723;
var _this32 = thx_color_palettes_Web.names;
if(__map_reserved["darkcyan"] != null) {
	_this32.setReserved("darkcyan",value32);
} else {
	_this32.h["darkcyan"] = value32;
}
var value33 = thx_color_palettes_Web.darkcyan;
var _this33 = thx_color_palettes_Web.names;
if(__map_reserved["dark cyan"] != null) {
	_this33.setReserved("dark cyan",value33);
} else {
	_this33.h["dark cyan"] = value33;
}
var value34 = thx_color_palettes_Web.darkgoldenrod = 12092939;
var _this34 = thx_color_palettes_Web.names;
if(__map_reserved["darkgoldenrod"] != null) {
	_this34.setReserved("darkgoldenrod",value34);
} else {
	_this34.h["darkgoldenrod"] = value34;
}
var value35 = thx_color_palettes_Web.darkgoldenrod;
var _this35 = thx_color_palettes_Web.names;
if(__map_reserved["dark golden rod"] != null) {
	_this35.setReserved("dark golden rod",value35);
} else {
	_this35.h["dark golden rod"] = value35;
}
var value36 = thx_color_palettes_Web.darkgray = thx_color_palettes_Web.darkgrey = 11119017;
var _this36 = thx_color_palettes_Web.names;
if(__map_reserved["darkgray"] != null) {
	_this36.setReserved("darkgray",value36);
} else {
	_this36.h["darkgray"] = value36;
}
var value37 = thx_color_palettes_Web.darkgray;
var _this37 = thx_color_palettes_Web.names;
if(__map_reserved["dark gray"] != null) {
	_this37.setReserved("dark gray",value37);
} else {
	_this37.h["dark gray"] = value37;
}
var value38 = thx_color_palettes_Web.darkgrey;
var _this38 = thx_color_palettes_Web.names;
if(__map_reserved["darkgrey"] != null) {
	_this38.setReserved("darkgrey",value38);
} else {
	_this38.h["darkgrey"] = value38;
}
var value39 = thx_color_palettes_Web.darkgrey;
var _this39 = thx_color_palettes_Web.names;
if(__map_reserved["dark grey"] != null) {
	_this39.setReserved("dark grey",value39);
} else {
	_this39.h["dark grey"] = value39;
}
var value40 = thx_color_palettes_Web.darkgreen = 25600;
var _this40 = thx_color_palettes_Web.names;
if(__map_reserved["darkgreen"] != null) {
	_this40.setReserved("darkgreen",value40);
} else {
	_this40.h["darkgreen"] = value40;
}
var value41 = thx_color_palettes_Web.darkgreen;
var _this41 = thx_color_palettes_Web.names;
if(__map_reserved["dark green"] != null) {
	_this41.setReserved("dark green",value41);
} else {
	_this41.h["dark green"] = value41;
}
var value42 = thx_color_palettes_Web.darkkhaki = 12433259;
var _this42 = thx_color_palettes_Web.names;
if(__map_reserved["darkkhaki"] != null) {
	_this42.setReserved("darkkhaki",value42);
} else {
	_this42.h["darkkhaki"] = value42;
}
var value43 = thx_color_palettes_Web.darkkhaki;
var _this43 = thx_color_palettes_Web.names;
if(__map_reserved["dark khaki"] != null) {
	_this43.setReserved("dark khaki",value43);
} else {
	_this43.h["dark khaki"] = value43;
}
var value44 = thx_color_palettes_Web.darkmagenta = 9109643;
var _this44 = thx_color_palettes_Web.names;
if(__map_reserved["darkmagenta"] != null) {
	_this44.setReserved("darkmagenta",value44);
} else {
	_this44.h["darkmagenta"] = value44;
}
var value45 = thx_color_palettes_Web.darkmagenta;
var _this45 = thx_color_palettes_Web.names;
if(__map_reserved["dark magenta"] != null) {
	_this45.setReserved("dark magenta",value45);
} else {
	_this45.h["dark magenta"] = value45;
}
var value46 = thx_color_palettes_Web.darkolivegreen = 5597999;
var _this46 = thx_color_palettes_Web.names;
if(__map_reserved["darkolivegreen"] != null) {
	_this46.setReserved("darkolivegreen",value46);
} else {
	_this46.h["darkolivegreen"] = value46;
}
var value47 = thx_color_palettes_Web.darkolivegreen;
var _this47 = thx_color_palettes_Web.names;
if(__map_reserved["dark olive green"] != null) {
	_this47.setReserved("dark olive green",value47);
} else {
	_this47.h["dark olive green"] = value47;
}
var value48 = thx_color_palettes_Web.darkorange = 16747520;
var _this48 = thx_color_palettes_Web.names;
if(__map_reserved["darkorange"] != null) {
	_this48.setReserved("darkorange",value48);
} else {
	_this48.h["darkorange"] = value48;
}
var value49 = thx_color_palettes_Web.darkorange;
var _this49 = thx_color_palettes_Web.names;
if(__map_reserved["dark orange"] != null) {
	_this49.setReserved("dark orange",value49);
} else {
	_this49.h["dark orange"] = value49;
}
var value50 = thx_color_palettes_Web.darkorchid = 10040012;
var _this50 = thx_color_palettes_Web.names;
if(__map_reserved["darkorchid"] != null) {
	_this50.setReserved("darkorchid",value50);
} else {
	_this50.h["darkorchid"] = value50;
}
var value51 = thx_color_palettes_Web.darkorchid;
var _this51 = thx_color_palettes_Web.names;
if(__map_reserved["dark orchid"] != null) {
	_this51.setReserved("dark orchid",value51);
} else {
	_this51.h["dark orchid"] = value51;
}
var value52 = thx_color_palettes_Web.darkred = 9109504;
var _this52 = thx_color_palettes_Web.names;
if(__map_reserved["darkred"] != null) {
	_this52.setReserved("darkred",value52);
} else {
	_this52.h["darkred"] = value52;
}
var value53 = thx_color_palettes_Web.darkred;
var _this53 = thx_color_palettes_Web.names;
if(__map_reserved["dark red"] != null) {
	_this53.setReserved("dark red",value53);
} else {
	_this53.h["dark red"] = value53;
}
var value54 = thx_color_palettes_Web.darksalmon = 15308410;
var _this54 = thx_color_palettes_Web.names;
if(__map_reserved["darksalmon"] != null) {
	_this54.setReserved("darksalmon",value54);
} else {
	_this54.h["darksalmon"] = value54;
}
var value55 = thx_color_palettes_Web.darksalmon;
var _this55 = thx_color_palettes_Web.names;
if(__map_reserved["dark salmon"] != null) {
	_this55.setReserved("dark salmon",value55);
} else {
	_this55.h["dark salmon"] = value55;
}
var value56 = thx_color_palettes_Web.darkseagreen = 9419919;
var _this56 = thx_color_palettes_Web.names;
if(__map_reserved["darkseagreen"] != null) {
	_this56.setReserved("darkseagreen",value56);
} else {
	_this56.h["darkseagreen"] = value56;
}
var value57 = thx_color_palettes_Web.darkseagreen;
var _this57 = thx_color_palettes_Web.names;
if(__map_reserved["dark sea green"] != null) {
	_this57.setReserved("dark sea green",value57);
} else {
	_this57.h["dark sea green"] = value57;
}
var value58 = thx_color_palettes_Web.darkslateblue = 4734347;
var _this58 = thx_color_palettes_Web.names;
if(__map_reserved["darkslateblue"] != null) {
	_this58.setReserved("darkslateblue",value58);
} else {
	_this58.h["darkslateblue"] = value58;
}
var value59 = thx_color_palettes_Web.darkslateblue;
var _this59 = thx_color_palettes_Web.names;
if(__map_reserved["dark slate blue"] != null) {
	_this59.setReserved("dark slate blue",value59);
} else {
	_this59.h["dark slate blue"] = value59;
}
var value60 = thx_color_palettes_Web.darkslategray = thx_color_palettes_Web.darkslategrey = 3100495;
var _this60 = thx_color_palettes_Web.names;
if(__map_reserved["darkslategray"] != null) {
	_this60.setReserved("darkslategray",value60);
} else {
	_this60.h["darkslategray"] = value60;
}
var value61 = thx_color_palettes_Web.darkslategray;
var _this61 = thx_color_palettes_Web.names;
if(__map_reserved["dark slate gray"] != null) {
	_this61.setReserved("dark slate gray",value61);
} else {
	_this61.h["dark slate gray"] = value61;
}
var value62 = thx_color_palettes_Web.darkslategrey;
var _this62 = thx_color_palettes_Web.names;
if(__map_reserved["darkslategrey"] != null) {
	_this62.setReserved("darkslategrey",value62);
} else {
	_this62.h["darkslategrey"] = value62;
}
var value63 = thx_color_palettes_Web.darkslategrey;
var _this63 = thx_color_palettes_Web.names;
if(__map_reserved["dark slate grey"] != null) {
	_this63.setReserved("dark slate grey",value63);
} else {
	_this63.h["dark slate grey"] = value63;
}
var value64 = thx_color_palettes_Web.darkturquoise = 52945;
var _this64 = thx_color_palettes_Web.names;
if(__map_reserved["darkturquoise"] != null) {
	_this64.setReserved("darkturquoise",value64);
} else {
	_this64.h["darkturquoise"] = value64;
}
var value65 = thx_color_palettes_Web.darkturquoise;
var _this65 = thx_color_palettes_Web.names;
if(__map_reserved["dark turquoise"] != null) {
	_this65.setReserved("dark turquoise",value65);
} else {
	_this65.h["dark turquoise"] = value65;
}
var value66 = thx_color_palettes_Web.darkviolet = 9699539;
var _this66 = thx_color_palettes_Web.names;
if(__map_reserved["darkviolet"] != null) {
	_this66.setReserved("darkviolet",value66);
} else {
	_this66.h["darkviolet"] = value66;
}
var value67 = thx_color_palettes_Web.darkviolet;
var _this67 = thx_color_palettes_Web.names;
if(__map_reserved["dark violet"] != null) {
	_this67.setReserved("dark violet",value67);
} else {
	_this67.h["dark violet"] = value67;
}
var value68 = thx_color_palettes_Web.deeppink = 16716947;
var _this68 = thx_color_palettes_Web.names;
if(__map_reserved["deeppink"] != null) {
	_this68.setReserved("deeppink",value68);
} else {
	_this68.h["deeppink"] = value68;
}
var value69 = thx_color_palettes_Web.deeppink;
var _this69 = thx_color_palettes_Web.names;
if(__map_reserved["deep pink"] != null) {
	_this69.setReserved("deep pink",value69);
} else {
	_this69.h["deep pink"] = value69;
}
var value70 = thx_color_palettes_Web.deepskyblue = 49151;
var _this70 = thx_color_palettes_Web.names;
if(__map_reserved["deepskyblue"] != null) {
	_this70.setReserved("deepskyblue",value70);
} else {
	_this70.h["deepskyblue"] = value70;
}
var value71 = thx_color_palettes_Web.deepskyblue;
var _this71 = thx_color_palettes_Web.names;
if(__map_reserved["deep sky blue"] != null) {
	_this71.setReserved("deep sky blue",value71);
} else {
	_this71.h["deep sky blue"] = value71;
}
var value72 = thx_color_palettes_Web.dimgray = thx_color_palettes_Web.dimgrey = 6908265;
var _this72 = thx_color_palettes_Web.names;
if(__map_reserved["dimgray"] != null) {
	_this72.setReserved("dimgray",value72);
} else {
	_this72.h["dimgray"] = value72;
}
var value73 = thx_color_palettes_Web.dimgray;
var _this73 = thx_color_palettes_Web.names;
if(__map_reserved["dim gray"] != null) {
	_this73.setReserved("dim gray",value73);
} else {
	_this73.h["dim gray"] = value73;
}
var value74 = thx_color_palettes_Web.dimgrey;
var _this74 = thx_color_palettes_Web.names;
if(__map_reserved["dimgrey"] != null) {
	_this74.setReserved("dimgrey",value74);
} else {
	_this74.h["dimgrey"] = value74;
}
var value75 = thx_color_palettes_Web.dimgrey;
var _this75 = thx_color_palettes_Web.names;
if(__map_reserved["dim grey"] != null) {
	_this75.setReserved("dim grey",value75);
} else {
	_this75.h["dim grey"] = value75;
}
var value76 = thx_color_palettes_Web.dodgerblue = 2003199;
var _this76 = thx_color_palettes_Web.names;
if(__map_reserved["dodgerblue"] != null) {
	_this76.setReserved("dodgerblue",value76);
} else {
	_this76.h["dodgerblue"] = value76;
}
var value77 = thx_color_palettes_Web.dodgerblue;
var _this77 = thx_color_palettes_Web.names;
if(__map_reserved["dodger blue"] != null) {
	_this77.setReserved("dodger blue",value77);
} else {
	_this77.h["dodger blue"] = value77;
}
var value78 = thx_color_palettes_Web.firebrick = 11674146;
var _this78 = thx_color_palettes_Web.names;
if(__map_reserved["firebrick"] != null) {
	_this78.setReserved("firebrick",value78);
} else {
	_this78.h["firebrick"] = value78;
}
var value79 = thx_color_palettes_Web.firebrick;
var _this79 = thx_color_palettes_Web.names;
if(__map_reserved["fire brick"] != null) {
	_this79.setReserved("fire brick",value79);
} else {
	_this79.h["fire brick"] = value79;
}
var value80 = thx_color_palettes_Web.floralwhite = 16775920;
var _this80 = thx_color_palettes_Web.names;
if(__map_reserved["floralwhite"] != null) {
	_this80.setReserved("floralwhite",value80);
} else {
	_this80.h["floralwhite"] = value80;
}
var value81 = thx_color_palettes_Web.floralwhite;
var _this81 = thx_color_palettes_Web.names;
if(__map_reserved["floral white"] != null) {
	_this81.setReserved("floral white",value81);
} else {
	_this81.h["floral white"] = value81;
}
var value82 = thx_color_palettes_Web.forestgreen = 2263842;
var _this82 = thx_color_palettes_Web.names;
if(__map_reserved["forestgreen"] != null) {
	_this82.setReserved("forestgreen",value82);
} else {
	_this82.h["forestgreen"] = value82;
}
var value83 = thx_color_palettes_Web.forestgreen;
var _this83 = thx_color_palettes_Web.names;
if(__map_reserved["forest green"] != null) {
	_this83.setReserved("forest green",value83);
} else {
	_this83.h["forest green"] = value83;
}
var value84 = thx_color_palettes_Web.fuchsia = 16711935;
var _this84 = thx_color_palettes_Web.names;
if(__map_reserved["fuchsia"] != null) {
	_this84.setReserved("fuchsia",value84);
} else {
	_this84.h["fuchsia"] = value84;
}
var value85 = thx_color_palettes_Web.gainsboro = 14474460;
var _this85 = thx_color_palettes_Web.names;
if(__map_reserved["gainsboro"] != null) {
	_this85.setReserved("gainsboro",value85);
} else {
	_this85.h["gainsboro"] = value85;
}
var value86 = thx_color_palettes_Web.ghostwhite = 16316671;
var _this86 = thx_color_palettes_Web.names;
if(__map_reserved["ghostwhite"] != null) {
	_this86.setReserved("ghostwhite",value86);
} else {
	_this86.h["ghostwhite"] = value86;
}
var value87 = thx_color_palettes_Web.ghostwhite;
var _this87 = thx_color_palettes_Web.names;
if(__map_reserved["ghost white"] != null) {
	_this87.setReserved("ghost white",value87);
} else {
	_this87.h["ghost white"] = value87;
}
var value88 = thx_color_palettes_Web.gold = 16766720;
var _this88 = thx_color_palettes_Web.names;
if(__map_reserved["gold"] != null) {
	_this88.setReserved("gold",value88);
} else {
	_this88.h["gold"] = value88;
}
var value89 = thx_color_palettes_Web.goldenrod = 14329120;
var _this89 = thx_color_palettes_Web.names;
if(__map_reserved["goldenrod"] != null) {
	_this89.setReserved("goldenrod",value89);
} else {
	_this89.h["goldenrod"] = value89;
}
var value90 = thx_color_palettes_Web.goldenrod;
var _this90 = thx_color_palettes_Web.names;
if(__map_reserved["golden rod"] != null) {
	_this90.setReserved("golden rod",value90);
} else {
	_this90.h["golden rod"] = value90;
}
var value91 = thx_color_palettes_Web.gray = thx_color_palettes_Web.grey = 8421504;
var _this91 = thx_color_palettes_Web.names;
if(__map_reserved["gray"] != null) {
	_this91.setReserved("gray",value91);
} else {
	_this91.h["gray"] = value91;
}
var value92 = thx_color_palettes_Web.grey;
var _this92 = thx_color_palettes_Web.names;
if(__map_reserved["grey"] != null) {
	_this92.setReserved("grey",value92);
} else {
	_this92.h["grey"] = value92;
}
var value93 = thx_color_palettes_Web.green = 32768;
var _this93 = thx_color_palettes_Web.names;
if(__map_reserved["green"] != null) {
	_this93.setReserved("green",value93);
} else {
	_this93.h["green"] = value93;
}
var value94 = thx_color_palettes_Web.greenyellow = 11403055;
var _this94 = thx_color_palettes_Web.names;
if(__map_reserved["greenyellow"] != null) {
	_this94.setReserved("greenyellow",value94);
} else {
	_this94.h["greenyellow"] = value94;
}
var value95 = thx_color_palettes_Web.greenyellow;
var _this95 = thx_color_palettes_Web.names;
if(__map_reserved["green yellow"] != null) {
	_this95.setReserved("green yellow",value95);
} else {
	_this95.h["green yellow"] = value95;
}
var value96 = thx_color_palettes_Web.honeydew = 15794160;
var _this96 = thx_color_palettes_Web.names;
if(__map_reserved["honeydew"] != null) {
	_this96.setReserved("honeydew",value96);
} else {
	_this96.h["honeydew"] = value96;
}
var value97 = thx_color_palettes_Web.honeydew;
var _this97 = thx_color_palettes_Web.names;
if(__map_reserved["honey dew"] != null) {
	_this97.setReserved("honey dew",value97);
} else {
	_this97.h["honey dew"] = value97;
}
var value98 = thx_color_palettes_Web.hotpink = 16738740;
var _this98 = thx_color_palettes_Web.names;
if(__map_reserved["hotpink"] != null) {
	_this98.setReserved("hotpink",value98);
} else {
	_this98.h["hotpink"] = value98;
}
var value99 = thx_color_palettes_Web.hotpink;
var _this99 = thx_color_palettes_Web.names;
if(__map_reserved["hot pink"] != null) {
	_this99.setReserved("hot pink",value99);
} else {
	_this99.h["hot pink"] = value99;
}
var value100 = thx_color_palettes_Web.indianred = 13458524;
var _this100 = thx_color_palettes_Web.names;
if(__map_reserved["indianred"] != null) {
	_this100.setReserved("indianred",value100);
} else {
	_this100.h["indianred"] = value100;
}
var value101 = thx_color_palettes_Web.indianred;
var _this101 = thx_color_palettes_Web.names;
if(__map_reserved["indian red"] != null) {
	_this101.setReserved("indian red",value101);
} else {
	_this101.h["indian red"] = value101;
}
var value102 = thx_color_palettes_Web.indigo = 4915330;
var _this102 = thx_color_palettes_Web.names;
if(__map_reserved["indigo"] != null) {
	_this102.setReserved("indigo",value102);
} else {
	_this102.h["indigo"] = value102;
}
var value103 = thx_color_palettes_Web.ivory = 16777200;
var _this103 = thx_color_palettes_Web.names;
if(__map_reserved["ivory"] != null) {
	_this103.setReserved("ivory",value103);
} else {
	_this103.h["ivory"] = value103;
}
var value104 = thx_color_palettes_Web.khaki = 15787660;
var _this104 = thx_color_palettes_Web.names;
if(__map_reserved["khaki"] != null) {
	_this104.setReserved("khaki",value104);
} else {
	_this104.h["khaki"] = value104;
}
var value105 = thx_color_palettes_Web.lavender = 15132410;
var _this105 = thx_color_palettes_Web.names;
if(__map_reserved["lavender"] != null) {
	_this105.setReserved("lavender",value105);
} else {
	_this105.h["lavender"] = value105;
}
var value106 = thx_color_palettes_Web.lavenderblush = 16773365;
var _this106 = thx_color_palettes_Web.names;
if(__map_reserved["lavenderblush"] != null) {
	_this106.setReserved("lavenderblush",value106);
} else {
	_this106.h["lavenderblush"] = value106;
}
var value107 = thx_color_palettes_Web.lavenderblush;
var _this107 = thx_color_palettes_Web.names;
if(__map_reserved["lavender blush"] != null) {
	_this107.setReserved("lavender blush",value107);
} else {
	_this107.h["lavender blush"] = value107;
}
var value108 = thx_color_palettes_Web.lawngreen = 8190976;
var _this108 = thx_color_palettes_Web.names;
if(__map_reserved["lawngreen"] != null) {
	_this108.setReserved("lawngreen",value108);
} else {
	_this108.h["lawngreen"] = value108;
}
var value109 = thx_color_palettes_Web.lawngreen;
var _this109 = thx_color_palettes_Web.names;
if(__map_reserved["lawn green"] != null) {
	_this109.setReserved("lawn green",value109);
} else {
	_this109.h["lawn green"] = value109;
}
var value110 = thx_color_palettes_Web.lemonchiffon = 16775885;
var _this110 = thx_color_palettes_Web.names;
if(__map_reserved["lemonchiffon"] != null) {
	_this110.setReserved("lemonchiffon",value110);
} else {
	_this110.h["lemonchiffon"] = value110;
}
var value111 = thx_color_palettes_Web.lemonchiffon;
var _this111 = thx_color_palettes_Web.names;
if(__map_reserved["lemon chiffon"] != null) {
	_this111.setReserved("lemon chiffon",value111);
} else {
	_this111.h["lemon chiffon"] = value111;
}
var value112 = thx_color_palettes_Web.lightblue = 11393254;
var _this112 = thx_color_palettes_Web.names;
if(__map_reserved["lightblue"] != null) {
	_this112.setReserved("lightblue",value112);
} else {
	_this112.h["lightblue"] = value112;
}
var value113 = thx_color_palettes_Web.lightblue;
var _this113 = thx_color_palettes_Web.names;
if(__map_reserved["light blue"] != null) {
	_this113.setReserved("light blue",value113);
} else {
	_this113.h["light blue"] = value113;
}
var value114 = thx_color_palettes_Web.lightcoral = 15761536;
var _this114 = thx_color_palettes_Web.names;
if(__map_reserved["lightcoral"] != null) {
	_this114.setReserved("lightcoral",value114);
} else {
	_this114.h["lightcoral"] = value114;
}
var value115 = thx_color_palettes_Web.lightcoral;
var _this115 = thx_color_palettes_Web.names;
if(__map_reserved["light coral"] != null) {
	_this115.setReserved("light coral",value115);
} else {
	_this115.h["light coral"] = value115;
}
var value116 = thx_color_palettes_Web.lightcyan = 14745599;
var _this116 = thx_color_palettes_Web.names;
if(__map_reserved["lightcyan"] != null) {
	_this116.setReserved("lightcyan",value116);
} else {
	_this116.h["lightcyan"] = value116;
}
var value117 = thx_color_palettes_Web.lightcyan;
var _this117 = thx_color_palettes_Web.names;
if(__map_reserved["light cyan"] != null) {
	_this117.setReserved("light cyan",value117);
} else {
	_this117.h["light cyan"] = value117;
}
var value118 = thx_color_palettes_Web.lightgoldenrodyellow = 16448210;
var _this118 = thx_color_palettes_Web.names;
if(__map_reserved["lightgoldenrodyellow"] != null) {
	_this118.setReserved("lightgoldenrodyellow",value118);
} else {
	_this118.h["lightgoldenrodyellow"] = value118;
}
var value119 = thx_color_palettes_Web.lightgoldenrodyellow;
var _this119 = thx_color_palettes_Web.names;
if(__map_reserved["light golden rod yellow"] != null) {
	_this119.setReserved("light golden rod yellow",value119);
} else {
	_this119.h["light golden rod yellow"] = value119;
}
var value120 = thx_color_palettes_Web.lightgray = thx_color_palettes_Web.lightgrey = 13882323;
var _this120 = thx_color_palettes_Web.names;
if(__map_reserved["lightgray"] != null) {
	_this120.setReserved("lightgray",value120);
} else {
	_this120.h["lightgray"] = value120;
}
var value121 = thx_color_palettes_Web.lightgray;
var _this121 = thx_color_palettes_Web.names;
if(__map_reserved["light gray"] != null) {
	_this121.setReserved("light gray",value121);
} else {
	_this121.h["light gray"] = value121;
}
var value122 = thx_color_palettes_Web.lightgrey;
var _this122 = thx_color_palettes_Web.names;
if(__map_reserved["lightgrey"] != null) {
	_this122.setReserved("lightgrey",value122);
} else {
	_this122.h["lightgrey"] = value122;
}
var value123 = thx_color_palettes_Web.lightgrey;
var _this123 = thx_color_palettes_Web.names;
if(__map_reserved["light grey"] != null) {
	_this123.setReserved("light grey",value123);
} else {
	_this123.h["light grey"] = value123;
}
var value124 = thx_color_palettes_Web.lightgreen = 9498256;
var _this124 = thx_color_palettes_Web.names;
if(__map_reserved["lightgreen"] != null) {
	_this124.setReserved("lightgreen",value124);
} else {
	_this124.h["lightgreen"] = value124;
}
var value125 = thx_color_palettes_Web.lightgreen;
var _this125 = thx_color_palettes_Web.names;
if(__map_reserved["light green"] != null) {
	_this125.setReserved("light green",value125);
} else {
	_this125.h["light green"] = value125;
}
var value126 = thx_color_palettes_Web.lightpink = 16758465;
var _this126 = thx_color_palettes_Web.names;
if(__map_reserved["lightpink"] != null) {
	_this126.setReserved("lightpink",value126);
} else {
	_this126.h["lightpink"] = value126;
}
var value127 = thx_color_palettes_Web.lightpink;
var _this127 = thx_color_palettes_Web.names;
if(__map_reserved["light pink"] != null) {
	_this127.setReserved("light pink",value127);
} else {
	_this127.h["light pink"] = value127;
}
var value128 = thx_color_palettes_Web.lightsalmon = 16752762;
var _this128 = thx_color_palettes_Web.names;
if(__map_reserved["lightsalmon"] != null) {
	_this128.setReserved("lightsalmon",value128);
} else {
	_this128.h["lightsalmon"] = value128;
}
var value129 = thx_color_palettes_Web.lightsalmon;
var _this129 = thx_color_palettes_Web.names;
if(__map_reserved["light salmon"] != null) {
	_this129.setReserved("light salmon",value129);
} else {
	_this129.h["light salmon"] = value129;
}
var value130 = thx_color_palettes_Web.lightseagreen = 2142890;
var _this130 = thx_color_palettes_Web.names;
if(__map_reserved["lightseagreen"] != null) {
	_this130.setReserved("lightseagreen",value130);
} else {
	_this130.h["lightseagreen"] = value130;
}
var value131 = thx_color_palettes_Web.lightseagreen;
var _this131 = thx_color_palettes_Web.names;
if(__map_reserved["light sea green"] != null) {
	_this131.setReserved("light sea green",value131);
} else {
	_this131.h["light sea green"] = value131;
}
var value132 = thx_color_palettes_Web.lightskyblue = 8900346;
var _this132 = thx_color_palettes_Web.names;
if(__map_reserved["lightskyblue"] != null) {
	_this132.setReserved("lightskyblue",value132);
} else {
	_this132.h["lightskyblue"] = value132;
}
var value133 = thx_color_palettes_Web.lightskyblue;
var _this133 = thx_color_palettes_Web.names;
if(__map_reserved["light sky blue"] != null) {
	_this133.setReserved("light sky blue",value133);
} else {
	_this133.h["light sky blue"] = value133;
}
var value134 = thx_color_palettes_Web.lightslategray = thx_color_palettes_Web.lightslategrey = 7833753;
var _this134 = thx_color_palettes_Web.names;
if(__map_reserved["lightslategray"] != null) {
	_this134.setReserved("lightslategray",value134);
} else {
	_this134.h["lightslategray"] = value134;
}
var value135 = thx_color_palettes_Web.lightslategray;
var _this135 = thx_color_palettes_Web.names;
if(__map_reserved["light slate gray"] != null) {
	_this135.setReserved("light slate gray",value135);
} else {
	_this135.h["light slate gray"] = value135;
}
var value136 = thx_color_palettes_Web.lightslategrey;
var _this136 = thx_color_palettes_Web.names;
if(__map_reserved["lightslategrey"] != null) {
	_this136.setReserved("lightslategrey",value136);
} else {
	_this136.h["lightslategrey"] = value136;
}
var value137 = thx_color_palettes_Web.lightslategrey;
var _this137 = thx_color_palettes_Web.names;
if(__map_reserved["light slate grey"] != null) {
	_this137.setReserved("light slate grey",value137);
} else {
	_this137.h["light slate grey"] = value137;
}
var value138 = thx_color_palettes_Web.lightsteelblue = 11584734;
var _this138 = thx_color_palettes_Web.names;
if(__map_reserved["lightsteelblue"] != null) {
	_this138.setReserved("lightsteelblue",value138);
} else {
	_this138.h["lightsteelblue"] = value138;
}
var value139 = thx_color_palettes_Web.lightsteelblue;
var _this139 = thx_color_palettes_Web.names;
if(__map_reserved["light steel blue"] != null) {
	_this139.setReserved("light steel blue",value139);
} else {
	_this139.h["light steel blue"] = value139;
}
var value140 = thx_color_palettes_Web.lightyellow = 16777184;
var _this140 = thx_color_palettes_Web.names;
if(__map_reserved["lightyellow"] != null) {
	_this140.setReserved("lightyellow",value140);
} else {
	_this140.h["lightyellow"] = value140;
}
var value141 = thx_color_palettes_Web.lightyellow;
var _this141 = thx_color_palettes_Web.names;
if(__map_reserved["light yellow"] != null) {
	_this141.setReserved("light yellow",value141);
} else {
	_this141.h["light yellow"] = value141;
}
var value142 = thx_color_palettes_Web.lime = 65280;
var _this142 = thx_color_palettes_Web.names;
if(__map_reserved["lime"] != null) {
	_this142.setReserved("lime",value142);
} else {
	_this142.h["lime"] = value142;
}
var value143 = thx_color_palettes_Web.limegreen = 3329330;
var _this143 = thx_color_palettes_Web.names;
if(__map_reserved["limegreen"] != null) {
	_this143.setReserved("limegreen",value143);
} else {
	_this143.h["limegreen"] = value143;
}
var value144 = thx_color_palettes_Web.limegreen;
var _this144 = thx_color_palettes_Web.names;
if(__map_reserved["lime green"] != null) {
	_this144.setReserved("lime green",value144);
} else {
	_this144.h["lime green"] = value144;
}
var value145 = thx_color_palettes_Web.linen = 16445670;
var _this145 = thx_color_palettes_Web.names;
if(__map_reserved["linen"] != null) {
	_this145.setReserved("linen",value145);
} else {
	_this145.h["linen"] = value145;
}
var value146 = thx_color_palettes_Web.magenta = 16711935;
var _this146 = thx_color_palettes_Web.names;
if(__map_reserved["magenta"] != null) {
	_this146.setReserved("magenta",value146);
} else {
	_this146.h["magenta"] = value146;
}
var value147 = thx_color_palettes_Web.maroon = 8388608;
var _this147 = thx_color_palettes_Web.names;
if(__map_reserved["maroon"] != null) {
	_this147.setReserved("maroon",value147);
} else {
	_this147.h["maroon"] = value147;
}
var value148 = thx_color_palettes_Web.mediumaquamarine = 6737322;
var _this148 = thx_color_palettes_Web.names;
if(__map_reserved["mediumaquamarine"] != null) {
	_this148.setReserved("mediumaquamarine",value148);
} else {
	_this148.h["mediumaquamarine"] = value148;
}
var value149 = thx_color_palettes_Web.mediumaquamarine;
var _this149 = thx_color_palettes_Web.names;
if(__map_reserved["mediuma quamarine"] != null) {
	_this149.setReserved("mediuma quamarine",value149);
} else {
	_this149.h["mediuma quamarine"] = value149;
}
var value150 = thx_color_palettes_Web.mediumblue = 205;
var _this150 = thx_color_palettes_Web.names;
if(__map_reserved["mediumblue"] != null) {
	_this150.setReserved("mediumblue",value150);
} else {
	_this150.h["mediumblue"] = value150;
}
var value151 = thx_color_palettes_Web.mediumblue;
var _this151 = thx_color_palettes_Web.names;
if(__map_reserved["medium blue"] != null) {
	_this151.setReserved("medium blue",value151);
} else {
	_this151.h["medium blue"] = value151;
}
var value152 = thx_color_palettes_Web.mediumorchid = 12211667;
var _this152 = thx_color_palettes_Web.names;
if(__map_reserved["mediumorchid"] != null) {
	_this152.setReserved("mediumorchid",value152);
} else {
	_this152.h["mediumorchid"] = value152;
}
var value153 = thx_color_palettes_Web.mediumorchid;
var _this153 = thx_color_palettes_Web.names;
if(__map_reserved["medium orchid"] != null) {
	_this153.setReserved("medium orchid",value153);
} else {
	_this153.h["medium orchid"] = value153;
}
var value154 = thx_color_palettes_Web.mediumpurple = 9662683;
var _this154 = thx_color_palettes_Web.names;
if(__map_reserved["mediumpurple"] != null) {
	_this154.setReserved("mediumpurple",value154);
} else {
	_this154.h["mediumpurple"] = value154;
}
var value155 = thx_color_palettes_Web.mediumpurple;
var _this155 = thx_color_palettes_Web.names;
if(__map_reserved["medium purple"] != null) {
	_this155.setReserved("medium purple",value155);
} else {
	_this155.h["medium purple"] = value155;
}
var value156 = thx_color_palettes_Web.mediumseagreen = 3978097;
var _this156 = thx_color_palettes_Web.names;
if(__map_reserved["mediumseagreen"] != null) {
	_this156.setReserved("mediumseagreen",value156);
} else {
	_this156.h["mediumseagreen"] = value156;
}
var value157 = thx_color_palettes_Web.mediumseagreen;
var _this157 = thx_color_palettes_Web.names;
if(__map_reserved["medium sea green"] != null) {
	_this157.setReserved("medium sea green",value157);
} else {
	_this157.h["medium sea green"] = value157;
}
var value158 = thx_color_palettes_Web.mediumslateblue = 8087790;
var _this158 = thx_color_palettes_Web.names;
if(__map_reserved["mediumslateblue"] != null) {
	_this158.setReserved("mediumslateblue",value158);
} else {
	_this158.h["mediumslateblue"] = value158;
}
var value159 = thx_color_palettes_Web.mediumslateblue;
var _this159 = thx_color_palettes_Web.names;
if(__map_reserved["medium slate blue"] != null) {
	_this159.setReserved("medium slate blue",value159);
} else {
	_this159.h["medium slate blue"] = value159;
}
var value160 = thx_color_palettes_Web.mediumspringgreen = 64154;
var _this160 = thx_color_palettes_Web.names;
if(__map_reserved["mediumspringgreen"] != null) {
	_this160.setReserved("mediumspringgreen",value160);
} else {
	_this160.h["mediumspringgreen"] = value160;
}
var value161 = thx_color_palettes_Web.mediumspringgreen;
var _this161 = thx_color_palettes_Web.names;
if(__map_reserved["medium spring green"] != null) {
	_this161.setReserved("medium spring green",value161);
} else {
	_this161.h["medium spring green"] = value161;
}
var value162 = thx_color_palettes_Web.mediumturquoise = 4772300;
var _this162 = thx_color_palettes_Web.names;
if(__map_reserved["mediumturquoise"] != null) {
	_this162.setReserved("mediumturquoise",value162);
} else {
	_this162.h["mediumturquoise"] = value162;
}
var value163 = thx_color_palettes_Web.mediumturquoise;
var _this163 = thx_color_palettes_Web.names;
if(__map_reserved["medium turquoise"] != null) {
	_this163.setReserved("medium turquoise",value163);
} else {
	_this163.h["medium turquoise"] = value163;
}
var value164 = thx_color_palettes_Web.mediumvioletred = 13047173;
var _this164 = thx_color_palettes_Web.names;
if(__map_reserved["mediumvioletred"] != null) {
	_this164.setReserved("mediumvioletred",value164);
} else {
	_this164.h["mediumvioletred"] = value164;
}
var value165 = thx_color_palettes_Web.mediumvioletred;
var _this165 = thx_color_palettes_Web.names;
if(__map_reserved["medium violet red"] != null) {
	_this165.setReserved("medium violet red",value165);
} else {
	_this165.h["medium violet red"] = value165;
}
var value166 = thx_color_palettes_Web.midnightblue = 1644912;
var _this166 = thx_color_palettes_Web.names;
if(__map_reserved["midnightblue"] != null) {
	_this166.setReserved("midnightblue",value166);
} else {
	_this166.h["midnightblue"] = value166;
}
var value167 = thx_color_palettes_Web.midnightblue;
var _this167 = thx_color_palettes_Web.names;
if(__map_reserved["midnight blue"] != null) {
	_this167.setReserved("midnight blue",value167);
} else {
	_this167.h["midnight blue"] = value167;
}
var value168 = thx_color_palettes_Web.mintcream = 16121850;
var _this168 = thx_color_palettes_Web.names;
if(__map_reserved["mintcream"] != null) {
	_this168.setReserved("mintcream",value168);
} else {
	_this168.h["mintcream"] = value168;
}
var value169 = thx_color_palettes_Web.mintcream;
var _this169 = thx_color_palettes_Web.names;
if(__map_reserved["mint cream"] != null) {
	_this169.setReserved("mint cream",value169);
} else {
	_this169.h["mint cream"] = value169;
}
var value170 = thx_color_palettes_Web.mistyrose = 16770273;
var _this170 = thx_color_palettes_Web.names;
if(__map_reserved["mistyrose"] != null) {
	_this170.setReserved("mistyrose",value170);
} else {
	_this170.h["mistyrose"] = value170;
}
var value171 = thx_color_palettes_Web.mistyrose;
var _this171 = thx_color_palettes_Web.names;
if(__map_reserved["misty rose"] != null) {
	_this171.setReserved("misty rose",value171);
} else {
	_this171.h["misty rose"] = value171;
}
var value172 = thx_color_palettes_Web.moccasin = 16770229;
var _this172 = thx_color_palettes_Web.names;
if(__map_reserved["moccasin"] != null) {
	_this172.setReserved("moccasin",value172);
} else {
	_this172.h["moccasin"] = value172;
}
var value173 = thx_color_palettes_Web.navajowhite = 16768685;
var _this173 = thx_color_palettes_Web.names;
if(__map_reserved["navajowhite"] != null) {
	_this173.setReserved("navajowhite",value173);
} else {
	_this173.h["navajowhite"] = value173;
}
var value174 = thx_color_palettes_Web.navajowhite;
var _this174 = thx_color_palettes_Web.names;
if(__map_reserved["navajo white"] != null) {
	_this174.setReserved("navajo white",value174);
} else {
	_this174.h["navajo white"] = value174;
}
var value175 = thx_color_palettes_Web.navy = 128;
var _this175 = thx_color_palettes_Web.names;
if(__map_reserved["navy"] != null) {
	_this175.setReserved("navy",value175);
} else {
	_this175.h["navy"] = value175;
}
var value176 = thx_color_palettes_Web.oldlace = 16643558;
var _this176 = thx_color_palettes_Web.names;
if(__map_reserved["oldlace"] != null) {
	_this176.setReserved("oldlace",value176);
} else {
	_this176.h["oldlace"] = value176;
}
var value177 = thx_color_palettes_Web.oldlace;
var _this177 = thx_color_palettes_Web.names;
if(__map_reserved["old lace"] != null) {
	_this177.setReserved("old lace",value177);
} else {
	_this177.h["old lace"] = value177;
}
var value178 = thx_color_palettes_Web.olive = 8421376;
var _this178 = thx_color_palettes_Web.names;
if(__map_reserved["olive"] != null) {
	_this178.setReserved("olive",value178);
} else {
	_this178.h["olive"] = value178;
}
var value179 = thx_color_palettes_Web.olivedrab = 7048739;
var _this179 = thx_color_palettes_Web.names;
if(__map_reserved["olivedrab"] != null) {
	_this179.setReserved("olivedrab",value179);
} else {
	_this179.h["olivedrab"] = value179;
}
var value180 = thx_color_palettes_Web.olivedrab;
var _this180 = thx_color_palettes_Web.names;
if(__map_reserved["olive drab"] != null) {
	_this180.setReserved("olive drab",value180);
} else {
	_this180.h["olive drab"] = value180;
}
var value181 = thx_color_palettes_Web.orange = 16753920;
var _this181 = thx_color_palettes_Web.names;
if(__map_reserved["orange"] != null) {
	_this181.setReserved("orange",value181);
} else {
	_this181.h["orange"] = value181;
}
var value182 = thx_color_palettes_Web.orangered = 16729344;
var _this182 = thx_color_palettes_Web.names;
if(__map_reserved["orangered"] != null) {
	_this182.setReserved("orangered",value182);
} else {
	_this182.h["orangered"] = value182;
}
var value183 = thx_color_palettes_Web.orangered;
var _this183 = thx_color_palettes_Web.names;
if(__map_reserved["orange red"] != null) {
	_this183.setReserved("orange red",value183);
} else {
	_this183.h["orange red"] = value183;
}
var value184 = thx_color_palettes_Web.orchid = 14315734;
var _this184 = thx_color_palettes_Web.names;
if(__map_reserved["orchid"] != null) {
	_this184.setReserved("orchid",value184);
} else {
	_this184.h["orchid"] = value184;
}
var value185 = thx_color_palettes_Web.palegoldenrod = 15657130;
var _this185 = thx_color_palettes_Web.names;
if(__map_reserved["palegoldenrod"] != null) {
	_this185.setReserved("palegoldenrod",value185);
} else {
	_this185.h["palegoldenrod"] = value185;
}
var value186 = thx_color_palettes_Web.palegoldenrod;
var _this186 = thx_color_palettes_Web.names;
if(__map_reserved["pale golden rod"] != null) {
	_this186.setReserved("pale golden rod",value186);
} else {
	_this186.h["pale golden rod"] = value186;
}
var value187 = thx_color_palettes_Web.palegreen = 10025880;
var _this187 = thx_color_palettes_Web.names;
if(__map_reserved["palegreen"] != null) {
	_this187.setReserved("palegreen",value187);
} else {
	_this187.h["palegreen"] = value187;
}
var value188 = thx_color_palettes_Web.palegreen;
var _this188 = thx_color_palettes_Web.names;
if(__map_reserved["pale green"] != null) {
	_this188.setReserved("pale green",value188);
} else {
	_this188.h["pale green"] = value188;
}
var value189 = thx_color_palettes_Web.paleturquoise = 11529966;
var _this189 = thx_color_palettes_Web.names;
if(__map_reserved["paleturquoise"] != null) {
	_this189.setReserved("paleturquoise",value189);
} else {
	_this189.h["paleturquoise"] = value189;
}
var value190 = thx_color_palettes_Web.paleturquoise;
var _this190 = thx_color_palettes_Web.names;
if(__map_reserved["pale turquoise"] != null) {
	_this190.setReserved("pale turquoise",value190);
} else {
	_this190.h["pale turquoise"] = value190;
}
var value191 = thx_color_palettes_Web.palevioletred = 14381203;
var _this191 = thx_color_palettes_Web.names;
if(__map_reserved["palevioletred"] != null) {
	_this191.setReserved("palevioletred",value191);
} else {
	_this191.h["palevioletred"] = value191;
}
var value192 = thx_color_palettes_Web.palevioletred;
var _this192 = thx_color_palettes_Web.names;
if(__map_reserved["pale violet red"] != null) {
	_this192.setReserved("pale violet red",value192);
} else {
	_this192.h["pale violet red"] = value192;
}
var value193 = thx_color_palettes_Web.papayawhip = 16773077;
var _this193 = thx_color_palettes_Web.names;
if(__map_reserved["papayawhip"] != null) {
	_this193.setReserved("papayawhip",value193);
} else {
	_this193.h["papayawhip"] = value193;
}
var value194 = thx_color_palettes_Web.papayawhip;
var _this194 = thx_color_palettes_Web.names;
if(__map_reserved["papaya whip"] != null) {
	_this194.setReserved("papaya whip",value194);
} else {
	_this194.h["papaya whip"] = value194;
}
var value195 = thx_color_palettes_Web.peachpuff = 16767673;
var _this195 = thx_color_palettes_Web.names;
if(__map_reserved["peachpuff"] != null) {
	_this195.setReserved("peachpuff",value195);
} else {
	_this195.h["peachpuff"] = value195;
}
var value196 = thx_color_palettes_Web.peachpuff;
var _this196 = thx_color_palettes_Web.names;
if(__map_reserved["peach puff"] != null) {
	_this196.setReserved("peach puff",value196);
} else {
	_this196.h["peach puff"] = value196;
}
var value197 = thx_color_palettes_Web.peru = 13468991;
var _this197 = thx_color_palettes_Web.names;
if(__map_reserved["peru"] != null) {
	_this197.setReserved("peru",value197);
} else {
	_this197.h["peru"] = value197;
}
var value198 = thx_color_palettes_Web.pink = 16761035;
var _this198 = thx_color_palettes_Web.names;
if(__map_reserved["pink"] != null) {
	_this198.setReserved("pink",value198);
} else {
	_this198.h["pink"] = value198;
}
var value199 = thx_color_palettes_Web.plum = 14524637;
var _this199 = thx_color_palettes_Web.names;
if(__map_reserved["plum"] != null) {
	_this199.setReserved("plum",value199);
} else {
	_this199.h["plum"] = value199;
}
var value200 = thx_color_palettes_Web.powderblue = 11591910;
var _this200 = thx_color_palettes_Web.names;
if(__map_reserved["powderblue"] != null) {
	_this200.setReserved("powderblue",value200);
} else {
	_this200.h["powderblue"] = value200;
}
var value201 = thx_color_palettes_Web.powderblue;
var _this201 = thx_color_palettes_Web.names;
if(__map_reserved["powder blue"] != null) {
	_this201.setReserved("powder blue",value201);
} else {
	_this201.h["powder blue"] = value201;
}
var value202 = thx_color_palettes_Web.purple = 8388736;
var _this202 = thx_color_palettes_Web.names;
if(__map_reserved["purple"] != null) {
	_this202.setReserved("purple",value202);
} else {
	_this202.h["purple"] = value202;
}
var value203 = thx_color_palettes_Web.red = 16711680;
var _this203 = thx_color_palettes_Web.names;
if(__map_reserved["red"] != null) {
	_this203.setReserved("red",value203);
} else {
	_this203.h["red"] = value203;
}
var value204 = thx_color_palettes_Web.rosybrown = 12357519;
var _this204 = thx_color_palettes_Web.names;
if(__map_reserved["rosybrown"] != null) {
	_this204.setReserved("rosybrown",value204);
} else {
	_this204.h["rosybrown"] = value204;
}
var value205 = thx_color_palettes_Web.rosybrown;
var _this205 = thx_color_palettes_Web.names;
if(__map_reserved["rosy brown"] != null) {
	_this205.setReserved("rosy brown",value205);
} else {
	_this205.h["rosy brown"] = value205;
}
var value206 = thx_color_palettes_Web.royalblue = 4286945;
var _this206 = thx_color_palettes_Web.names;
if(__map_reserved["royalblue"] != null) {
	_this206.setReserved("royalblue",value206);
} else {
	_this206.h["royalblue"] = value206;
}
var value207 = thx_color_palettes_Web.royalblue;
var _this207 = thx_color_palettes_Web.names;
if(__map_reserved["royal blue"] != null) {
	_this207.setReserved("royal blue",value207);
} else {
	_this207.h["royal blue"] = value207;
}
var value208 = thx_color_palettes_Web.saddlebrown = 9127187;
var _this208 = thx_color_palettes_Web.names;
if(__map_reserved["saddlebrown"] != null) {
	_this208.setReserved("saddlebrown",value208);
} else {
	_this208.h["saddlebrown"] = value208;
}
var value209 = thx_color_palettes_Web.saddlebrown;
var _this209 = thx_color_palettes_Web.names;
if(__map_reserved["saddle brown"] != null) {
	_this209.setReserved("saddle brown",value209);
} else {
	_this209.h["saddle brown"] = value209;
}
var value210 = thx_color_palettes_Web.salmon = 16416882;
var _this210 = thx_color_palettes_Web.names;
if(__map_reserved["salmon"] != null) {
	_this210.setReserved("salmon",value210);
} else {
	_this210.h["salmon"] = value210;
}
var value211 = thx_color_palettes_Web.sandybrown = 16032864;
var _this211 = thx_color_palettes_Web.names;
if(__map_reserved["sandybrown"] != null) {
	_this211.setReserved("sandybrown",value211);
} else {
	_this211.h["sandybrown"] = value211;
}
var value212 = thx_color_palettes_Web.sandybrown;
var _this212 = thx_color_palettes_Web.names;
if(__map_reserved["sandy brown"] != null) {
	_this212.setReserved("sandy brown",value212);
} else {
	_this212.h["sandy brown"] = value212;
}
var value213 = thx_color_palettes_Web.seagreen = 3050327;
var _this213 = thx_color_palettes_Web.names;
if(__map_reserved["seagreen"] != null) {
	_this213.setReserved("seagreen",value213);
} else {
	_this213.h["seagreen"] = value213;
}
var value214 = thx_color_palettes_Web.seagreen;
var _this214 = thx_color_palettes_Web.names;
if(__map_reserved["sea green"] != null) {
	_this214.setReserved("sea green",value214);
} else {
	_this214.h["sea green"] = value214;
}
var value215 = thx_color_palettes_Web.seashell = 16774638;
var _this215 = thx_color_palettes_Web.names;
if(__map_reserved["seashell"] != null) {
	_this215.setReserved("seashell",value215);
} else {
	_this215.h["seashell"] = value215;
}
var value216 = thx_color_palettes_Web.seashell;
var _this216 = thx_color_palettes_Web.names;
if(__map_reserved["sea shell"] != null) {
	_this216.setReserved("sea shell",value216);
} else {
	_this216.h["sea shell"] = value216;
}
var value217 = thx_color_palettes_Web.sienna = 10506797;
var _this217 = thx_color_palettes_Web.names;
if(__map_reserved["sienna"] != null) {
	_this217.setReserved("sienna",value217);
} else {
	_this217.h["sienna"] = value217;
}
var value218 = thx_color_palettes_Web.silver = 12632256;
var _this218 = thx_color_palettes_Web.names;
if(__map_reserved["silver"] != null) {
	_this218.setReserved("silver",value218);
} else {
	_this218.h["silver"] = value218;
}
var value219 = thx_color_palettes_Web.skyblue = 8900331;
var _this219 = thx_color_palettes_Web.names;
if(__map_reserved["skyblue"] != null) {
	_this219.setReserved("skyblue",value219);
} else {
	_this219.h["skyblue"] = value219;
}
var value220 = thx_color_palettes_Web.skyblue;
var _this220 = thx_color_palettes_Web.names;
if(__map_reserved["sky blue"] != null) {
	_this220.setReserved("sky blue",value220);
} else {
	_this220.h["sky blue"] = value220;
}
var value221 = thx_color_palettes_Web.slateblue = 6970061;
var _this221 = thx_color_palettes_Web.names;
if(__map_reserved["slateblue"] != null) {
	_this221.setReserved("slateblue",value221);
} else {
	_this221.h["slateblue"] = value221;
}
var value222 = thx_color_palettes_Web.slateblue;
var _this222 = thx_color_palettes_Web.names;
if(__map_reserved["slate blue"] != null) {
	_this222.setReserved("slate blue",value222);
} else {
	_this222.h["slate blue"] = value222;
}
var value223 = thx_color_palettes_Web.slategray = thx_color_palettes_Web.slategrey = 7372944;
var _this223 = thx_color_palettes_Web.names;
if(__map_reserved["slategray"] != null) {
	_this223.setReserved("slategray",value223);
} else {
	_this223.h["slategray"] = value223;
}
var value224 = thx_color_palettes_Web.slategray;
var _this224 = thx_color_palettes_Web.names;
if(__map_reserved["slate gray"] != null) {
	_this224.setReserved("slate gray",value224);
} else {
	_this224.h["slate gray"] = value224;
}
var value225 = thx_color_palettes_Web.slategrey;
var _this225 = thx_color_palettes_Web.names;
if(__map_reserved["slategrey"] != null) {
	_this225.setReserved("slategrey",value225);
} else {
	_this225.h["slategrey"] = value225;
}
var value226 = thx_color_palettes_Web.slategrey;
var _this226 = thx_color_palettes_Web.names;
if(__map_reserved["slate grey"] != null) {
	_this226.setReserved("slate grey",value226);
} else {
	_this226.h["slate grey"] = value226;
}
var value227 = thx_color_palettes_Web.snow = 16775930;
var _this227 = thx_color_palettes_Web.names;
if(__map_reserved["snow"] != null) {
	_this227.setReserved("snow",value227);
} else {
	_this227.h["snow"] = value227;
}
var value228 = thx_color_palettes_Web.springgreen = 65407;
var _this228 = thx_color_palettes_Web.names;
if(__map_reserved["springgreen"] != null) {
	_this228.setReserved("springgreen",value228);
} else {
	_this228.h["springgreen"] = value228;
}
var value229 = thx_color_palettes_Web.springgreen;
var _this229 = thx_color_palettes_Web.names;
if(__map_reserved["spring green"] != null) {
	_this229.setReserved("spring green",value229);
} else {
	_this229.h["spring green"] = value229;
}
var value230 = thx_color_palettes_Web.steelblue = 4620980;
var _this230 = thx_color_palettes_Web.names;
if(__map_reserved["steelblue"] != null) {
	_this230.setReserved("steelblue",value230);
} else {
	_this230.h["steelblue"] = value230;
}
var value231 = thx_color_palettes_Web.steelblue;
var _this231 = thx_color_palettes_Web.names;
if(__map_reserved["steel blue"] != null) {
	_this231.setReserved("steel blue",value231);
} else {
	_this231.h["steel blue"] = value231;
}
var value232 = thx_color_palettes_Web.tan = 13808780;
var _this232 = thx_color_palettes_Web.names;
if(__map_reserved["tan"] != null) {
	_this232.setReserved("tan",value232);
} else {
	_this232.h["tan"] = value232;
}
var value233 = thx_color_palettes_Web.teal = 32896;
var _this233 = thx_color_palettes_Web.names;
if(__map_reserved["teal"] != null) {
	_this233.setReserved("teal",value233);
} else {
	_this233.h["teal"] = value233;
}
var value234 = thx_color_palettes_Web.thistle = 14204888;
var _this234 = thx_color_palettes_Web.names;
if(__map_reserved["thistle"] != null) {
	_this234.setReserved("thistle",value234);
} else {
	_this234.h["thistle"] = value234;
}
var value235 = thx_color_palettes_Web.tomato = 16737095;
var _this235 = thx_color_palettes_Web.names;
if(__map_reserved["tomato"] != null) {
	_this235.setReserved("tomato",value235);
} else {
	_this235.h["tomato"] = value235;
}
var value236 = thx_color_palettes_Web.turquoise = 4251856;
var _this236 = thx_color_palettes_Web.names;
if(__map_reserved["turquoise"] != null) {
	_this236.setReserved("turquoise",value236);
} else {
	_this236.h["turquoise"] = value236;
}
var value237 = thx_color_palettes_Web.violet = 15631086;
var _this237 = thx_color_palettes_Web.names;
if(__map_reserved["violet"] != null) {
	_this237.setReserved("violet",value237);
} else {
	_this237.h["violet"] = value237;
}
var value238 = thx_color_palettes_Web.wheat = 16113331;
var _this238 = thx_color_palettes_Web.names;
if(__map_reserved["wheat"] != null) {
	_this238.setReserved("wheat",value238);
} else {
	_this238.h["wheat"] = value238;
}
var value239 = thx_color_palettes_Web.white = 16777215;
var _this239 = thx_color_palettes_Web.names;
if(__map_reserved["white"] != null) {
	_this239.setReserved("white",value239);
} else {
	_this239.h["white"] = value239;
}
var value240 = thx_color_palettes_Web.whitesmoke = 16119285;
var _this240 = thx_color_palettes_Web.names;
if(__map_reserved["whitesmoke"] != null) {
	_this240.setReserved("whitesmoke",value240);
} else {
	_this240.h["whitesmoke"] = value240;
}
var value241 = thx_color_palettes_Web.whitesmoke;
var _this241 = thx_color_palettes_Web.names;
if(__map_reserved["white smoke"] != null) {
	_this241.setReserved("white smoke",value241);
} else {
	_this241.h["white smoke"] = value241;
}
var value242 = thx_color_palettes_Web.yellow = 16776960;
var _this242 = thx_color_palettes_Web.names;
if(__map_reserved["yellow"] != null) {
	_this242.setReserved("yellow",value242);
} else {
	_this242.h["yellow"] = value242;
}
var value243 = thx_color_palettes_Web.yellowgreen = 10145074;
var _this243 = thx_color_palettes_Web.names;
if(__map_reserved["yellowgreen"] != null) {
	_this243.setReserved("yellowgreen",value243);
} else {
	_this243.h["yellowgreen"] = value243;
}
var value244 = thx_color_palettes_Web.yellowgreen;
var _this244 = thx_color_palettes_Web.names;
if(__map_reserved["yellow green"] != null) {
	_this244.setReserved("yellow green",value244);
} else {
	_this244.h["yellow green"] = value244;
}
DateTools.DAYS_OF_MONTH = [31,28,31,30,31,30,31,31,30,31,30,31];
GJK1D.__meta__ = { obj : { await : null}, fields : { demo : { async : null}}};
GJK2D.__meta__ = { obj : { await : null}, fields : { demo : { async : null}}};
glm_GLM.EPSILON = 0.0000001;
haxe__$Int32_Int32_$Impl_$._mul = Math.imul != null ? Math.imul : function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
minicanvas_MiniCanvas.displayGenerationTime = false;
minicanvas_BrowserCanvas._backingStoreRatio = 0;
minicanvas_BrowserCanvas.attachKeyEventsToCanvas = false;
minicanvas_BrowserCanvas.defaultScaleMode = minicanvas_ScaleMode.Auto;
minicanvas_BrowserCanvas.parentNode = typeof document != 'undefined' && document.body;
minicanvas_NodeCanvas.defaultScaleMode = minicanvas_ScaleMode.NoScale;
minicanvas_NodeCanvas.imagePath = "images";
thx_Dates.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Dates.compare);
thx_Floats.TOLERANCE = 10e-5;
thx_Floats.EPSILON = 1e-9;
thx_Floats.pattern_parse = new EReg("^(\\+|-)?\\d+(\\.\\d+)?(e-?\\d+)?$","");
thx_Floats.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Floats.compare);
thx_Floats.monoid = { zero : 0.0, append : function(a,b) {
	return a + b;
}};
thx_Ints.pattern_parse = new EReg("^[ \t\r\n]*[+-]?(\\d+|0x[0-9A-F]+)","i");
thx_Ints.BASE = "0123456789abcdefghijklmnopqrstuvwxyz";
thx_Ints.order = function(i0,i1) {
	if(i0 > i1) {
		return thx_OrderingImpl.GT;
	} else if(i0 == i1) {
		return thx_OrderingImpl.EQ;
	} else {
		return thx_OrderingImpl.LT;
	}
};
thx_Ints.monoid = { zero : 0, append : function(a,b) {
	return a + b;
}};
thx_Orderings.monoid = { zero : thx_OrderingImpl.EQ, append : function(o0,o1) {
	switch(o0[1]) {
	case 0:
		return thx_OrderingImpl.LT;
	case 1:
		return thx_OrderingImpl.GT;
	case 2:
		return o1;
	}
}};
thx_Strings.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Strings.compare);
thx_Strings.HASCODE_MAX = 2147483647;
thx_Strings.HASCODE_MUL = 31;
thx_Strings.monoid = { zero : "", append : function(a,b) {
	return a + b;
}};
thx_Strings.UCWORDS = new EReg("[^a-zA-Z]([a-z])","g");
thx_Strings.IS_BREAKINGWHITESPACE = new EReg("[^\t\n\r ]","");
thx_Strings.IS_ALPHA = new EReg("[^a-zA-Z]","");
thx_Strings.UCWORDSWS = new EReg("[ \t\r\n][a-z]","g");
thx_Strings.ALPHANUM = new EReg("^[a-z0-9]+$","i");
thx_Strings.DIGITS = new EReg("^[0-9]+$","");
thx_Strings.STRIPTAGS = new EReg("</?[a-z]+[^>]*>","gi");
thx_Strings.WSG = new EReg("[ \t\r\n]+","g");
thx_Strings.SPLIT_LINES = new EReg("\r\n|\n\r|\n|\r","g");
thx_Strings.CANONICALIZE_LINES = new EReg("\r\n|\n\r|\r","g");
thx_Timer.FRAME_RATE = Math.round(16.666666666666668);
thx_color__$CubeHelix_CubeHelix_$Impl_$.A = -0.14861;
thx_color__$CubeHelix_CubeHelix_$Impl_$.B = 1.78277;
thx_color__$CubeHelix_CubeHelix_$Impl_$.C = -0.29227;
thx_color__$CubeHelix_CubeHelix_$Impl_$.D = -0.90649;
thx_color__$CubeHelix_CubeHelix_$Impl_$.E = 1.97294;
thx_color__$CubeHelix_CubeHelix_$Impl_$.ED = -1.7884503806;
thx_color__$CubeHelix_CubeHelix_$Impl_$.EB = 3.5172982438;
thx_color__$CubeHelix_CubeHelix_$Impl_$.BC_DA = -0.65576366679999987;
thx_color__$Grey_Grey_$Impl_$.black = (function($this) {
	var $r;
	var this1 = 0;
	$r = this1;
	return $r;
}(this));
thx_color__$Grey_Grey_$Impl_$.white = (function($this) {
	var $r;
	var this1 = 1;
	$r = this1;
	return $r;
}(this));
thx_color__$Xyz_Xyz_$Impl_$.whiteReference = (function($this) {
	var $r;
	var this1 = [0.95047,1,1.08883];
	$r = this1;
	return $r;
}(this));
thx_color__$Xyz_Xyz_$Impl_$.epsilon = 0.0088564516790356311;
thx_color__$Xyz_Xyz_$Impl_$.kappa = 903.2962962962963;
thx_color_parse_ColorParser.parser = new thx_color_parse_ColorParser();
thx_color_parse_ColorParser.isPureHex = new EReg("^([0-9a-f]{2}){3,4}$","i");
thx_fp__$Map_Map_$Impl_$.delta = 5;
thx_fp__$Map_Map_$Impl_$.ratio = 2;
tink_core_FutureTrigger.depth = 0;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
